<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>CircuitPython.org Boards</title>
<link>https://circuitpython.org/</link>
<description>A list of CircuitPython and Blinka supported boards</description>
<lastBuildDate>Thu, 18 Feb 2021 05:12:19 -0500</lastBuildDate>
<item>
    <title>Commander</title>
    <link>https://circuitpython.org/board/8086_commander/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/8086_commander.jpg 300w,
               /assets/images/boards/large/8086_commander.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/8086_commander.jpg" alt="Image of Board">

<p>By 8086 Consultancy</p> <p>The Commander is a handheld button and LED board supplied with the UF2 bootloader and CircuitPython.</p>

<h2 id="specifications">Specifications</h2>

<ul>
  <li>Dimensions: 83 x 52 x 7 mm</li>
  <li>Atmel ATSAMD21G18A (32-bit ARM Cortex M0)</li>
  <li>48 Mhz</li>
  <li>32 KB SRAM / 256 KB FLASH</li>
  <li>Accelerometer (ADXL345)</li>
  <li>Micro SD socket</li>
  <li>16 MB SPI FLASH</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.tindie.com/products/8086net/commander/">8086 Consultancy</a></li>
</ul>

 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 24 Mar 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/8086_commander/</guid>
  </item><item>
    <title>TG-Watch</title>
    <link>https://circuitpython.org/board/TG-Watch/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/TG-Watch.jpg 300w,
               /assets/images/boards/large/TG-Watch.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/TG-Watch.jpg" alt="Image of Board">

<p>By TG-Techie</p> <p>Why buy an apple watch when you can spend your weekends building a microcontroller based “smart” watch instead? the TG-Watch is an open source, not-dumb watch meant for makers who want to hack on their watch, people who want to bring python with them everywhere, or as a great starting point to learn about programming.</p>

<p>Some of its features include:</p>
<ul>
  <li>a 240x240, 1.54” lcd</li>
  <li>capacitive touchscreen</li>
  <li>USB Type-C port (2.0)</li>
  <li>Step counter and pedometer</li>
  <li>vibration motor and haptic motor driver</li>
  <li>Bluetooth 5, Bluetooth mesh, Thread, ZigBee</li>
</ul>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/TG-Techie/TG-Watch02-PCB">Download PCB Files on Github</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/TG-Watch.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 31 Mar 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/TG-Watch/</guid>
  </item><item>
    <title>Feather RP2040</title>
    <link>https://circuitpython.org/board/adafruit_feather_rp2040/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/adafruit_feather_rp2040.jpg 300w,
               /assets/images/boards/large/adafruit_feather_rp2040.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/adafruit_feather_rp2040.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>A new chip means a new Feather, and the Raspberry Pi RP2040 is no exception. When we saw this chip we thought “this chip is going to be awesome when we give it the Feather Treatment” and so we did! This Feather features the RP2040, and all niceties you know and love about Feather</p>
<ul>
  <li>Measures 2.0” x 0.9” x 0.28” (50.8mm x 22.8mm x 7mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 5 grams</li>
  <li>RP2040 32-bit Cortex M0+ dual core running at ~125 MHz @ 3.3V logic and power</li>
  <li>264 KB RAM</li>
  <li><strong>4 MB SPI FLASH</strong> chip for storing files and CircuitPython/MicroPython code storage. No EEPROM</li>
  <li><strong>Tons of GPIO! 21 x GPIO pins with following capabilities:</strong>
    <ul>
      <li>Four 12 bit ADCs (one more than Pico)</li>
      <li>Two I2C, Two SPI and two UART peripherals, we label one for the ‘main’ interface in standard Feather locations</li>
      <li>16 x PWM outputs - for servos, LEDs, etc</li>
      <li>The 8 digital ‘non-ADC/non-peripheral’ GPIO are consecutive for maximum PIO compatibility</li>
    </ul>
  </li>
  <li><strong>Built in 200mA lipoly charger</strong> with charging status indicator LED</li>
  <li><strong>Pin #13 red LED</strong> for general purpose blinking</li>
  <li><strong>RGB NeoPixel</strong> with power pin on GPIO so you can depower it for low power usages.</li>
  <li>On-board <strong>STEMMA QT connector</strong> that lets you quickly connect any Qwiic, STEMMA QT or Grove I2C devices with no soldering!</li>
  <li><strong>Both Reset button and Bootloader select button for quick restarts (no unplugging-replugging to relaunch code)</strong></li>
  <li>3.3V Power/enable pin</li>
  <li>Optional SWD debug port can be soldered in for debug access</li>
  <li>4 mounting holes</li>
  <li>24 MHz crystal for perfect timing.</li>
  <li>3.3V regulator with 500mA peak current output</li>
  <li><strong>USB Type C connector</strong> lets you access built-in ROM USB bootloader and serial port debugging</li>
</ul>

<p>Inside the RP2040 is a ‘permanent ROM’ USB UF2 bootloader. What that means is when you want to program new firmware, you can hold down the BOOTSEL button while plugging it into USB (or pulling down the RUN/Reset pin to ground) and it will appear as a USB disk drive you can drag the firmware onto. Folks who have been using Adafruit products will find this very familiar - we use the technique on all our native-USB boards. Just note you don’t double-click reset, instead hold down BOOTSEL during boot to enter the bootloader!</p>

<p>The RP2040 is a powerful chip, which has the clock speed of our M4 (SAMD51), and two cores that are equivalent to our M0 (SAMD1). Since it is an M0 chip, it does not have a floating point unit, or DSP hardware support - so if you’re doing something with heavy floating-point math, it will be done in software and thus not as fast as an M4. For many other computational tasks, you’ll get close-to-M4 speeds!</p>

<p>For peripherals, there are two I2C controllers, two SPI controllers, and two UARTs that are multiplexed across the GPIO - check the pinout for what pins can be set to which. There are 16 PWM channels, each pin has a channel it can be set to (ditto on the pinout).</p>

<p>You’ll note there’s no I2S peripheral, or SDIO, or camera, what’s up with that? Well instead of having specific hardware support for serial-data-like peripherals like these, the RP2040 comes with the PIO state machine system which is a unique and powerful way to create custom hardware logic and data processing blocks that run on their own without taking up a CPU. For example, NeoPixels - often we bitbang the timing-specific protocol for these LEDs. For the RP2040, we instead use PIO object that reads in the data buffer and clocks out the right bitstream with perfect accuracy. Same with I2S audio in or out, LED matrix displays, 8-bit or SPI based TFTs, even VGA! In MicroPython and CircuitPython you can create PIO control commands to script the peripheral and load it in at runtime. There are 2 PIO peripherals with 4 state machines each.</p>

<p>At the time of launch, there is no Arduino core support for this board. There is great C/C++ support, an official MicroPython port, and a CircuitPython port! We of course recommend CircuitPython because we think it’s the easiest way to get started and it has support with most of our drivers, displays, sensors, and more, supported out of the box so you can follow along with our CircuitPython projects and tutorials.</p>

<p>While the RP2040 has lots of onboard RAM (264KB), it does not have built-in FLASH memory. Instead, that is provided by the external QSPI flash chip. On this board there is 4 MB, which is shared between the program it’s running and any file storage used by MicroPython or CircuitPython. When using C/C++ you get the whole flash memory, if using Python you will have about 3 MB remaining for code, files, images, fonts, etc.</p>

<p>RP2040 Chip features:</p>
<ul>
  <li>Dual ARM Cortex-M0+ @ 133MHz</li>
  <li>264kB on-chip SRAM in six independent banks</li>
  <li>Support for up to 16MB of off-chip Flash memory via dedicated QSPI bus</li>
  <li>DMA controller</li>
  <li>Fully-connected AHB crossbar</li>
  <li>Interpolator and integer divider peripherals</li>
  <li>On-chip programmable LDO to generate core voltage</li>
  <li>2 on-chip PLLs to generate USB and core clocks</li>
  <li>30 GPIO pins, 4 of which can be used as analog inputs</li>
  <li>Peripherals</li>
  <li>2 UARTs</li>
  <li>2 SPI controllers</li>
  <li>2 I2C controllers</li>
  <li>16 PWM channels</li>
  <li>USB 1.1 controller and PHY, with host and device support</li>
  <li>8 PIO state machines</li>
</ul>

<p>Comes fully assembled and tested, with the UF2 USB bootloader. We also toss in some header, so you can solder it in and plug it into a solderless breadboard.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4884">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 21 Jan 2021 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/adafruit_feather_rp2040/</guid>
  </item><item>
    <title>MagTag - 2.9" Grayscale E-Ink WiFi Display</title>
    <link>https://circuitpython.org/board/adafruit_magtag_2.9_grayscale/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/adafruit_magtag_2.9_grayscale.jpg 300w,
               /assets/images/boards/large/adafruit_magtag_2.9_grayscale.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/adafruit_magtag_2.9_grayscale.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The Adafruit MagTag combines the new ESP32-S2 wireless module and a 2.9” grayscale E-Ink display to make a low-power IoT display that can show data on its screen even when power is removed! The ESP32-S2 is great because it builds on the years of code and support for the ESP32 and also adds native USB support so you can use this board with Arduino <em>or</em> CircuitPython!</p>

<p>We designed this board to be low-power friendly - with a spot for a 350 or 420 mAh battery and built in battery charging over USB C. During deep sleep, with the NeoPixels and speaker amplifier disabled, we measured 250uA power draw so you can run for a few weeks between charges.</p>

<p>And of course, the Mag in MagTag stands for <em>magnetic</em>. <a href="https://www.adafruit.com/product/4631">We have four M3 standoffs that will work perfectly with these mini magnet feet</a>. (Originally they’re designed for RGB Matrices but they’ll do an excellent job here as well). Screw on the feet and you can attach this display to a metallic shelf, fridge, or bench.</p>

<p>Here’s the cool hardware we put together:</p>

<p><strong>Features:</strong></p>
<ul>
  <li><strong>ESP32-S2 240MHz Tensilica processor</strong> - the next generation of ESP32, now with native USB so it can act like a keyboard/mouse, MIDI device, disk drive, etc!</li>
  <li><strong>WROVER module</strong> has FCC/CE certification and comes with 4 MByte of Flash and 2 MByte of PSRAM - you can have huge data buffers</li>
  <li><strong>2.9” grayscale display with 296x128 pixels</strong>. Each pixel can be white, light gray, dark gray or black. Compared to ‘tri-color’ displays with a red pigment, this display takes a lot less time to update, only about a second instead of 15 seconds!</li>
  <li><strong>USB C</strong> power and data connector</li>
  <li><strong>Four RGB side-emitting NeoPixels</strong> so you can light up the display with any color or pattern</li>
  <li><strong>Four buttons</strong> can be used to wake up the ESP32 from deep-sleep, or select different modes</li>
  <li><strong>Triple-axis accelerometer</strong> (LIS3DH) can be used to detect orientation of the display</li>
  <li><strong>Speaker/Buzzer</strong> with mini class D amplifier on DAC output A0 can play tones or lo-fi audio clips.</li>
  <li>Front facing <strong>light sensor</strong></li>
  <li><strong>STEMMA QT</strong> port for <a href="https://www.adafruit.com/stemma">attaching all sorts of I2C devices</a></li>
  <li>Two <strong>STEMMA 3 pin JST</strong> connectors for attaching <a href="https://www.adafruit.com/product/3919">NeoPixels</a>, <a href="https://www.adafruit.com/product/3885">speakers</a>, <a href="https://www.adafruit.com/product/4326">servos</a> or <a href="https://www.adafruit.com/product/4409">relays</a>.</li>
  <li><strong>On/Off switch</strong></li>
  <li><strong>Boot</strong> and <strong>Reset buttons</strong> for re-programming</li>
</ul>

<h2 id="purchase">Purchase:</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4800">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/adafruit_magtag_2.9_grayscale.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 09 Nov 2020 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/adafruit_magtag_2.9_grayscale/</guid>
  </item><item>
    <title>Metro ESP32-S2</title>
    <link>https://circuitpython.org/board/adafruit_metro_esp32s2/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/adafruit_metro_esp32s2.jpg 300w,
               /assets/images/boards/large/adafruit_metro_esp32s2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/adafruit_metro_esp32s2.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>What’s Metro shaped and has an ESP32-S2 WiFi module? What has a STEMMA QT connector for I2C devices, and a Lipoly charger circuit? What’s finishing up testing and nearly ready for fabrication? That’s right - its the new Adafruit Metro ESP32-S2! With native USB and a load of PSRAM this board is perfect for use with CircuitPython or Arduino, to add low-cost WiFi while keeping shield-compatibility</p>

<p><strong>Features:</strong></p>
<ul>
  <li><strong>ESP32-S2 240MHz Tensilica processor</strong> - the next generation of ESP32, now with native USB so it can act like a keyboard/mouse, MIDI device, disk drive, etc!</li>
  <li><strong>WROVER module</strong> has FCC/CE certification and comes with 4 MByte of Flash and 2 MByte of PSRAM - you can have huge data buffers</li>
  <li><strong>Lotsa power options</strong> - 6-12VDC barrel jack or USB type C or Lipoly battery</li>
  <li><strong>Built in battery charging</strong> when powered over DC or USB</li>
  <li>UNO-shape so shields can plug in</li>
  <li><strong>Reset and DFU</strong> (BOOT0) buttons to get into the ROM bootloader (which is a USB serial port so you don’t need a separate cable!)</li>
  <li><strong>Serial debug pins</strong> (optional, for checking the hardware serial debug console)</li>
  <li><strong>JTAG pads</strong> for advanced debugging access.</li>
  <li><strong>On/Off switch</strong></li>
  <li><strong>STEMMA QT</strong> connector for I2C devices</li>
  <li><strong>On/Charge/User</strong> LEDs + status <strong>NeoPixel</strong></li>
  <li><strong>Works with Arduino or CircuitPython</strong></li>
</ul>

<h2 id="purchase">Purchase:</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4775">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/adafruit_metro_esp32s2.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 02 Oct 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/adafruit_metro_esp32s2/</guid>
  </item><item>
    <title>AloriumTech Evo M51</title>
    <link>https://circuitpython.org/board/aloriumtech_evo_m51/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/aloriumtech_evo_m51.jpg 300w,
               /assets/images/boards/large/aloriumtech_evo_m51.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/aloriumtech_evo_m51.jpg" alt="Image of Board">

<p>By Alorium Technology, LLC</p> <p>The Evo M51 is an FPGA-enhanced Feather compatible compute module from Alorium Technology that features a 32-bit SAMD51 microcontroller along with an Intel MAX 10 FPGA.</p>

<p>Designed for use as an embeddable system-on-module, all of the standard Feather I/O are also routed to castellated vias along the edge of the board. There are 34 additional castellated digital I/O connected to the FPGA and accessible via the SAMD51.</p>

<p>Most digital I/O connections are routed through the FPGA to and from the primary and castellated I/O.  This provides the opportunity for developers to immediately capture inputs or drive outputs from the FPGA without requiring direct interaction with the SAMD controller.</p>

<p>Evo M51 will support Alorium Technology-supplied pre-built FPGA images that target specific application use cases.  In addition, designers will have the option to develop their own custom logic blocks and integrate them into the top-level MAX 10 FPGA design.</p>

<p>Evo was specifically designed to support running CircuitPython.  It is also programmable with Arduino just like many other boards based upon the SAMD51.  So, writing and uploading firmware to the microcontroller is easy and familiar.</p>

<p><strong>Features</strong></p>
<ul>
  <li>Atmel SAMD51 32-bit ARM Cortex-M4 Microcontroller</li>
  <li>Intel MAX 10 FPGA</li>
  <li>512KB FLASH / 192KB RAM</li>
  <li>2MB External QSPI FLASH</li>
  <li>6 Analog Inputs</li>
  <li>2 Analog Outputs</li>
  <li>55 Digital I/O
    <ul>
      <li>21 Through-Hole/Castellated</li>
      <li>34 Additional Castellated-Only</li>
    </ul>
  </li>
  <li>STEMMA QT (QWIIC Compatible)</li>
  <li>Feather Footprint</li>
  <li>0.9 in. x 2.2 in.</li>
</ul>

<p><strong>Evo M51 CircuitPython Library Bundle</strong><br />
In order to take full advantage of the additional I/O on Evo M51 using CircuitPython, we have created a custom library bundle that can be found on the Alorium Technology GitHub page:</p>

<ul>
  <li><a href="https://github.com/AloriumTechnology/AloriumTech_CircuitPython_EvoM51">AloriumTech_CircuitPython_EvoM51</a></li>
  <li>Download the .ZIP file here: <a href="https://github.com/AloriumTechnology/AloriumTech_CircuitPython_EvoM51/archive/master.zip">Download .ZIP</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<p>Add any links to purchase the board</p>
<ul>
  <li><a href="https://www.aloriumtech.com/evom51-buy/">Alorium Technology</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/aloriumtech_evo_m51.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 21 May 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/aloriumtech_evo_m51/</guid>
  </item><item>
    <title>ARAMCON Badge 2019</title>
    <link>https://circuitpython.org/board/aramcon_badge_2019/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/aramcon_badge_2019.jpg 300w,
               /assets/images/boards/large/aramcon_badge_2019.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/aramcon_badge_2019.jpg" alt="Image of Board">

<p>By ARAMCON Badge Team</p> <p>nRF52840-Based Smart Badge with Bluetooth, Thread Mesh Network, 2.9” ePaper Display, Neopixels, built-in MP3 Sound decoder and more!</p>

<p><strong>Features:</strong></p>
<ul>
  <li>Nordic nRF52840 Cortex M4 Module(E73-2G4M08S1C)</li>
  <li>2.9 inch e-paper glass display(GDEW029T5)</li>
  <li>I²C Accelerometer(LIS2DH12)</li>
  <li>16MBit Serial Flash(GD25Q16C)</li>
  <li>MP3/WMA Audio Codec(VS1003)</li>
  <li>3 x CHERRY MX Keyboard Switches</li>
  <li>4 x NeoPixels</li>
  <li>SAO Connector v1.0</li>
</ul>

<h2 id="purchase">Purchase</h2>
<p>Not available for direct purchase. The badge was given to all attendees of the ARAMCON 2019 conference.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/aramcon-badge/">Github</a></li>
  <li><a href="https://medium.com/@urish/the-smart-conference-badge-we-almost-failed-shipping-edb2b1ae85b6">Medium</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/aramcon_badge_2019.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 25 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/aramcon_badge_2019/</guid>
  </item><item>
    <title>MKR WAN 1300</title>
    <link>https://circuitpython.org/board/arduino_mkr1300/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/arduino_mkr1300_01.jpg 300w,
               /assets/images/boards/large/arduino_mkr1300_01.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/arduino_mkr1300_01.jpg" alt="Image of Board">

<p>By Arduino</p> <p>Arduino MKR WAN 1300 has been designed to offer a practical and cost effective solution for makers seeking to add Lo-Ra connectivity to their projects with minimal previous experience in networking. It is based on the Microchip SAMD21 and a Murata  CMWX1ZZABZ Lo-Ra module.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.arduino.cc/usa/mkr-wan-1300">Arduino</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/arduino_mkr1300.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 12 Dec 2018 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/arduino_mkr1300/</guid>
  </item><item>
    <title>MKR Zero</title>
    <link>https://circuitpython.org/board/arduino_mkrzero/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/arduino_mkr_zero.jpg 300w,
               /assets/images/boards/large/arduino_mkr_zero.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/arduino_mkr_zero.jpg" alt="Image of Board">

<p>By Arduino</p> <p>The Arduino MKR ZERO brings you the power of a Zero in the smaller format established by the MKR form factor. The MKR ZERO board acts as a great educational tool for learning about 32-bit application development. The board is powered by Microchip’s SAMD21 MCU, which features a 32-bit ARM Cortex® M0+ core.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.arduino.cc/usa/arduino-mkrzero">Arduino</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/arduino_mkrzero.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/arduino_mkrzero/</guid>
  </item><item>
    <title>NANO 33 BLE</title>
    <link>https://circuitpython.org/board/arduino_nano_33_ble/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/arduino_nano_33_ble.jpg 300w,
               /assets/images/boards/large/arduino_nano_33_ble.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/arduino_nano_33_ble.jpg" alt="Image of Board">

<p>By Arduino</p> <p>This compact and reliable NANO board is built around the NINA B306 module, based on Nordic nRF 52840 and containing a powerful Cortex M4F. Its architecture, fully compatible with Arduino IDE Online and Offline, has a 9 axis Inertial Measurement Unit (IMU) and a reduced power consumption compared to other same size boards.
This allows the design of wearable devices and movement sensing projects that need to communicate to other devices at a close range. Arduino NANO 33 BLE is also ideal for automation projects thanks to the multiprotocol BT 5.0 radio.</p>

<p>To use this board with CircuitPython you must <a href="https://forums.adafruit.com/viewtopic.php?f=60&amp;t=158279">replace the existing bootloader</a> with the Adafruit UF2 bootloader. You need to restore the original bootloader to use the board again with Arduino.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.arduino.cc/usa/nano-33-ble">Arduino</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/arduino_nano_33_ble.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 25 Oct 2019 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/arduino_nano_33_ble/</guid>
  </item><item>
    <title>NANO 33 IoT</title>
    <link>https://circuitpython.org/board/arduino_nano_33_iot/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/arduino_nano_33_iot.jpg 300w,
               /assets/images/boards/large/arduino_nano_33_iot.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/arduino_nano_33_iot.jpg" alt="Image of Board">

<p>By Arduino</p> <p>Arduino NANO 33 IoT board has been designed to offer a practical and cost effective solution for makers seeking to add Wi-Fi connectivity to their projects (using Arduino) with minimal previous experience in networking. Learn how to set up the programming environment and get the hardware up and running, ready for your projects, in minutes.</p>

<h3 id="note-not-all-on-board-hardware-is-supported-by-circuitpython">NOTE: Not all on-board hardware is supported by CircuitPython</h3>

<p>WiFi is not supported. The LSM9DS6 and ATECC chips are supported in CircuitPython by libraries that may use more RAM than is available on the SAMD21.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.arduino.cc/usa/nano-33-iot">Arduino</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/arduino_nano_33_iot.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 27 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/arduino_nano_33_iot/</guid>
  </item><item>
    <title>Zero</title>
    <link>https://circuitpython.org/board/arduino_zero/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/arduino_zero.jpg 300w,
               /assets/images/boards/large/arduino_zero.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/arduino_zero.jpg" alt="Image of Board">

<p>By Arduino</p> <p>The Arduino Zero is a simple and powerful 32-bit extension of the platform established by the UNO. The Zero board expands the family by providing increased performance, enabling a variety of project opportunities for devices, and acts as a great educational tool for learning about 32-bit application development.</p>

<p>The Zero applications span from smart IoT devices, wearable technology, high-tech automation, to crazy robotics. The board is powered by Microchip’s SAMD21 MCU, which features a 32-bit ARM Cortex® M0+ core.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.arduino.cc/usa/arduino-zero">Arduino</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/arduino_zero.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/arduino_zero/</guid>
  </item><item>
    <title>bast_pro_mini_m0</title>
    <link>https://circuitpython.org/board/bast_pro_mini_m0/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/bast_pro_mini_m0.jpg 300w,
               /assets/images/boards/large/bast_pro_mini_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/bast_pro_mini_m0.jpg" alt="Image of Board">

<p>By Electronic Cats</p> <p>Is she the goddess of cats?</p>

<p>It’s Bast Pro Mini M0! With a powerful SAMD21E chip, an ARM Cortex-M0 based microcontroller with low power consumption and high performance, makes it ideal for endless applications.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://electroniccats.com/store/bast-pro-mini-m0/">Electronic Cats</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/bast_pro_mini_m0.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 13 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/bast_pro_mini_m0/</guid>
  </item><item>
    <title>BAST BLE</title>
    <link>https://circuitpython.org/board/bastble/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/bastble.jpg 300w,
               /assets/images/boards/large/bastble.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/bastble.jpg" alt="Image of Board">

<p>By Electronic Cats</p> <p>The Bast BLE is the new Feather family member with Bluetooth Low Energy and native USB-C support featuring the nRF52840!<br />
It’s our take on an ‘all-in-one’ Arduino-compatible + Bluetooth Low Energy with built in USB plus battery charging. 
With native USB it’s even ready to join the CircuitPython party.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://electroniccats.com/store/bast-ble/">Electronic Cats</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/bastble.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 04 Nov 2020 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/bastble/</guid>
  </item><item>
    <title>Vina-D21</title>
    <link>https://circuitpython.org/board/bdmicro_vina_d21/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/bdmicro_vina_d21.jpg 300w,
               /assets/images/boards/large/bdmicro_vina_d21.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/bdmicro_vina_d21.jpg" alt="Image of Board">

<p>By BDMICRO, LLC</p> <p>The VINA-D21 is a powerful, robust, pluggable control module designed for modular control applications. Built with all-industrial grade components and features, it is well-suited for a wide variety of automation and control requirements, including harsh environments.</p>

<p>The VINA-D21 Control Module saves time and money by providing a proven, modular design, that enables custom application-specific solutions to move from the drawing board to the finished product quickly.</p>

<p>VINA-D21 enables you to develop your application-specific board independently of the controller section. This simplifies your design, saves CAD time during the design phase, reduces errors that can cost weeks of PCB re-manufacture to correct, and saves debug time during the prototype and testing phases. By starting with VINA-D21, you start from a known-good foundation, reducing complexity and risk.</p>

<p>Incorporate the VINA-D21 in your designs over and over again and multiply your savings. Useful for custom applications, one-off projects, breadboarded prototypes, and even standalone projects. VINA-D21 has all of the common essentials built-in, on-board.</p>

<p>To get you started even more quickly, BDMICRO provides the Autodesk Eagle CAD part for VINA-D21. Getting started is as easy as downloading the part and adding it to your application specific design, allowing you to focus on your custom application’s needs, with all the right connectors, headers, and other circuitry needed for your project solution.</p>

<p>Capable of running standalone, modular piggy back on application-specific boards, or breadboarded, the VINA-D21 is a great choice for your next project.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://bdmicro.com/products/vina-d21">BDMICRO</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/bdmicro_vina_d21.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 28 Sep 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/bdmicro_vina_d21/</guid>
  </item><item>
    <title>Vina-D51</title>
    <link>https://circuitpython.org/board/bdmicro_vina_d51/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/bdmicro_vina_d51.jpg 300w,
               /assets/images/boards/large/bdmicro_vina_d51.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/bdmicro_vina_d51.jpg" alt="Image of Board">

<p>By BDMICRO, LLC</p> <p>The VINA-D51 is a powerful, robust, pluggable control module designed for modular control applications. Built with all-industrial grade components and features, it is well-suited for a wide variety of automation and control requirements, including harsh environments.</p>

<p>The VINA-D51 Control Module saves time and money by providing a proven, modular design, that enables custom application-specific solutions to move from the drawing board to the finished product quickly.</p>

<p>VINA-D51 enables you to develop your application-specific board independently of the controller section. This simplifies your design, saves CAD time during the design phase, reduces errors that can cost weeks of PCB re-manufacture to correct, and saves debug time during the prototype and testing phases. By starting with VINA-D51, you start from a known-good foundation, reducing complexity and risk.</p>

<p>Incorporate the VINA-D51 in your designs over and over again and multiply your savings. Useful for custom applications, one-off projects, breadboarded prototypes, and even standalone projects. VINA-D51 has all of the common essentials built-in, on-board.</p>

<p>To get you started even more quickly, BDMICRO provides the Autodesk Eagle CAD part for VINA-D51. Getting started is as easy as downloading the part and adding it to your application specific design, allowing you to focus on your custom application’s needs, with all the right connectors, headers, and other circuitry needed for your project solution.</p>

<p>Capable of running standalone, modular piggy back on application-specific boards, or breadboarded, the VINA-D51 is a great choice for your next project.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://bdmicro.com/collections/frontpage/products/vina-d51">BDMICRO</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/bdmicro_vina_d51.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 15 Oct 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/bdmicro_vina_d51/</guid>
  </item><item>
    <title>BLE-SS Dev Board Multi Sensor</title>
    <link>https://circuitpython.org/board/bless_dev_board_multi_sensor/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/bless_dev_board_multi_sensor.jpg 300w,
               /assets/images/boards/large/bless_dev_board_multi_sensor.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/bless_dev_board_multi_sensor.jpg" alt="Image of Board">

<p>By Switch Science, Inc.</p> <p>This development board includes a Bluetooth Low Energy-enabled ISP1807 from Insight SiP (based on the nRF52840) and six sensors: acceleration, magnetism, gyro, temperature, humidity and air pressure.</p>

<p>The development board is programmed with a bootloader. You can use the Arduino IDE or Circuit Python to develop your program. It has two switches and two LEDs each that can be used programmatically, and it also has a piezoelectric speaker.</p>

<p>It features a TPS63030 high-efficiency step-up/down converter and runs on CR2025 or CR2032 coin cell batteries. The board outline is the same as the Raspberry Pi Zero, so it can be used in a Raspberry Pi Zero case.</p>

<p><strong>Features:</strong></p>

<ul>
  <li>ISP1807 based on the nRF52840</li>
  <li>9-Axis Sensor (BXM055)</li>
  <li>Humidity and Temperature Sensor (HDC2010)</li>
  <li>Pressure Sensor (LPS22HB)</li>
  <li>Buzzer</li>
  <li>2 LEDs (Green and Red)</li>
  <li>2 Push buttons</li>
  <li>CR2032 Coin Battery supports</li>
  <li>Raspberry Pi Zero compatible board dimensions</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="http://ssci.to/6250">Switch Science, Inc.</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/bless_dev_board_multi_sensor.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 26 Jul 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/bless_dev_board_multi_sensor/</guid>
  </item><item>
    <title>BLM Badge</title>
    <link>https://circuitpython.org/board/blm_badge/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/blmbadge.jpg 300w,
               /assets/images/boards/large/blmbadge.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/blmbadge.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>Black Lives Matter interactive electronic learning kit.</p>

<p>https://www.adafruit.com/blacklivesmatter</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 01 Sep 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/blm_badge/</guid>
  </item><item>
    <title>Programmable USB Hub</title>
    <link>https://circuitpython.org/board/capablerobot_usbhub/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/capablerobot_usbhub.jpg 300w,
               /assets/images/boards/large/capablerobot_usbhub.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/capablerobot_usbhub.jpg" alt="Image of Board">

<p>By Capable Robot Components</p> <p>In addition to being a 4-port USB 2 High-Speed hub, this Programmable USB hub is also:</p>

<ul>
  <li>A CircuitPython based development board.</li>
  <li>A bridge between your computer and I2C (via Sparkfun Qwiic connectors), GPIO, and SPI (via its mikroBUS header).</li>
  <li>A power supply, providing 6 A of 5 V power to downstream devices and 13 mA resolution monitoring (per-port).</li>
  <li>A USB to TTL Serial adapter.</li>
  <li>A flexible embedded electronics test and development tool.</li>
  <li>Mountable.</li>
  <li>Functionally flexible. Open source python drivers on the upstream host and Python firmware on the internal MCU allow the behavior of this USB hub to be easily changed to suit your application and environment.</li>
</ul>

<h2 id="learn-more">Learn more</h2>
<ul>
  <li><a href="https://www.crowdsupply.com/capable-robot-components/programmable-usb-hub">Programmable USB Hub - Crowd Supply</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/capablerobot_usbhub.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 25 May 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/capablerobot_usbhub/</guid>
  </item><item>
    <title>CatWAN USB Stick</title>
    <link>https://circuitpython.org/board/catwan_usbstick/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/catwan_usbstick.jpg 300w,
               /assets/images/boards/large/catwan_usbstick.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/catwan_usbstick.jpg" alt="Image of Board">

<p>By Electronic Cats</p> <p>Are you interested in learning how LoRa works at the package level? Debugging your own LoRa hardware and trying to detect where something is wrong? Or maybe you’re writing a custom application for your Internet of Things (IoT) network with LoraWAN?</p>

<p>The CatWAN USB Stick is programmed with a special firmware image that makes it an easy-to-use LoRa sniffer. You can passively capture the data exchanges between two LoRa devices, capturing with our “LoRa Sniffer” the open source network analysis tool that we have created to use together.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://electroniccats.com/producto/catwan_usb-stick/">Electronic Cats</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/catwan_usbstick.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 02 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/catwan_usbstick/</guid>
  </item><item>
    <title>CircuitBrains Basic</title>
    <link>https://circuitpython.org/board/circuitbrains_basic_m0/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/circuitbrains_basic.jpg 300w,
               /assets/images/boards/large/circuitbrains_basic.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/circuitbrains_basic.jpg" alt="Image of Board">

<p>By Null Byte Labs LLC</p> <p>CircuitPython on an ARM Cortex M0 in 1 square inch! This “Just Add Solder” castellated module is perfect for incorporating into your own project. The CircuitBrains Basic board footprint is small enough to fit into narrow spaces and wearable projects.</p>

<p><strong>NOTE:</strong> This board does not have a USB connector for the native USB. Native USB is broken out on the header/castellations and therefore requires a non-standard USB connection such as mounting to a motherboard PCB.</p>

<h2 id="technical-specs">Technical Specs</h2>

<ul>
  <li>Dimensions: 25 x 25 x 3.5 millimeters / 1 x 1 x 0.15 inches</li>
  <li>Atmel ATSAMD21E18 Microcontroller (32-bit ARM Cortex M0)</li>
  <li>48 MHz</li>
  <li>32 KB SRAM</li>
  <li>256 KB Flash</li>
  <li>4 MB QSPI Flash</li>
  <li>Onboard 3.3V LDO Regulator</li>
  <li>Power and Status LEDs</li>
  <li>Breakouts for SPI and I2C</li>
  <li>Breakouts for 4 Analog and 8 Digital Inputs/Outputs</li>
</ul>

<h2 id="purchase">Purchase</h2>
<p>Coming soon. Follow the below links for manufacturing updates:</p>
<ul>
  <li><a href="https://kevinneubauer.com/portfolio/circuitbrains-basic/">CircuitBrains Basic Project Page</a></li>
  <li><a href="https://twitter.com/kevinneubauer">Kevin Neubauer Twitter</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/circuitbrains_basic_m0.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 27 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/circuitbrains_basic_m0/</guid>
  </item><item>
    <title>CircuitBrains Deluxe</title>
    <link>https://circuitpython.org/board/circuitbrains_deluxe_m4/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/circuitbrains_deluxe.jpg 300w,
               /assets/images/boards/large/circuitbrains_deluxe.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/circuitbrains_deluxe.jpg" alt="Image of Board">

<p>By Null Byte Labs LLC</p> <p>CircuitPython on an ARM Cortex M4 in almost 1 square inch! This “Just Add Solder” castellated module is perfect for incorporating into your own project. The CircuitBrains Deluxe board footprint is small enough to fit into narrow spaces and wearable projects.</p>

<p><strong>NOTE:</strong> This board does not have a USB connector for the native USB. Native USB is broken out on the header/castellations and therefore requires a non-standard USB connection such as mounting to a motherboard PCB.</p>

<h2 id="technical-specs">Technical Specs</h2>

<ul>
  <li>Dimensions: 29 x 29 x 3.5 millimeters / 1.15 x 1.15 x 0.15 inches</li>
  <li>Atmel ATSAMD51J19A Microcontroller (32-bit ARM Cortex M4)</li>
  <li>120 MHz</li>
  <li>192 KB SRAM</li>
  <li>512 KB Flash</li>
  <li>8 MB QSPI Flash</li>
  <li>Onboard 3.3V LDO Regulator</li>
  <li>Power and Status LEDs</li>
  <li>Breakouts for SPI and I2C</li>
  <li>Breakouts for 14 Analog and 19 Digital Inputs/Outputs</li>
</ul>

<h2 id="purchase">Purchase</h2>
<p>Coming soon. Follow the below links for manufacturing updates:</p>
<ul>
  <li><a href="https://kevinneubauer.com/portfolio/circuitbrains-deluxe/">CircuitBrains Deluxe Project Page</a></li>
  <li><a href="https://twitter.com/kevinneubauer">Kevin Neubauer Twitter</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/circuitbrains_deluxe_m4.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 27 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/circuitbrains_deluxe_m4/</guid>
  </item><item>
    <title>Circuit Playground Bluefruit</title>
    <link>https://circuitpython.org/board/circuitplayground_bluefruit/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/circuitplayground_bluefruit.jpg 300w,
               /assets/images/boards/large/circuitplayground_bluefruit.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/circuitplayground_bluefruit.jpg" alt="Image of Board">

<p>By Adafruit</p> <p><strong>Circuit Playground Bluefruit</strong> is our third board in the Circuit Playground series,
  another step towards a perfect introduction to electronics and programming. We’ve
  taken the popular Circuit Playground Express and made it even better! Now the main
  chip is an nRF52840 microcontroller which is not only more powerful, but also comes
  with Bluetooth Low Energy support for wireless connectivity.</p>

<p>The board is round and has alligator-clip pads around it so you don’t have to solder
or sew to make it work. You can power it from USB, a AAA battery pack, or with a
Lipoly battery (for advanced users). Circuit Playground Bluefruit has built-in USB
support. Built in USB means you plug it in to program it and it just shows up, no
special cable or adapter required. Just program your code into the board then take it
on the go!</p>

<p><strong>Features:</strong></p>

<ul>
  <li>1 x nRF52840 Cortex M4 processor with Bluetooth Low Energy support</li>
  <li>10 x mini NeoPixels, each one can display any color</li>
  <li>1 x Motion sensor (LIS3DH triple-axis accelerometer with tap detection, free-fall detection)</li>
  <li>1 x Temperature sensor (thermistor)</li>
  <li>1 x Light sensor (phototransistor). Can also act as a color sensor and pulse sensor.</li>
  <li>1 x Sound sensor (MEMS microphone)</li>
  <li>1 x Mini speaker with class D amplifier (7.5mm magnetic speaker/buzzer)</li>
  <li>2 x Push buttons, labeled A and B</li>
  <li>1 x Slide switch</li>
  <li>8 x alligator-clip friendly input/output pins</li>
  <li>Includes I2C, UART, 6 pins that can do analog inputs, multiple PWM outputs</li>
  <li>Green “ON” LED so you know its powered</li>
  <li>Red “#13” LED for basic blinking</li>
  <li>Reset button</li>
  <li>2 MB of SPI Flash storage, used primarily with CircuitPython to store code and libraries.</li>
  <li>MicroUSB port for programming and debugging</li>
  <li>USB port can act like serial port, keyboard, mouse, joystick or MIDI!</li>
</ul>

<h2 id="tutorials">Tutorials</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-circuit-playground-bluefruit">Circuit Playground Bluefruit Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/4333/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4333">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/circuitplayground_bluefruit.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 30 Aug 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/circuitplayground_bluefruit/</guid>
  </item><item>
    <title>Circuit Playground Express</title>
    <link>https://circuitpython.org/board/circuitplayground_express/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/circuitplayground_express.jpg 300w,
               /assets/images/boards/large/circuitplayground_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/circuitplayground_express.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The Circuit Playground Express is Adafruit’s flagship educational board designed for CircuitPython.
It brings the “batteries included” approach of Python to hardware by including an assortment of
functionality built-in. It is one of the best beginner boards available. If you are new to hardware,
then this is a great board to start with.</p>

<p>Here’s some of the great goodies baked in to each Circuit Playground Express:</p>

<ul>
  <li>10 x mini NeoPixels, each one can display any color</li>
  <li>1 x Motion sensor (LIS3DH triple-axis accelerometer with tap detection, free-fall detection)</li>
  <li>1 x Temperature sensor (thermistor)</li>
  <li>1 x Light sensor (phototransistor). Can also act as a color sensor and pulse sensor.</li>
  <li>1 x Sound sensor (MEMS microphone)</li>
  <li>1 x Mini speaker with class D amplifier (7.5mm magnetic speaker/buzzer)</li>
  <li>2 x Push buttons, labeled A and B</li>
  <li>1 x Slide switch</li>
  <li>Infrared receiver and transmitter - can receive and transmit any remote control codes, as well as send messages between Circuit Playground Expresses. Can also act as a proximity sensor.</li>
  <li>8 x alligator-clip friendly input/output pins</li>
  <li>Includes I2C, UART, 8 pins that can do analog inputs, multiple PWM output</li>
  <li>7 pads can act as capacitive touch inputs and the 1 remaining is a true analog output</li>
  <li>Green “ON” LED so you know its powered</li>
  <li>Red <code class="language-plaintext highlighter-rouge">board.D13</code> LED for basic blinking</li>
  <li>Reset button</li>
  <li>ATSAMD21 ARM Cortex M0 Processor, running at 3.3V and 48MHz</li>
  <li>2 MB of SPI Flash storage, used  to store code and libraries.</li>
  <li>MicroUSB port for programming and debugging</li>
  <li>USB port can act like serial port, keyboard, mouse, joystick or MIDI!</li>
</ul>

<h2 id="tutorials">Tutorials</h2>
<ul>
  <li><a href="https://learn.adafruit.com/adafruit-circuit-playground-express">Circuit Playground Express Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/3333/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/3333">Adafruit</a></li>
  <li><a href="https://www.digikey.com/short/p88cfj">Digi-Key</a></li>
  <li><a href="https://shop.pimoroni.com/products/circuit-playground-express-developer-edition">Pimoroni</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 12 Dec 2018 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/circuitplayground_express/</guid>
  </item><item>
    <title>Circuit Playground Express 4-H</title>
    <link>https://circuitpython.org/board/circuitplayground_express_4h/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/circuitplayground_express_4h.jpg 300w,
               /assets/images/boards/large/circuitplayground_express_4h.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/circuitplayground_express_4h.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The Circuit Playground Express is Adafruit’s flagship educational board designed for CircuitPython.
It brings the “batteries included” approach includes an assortment of
functionality built-in. It is one of the best beginner boards available. If you are new to hardware,
then this is a great board to start with. This version includes 4-H branding <a href="https://blog.adafruit.com/2019/03/18/adafruit-circuit-playground-express-4-h-edition-approved-adafruit-4h-4h-4hgrowshere/">approved by the USDA</a>.</p>

<p>Here’s some of the great goodies baked in to each Circuit Playground Express:</p>

<ul>
  <li>10 x mini NeoPixels, each one can display any color</li>
  <li>1 x Motion sensor (LIS3DH triple-axis accelerometer with tap detection, free-fall detection)</li>
  <li>1 x Temperature sensor (thermistor)</li>
  <li>1 x Light sensor (phototransistor). Can also act as a color sensor and pulse sensor.</li>
  <li>1 x Sound sensor (MEMS microphone)</li>
  <li>1 x Mini speaker with class D amplifier (7.5mm magnetic speaker/buzzer)</li>
  <li>2 x Push buttons, labeled A and B</li>
  <li>1 x Slide switch</li>
  <li>Infrared receiver and transmitter - can receive and transmit any remote control codes, as well as send messages between Circuit Playground Expresses. Can also act as a proximity sensor.</li>
  <li>8 x alligator-clip friendly input/output pins</li>
  <li>Includes I2C, UART, 8 pins that can do analog inputs, multiple PWM output</li>
  <li>7 pads can act as capacitive touch inputs and the 1 remaining is a true analog output</li>
  <li>Green “ON” LED so you know its powered</li>
  <li>Red <code class="language-plaintext highlighter-rouge">board.D13</code> LED for basic blinking</li>
  <li>Reset button</li>
  <li>ATSAMD21 ARM Cortex M0 Processor, running at 3.3V and 48MHz</li>
  <li>2 MB of SPI Flash storage, used  to store code and libraries.</li>
  <li>MicroUSB port for programming and debugging</li>
  <li>USB port can act like serial port, keyboard, mouse, joystick or MIDI!</li>
  <li>Programmable in multiple environments including Microsoft <a href="https://www.microsoft.com/en-us/makecode">MakeCode</a>, <a href="https://learn.adafruit.com/welcome-to-circuitpython">CircuitPython</a>, <a href="https://learn.adafruit.com/adafruit-circuit-playground-express/code-org-csd">Code.org CSD</a>, and the <a href="https://learn.adafruit.com/adafruit-circuit-playground-express/arduino">Arduino IDE</a></li>
</ul>

<h2 id="tutorials">Tutorials</h2>
<ul>
  <li><a href="https://learn.adafruit.com/adafruit-circuit-playground-express">Circuit Playground Express Overview</a></li>
  <li>4-H STEMLab Curriculum: <a href="https://docs.google.com/document/d/1GVcTo_lZIsQleITaE80sy2t4RPOU4SKW9SzHaNbtnh8/edit#heading=h.gd2jfvbzhwp9">Circuit Playground Express Soil Moisture Sensor</a></li>
  <li>Soil Moisture Sensor Tutorial: <a href="https://youtu.be/fsg1iP75kck">YouTube Introduction</a> and <a href="https://learn.adafruit.com/soil-moisture-sensor-with-circuit-playground-express">Adafruit Online Tutorial</a></li>
  <li><a href="https://learn.adafruit.com/category/circuit-playground">Adafruit Learning System tutorials on the Circuit Playground Express</a></li>
  <li><a href="https://makecode.adafruit.com/">Microsoft Tutorials and Projects with MakeCode</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4180">Adafruit Circuit Playground Express board (4-H Green with logo)</a></li>
  <li><a href="https://www.adafruit.com/product/3333">Circuit Playground Express board (black)</a></li>
  <li><a href="https://www.adafruit.com/product/3517">Adafruit Circuit Playground Express base kit (black)</a></li>
  <li><a href="https://shop4-h.org/products/circuit-playground-express-base-kit">Shop4-H.org base kit</a></li>
</ul>

<h2 id="other-4-h-links">Other 4-H Links</h2>
<ul>
  <li><a href="https://blog.adafruit.com/2018/11/07/national-4-h-youth-maker-summit-uses-adafruit-circuit-playground-express-4h-4hsummits-4hmaker-adafruit-circuitplaygroundexpress-msmakecode/">Adafruit attends the 2018 National 4-H Youth Maker Summit in Chevy Chase, Maryland</a></li>
  <li><a href="https://youtu.be/bdXGku9DO3Q">Microsoft teams with Brown County 4-H</a> - WBAY video (YouTube)</li>
  <li>The Adafruit Connection to 4-H: <a href="https://blog.adafruit.com/2017/11/04/4-h-electronics-makers-holland-lops-silkie-chickens-more-4h-nationofmakers/">4-H, electronics, makers, holland lops, silkie chickens &amp; more</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 13 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/circuitplayground_express_4h/</guid>
  </item><item>
    <title>Circuit Playground Express + Crickit</title>
    <link>https://circuitpython.org/board/circuitplayground_express_crickit/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/circuitplayground_express_crickit.jpg 300w,
               /assets/images/boards/large/circuitplayground_express_crickit.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/circuitplayground_express_crickit.jpg" alt="Image of Board">

<p>By Adafruit</p> <p><strong>Crickit</strong> is a <strong>C</strong>reative <strong>R</strong>obotics &amp; <strong>I</strong>nteractive <strong>C</strong>onstruction <strong>Kit</strong>. It’s an add-on for the popular Circuit Playground Express that lets you <strong>#MakeRobotFriend</strong> using CircuitPython (and more).</p>

<p>Bolt on a Circuit Playground using the included stand-off bolts and start controlling motors, servos, solenoids. With CRICKIT you also get signal pins, capacitive touch sensors, a NeoPixel driver and amplified speaker output. It complements &amp; extends the Circuit Playground so you can still use all the goodies on the CPX, but now you have a robotics playground as well.</p>

<p>The Crickit is powered by seesaw, a I2C-to-whatever bridge firmware. So you only need to use two data pins to control the huge number of inputs and outputs on the Crickit. All those timers, PWMs, sensors are offloaded to the co-processor.</p>

<p>Includes:</p>

<ul>
  <li>4 x Analog or Digital Servo control, with precision 16-bit timers</li>
  <li>2 x Bi-directional brushed DC motor control, 1 Amp current limited each, with 8-bit PWM speed control (or one stepper)</li>
  <li>4 x High current “Darlington” 500mA drive outputs with kick-back diode protection. For solenoids, relays, large LEDs, or one uni-polar stepper</li>
  <li>4 x Capacitive touch sensors with alligator-pads</li>
  <li>8 x Signal pins, digital in/out or analog inputs</li>
  <li>1 x NeoPixel driver with 5V level shifter</li>
  <li>1 x Class D, 4-8 ohm speaker, 3W-max audio amplifier</li>
</ul>

<p>All are powered via 5V DC, so you can use any 5V-powered servos, DC motors, steppers, solenoids, relays etc. To keep things simple and safe, CRIKIT does not support mixing voltages, use only 5V - not for use with 9V or 12V robotic components.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-crickit-creative-robotic-interactive-construction-kit">Circuit Playground Express + Crickit</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3333">Circuit Playground Express - Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/3093">CRICKIT for CircuitPlayground Express - Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/circuitplayground_express_crickit.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/circuitplayground_express_crickit/</guid>
  </item><item>
    <title>Circuit Playground Express Digi-Key</title>
    <link>https://circuitpython.org/board/circuitplayground_express_digikey_pycon2019/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/circuitplayground_express_digikey_pycon2019.jpg 300w,
               /assets/images/boards/large/circuitplayground_express_digikey_pycon2019.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/circuitplayground_express_digikey_pycon2019.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The Circuit Playground Express is Adafruit’s flagship educational board designed for CircuitPython.
It brings the “batteries included” approach of Python to hardware by including an assortment of
functionality built-in. It is one of the best beginner boards available. If you are new to hardware,
then this is a great board to start with.</p>

<p>Here’s some of the great goodies baked in to each Circuit Playground Express:</p>

<ul>
  <li>10 x mini NeoPixels, each one can display any color</li>
  <li>1 x Motion sensor (LIS3DH triple-axis accelerometer with tap detection, free-fall detection)</li>
  <li>1 x Temperature sensor (thermistor)</li>
  <li>1 x Light sensor (phototransistor). Can also act as a color sensor and pulse sensor.</li>
  <li>1 x Sound sensor (MEMS microphone)</li>
  <li>1 x Mini speaker with class D amplifier (7.5mm magnetic speaker/buzzer)</li>
  <li>2 x Push buttons, labeled A and B</li>
  <li>1 x Slide switch</li>
  <li>Infrared receiver and transmitter - can receive and transmit any remote control codes, as well as send messages between Circuit Playground Expresses. Can also act as a proximity sensor.</li>
  <li>8 x alligator-clip friendly input/output pins</li>
  <li>Includes I2C, UART, 8 pins that can do analog inputs, multiple PWM output</li>
  <li>7 pads can act as capacitive touch inputs and the 1 remaining is a true analog output</li>
  <li>Green “ON” LED so you know its powered</li>
  <li>Red <code class="language-plaintext highlighter-rouge">board.D13</code> LED for basic blinking</li>
  <li>Reset button</li>
  <li>ATSAMD21 ARM Cortex M0 Processor, running at 3.3V and 48MHz</li>
  <li>2 MB of SPI Flash storage, used  to store code and libraries.</li>
  <li>MicroUSB port for programming and debugging</li>
  <li>USB port can act like serial port, keyboard, mouse, joystick or MIDI!</li>
</ul>

<h2 id="tutorials">Tutorials</h2>
<ul>
  <li><a href="https://learn.adafruit.com/adafruit-circuit-playground-express">Circuit Playground Express Overview</a></li>
  <li><a href="https://learn.adafruit.com/circuitpython-made-easy-on-circuit-playground-express/">CircuitPython Made Easy on Circuit Playground Express</a></li>
</ul>

<h2 id="downloads">Downloads</h2>
<ul>
  <li><a href="https://github.com/adafruit/PyCon2019/tree/master/Default_Files">PyCon 2019 Circuit Playground Express Default Files</a></li>
  <li><a href="https://github.com/adafruit/PyCon2019/">PyCon 2019 Open Spaces Example Content</a></li>
  <li><a href="https://github.com/adafruit/PyCon2019/blob/master/PyCon%202019%20Circuit%20Playground%20Express%20Quickstart.pdf">Pycon 2019 Circuit Playground Express Quickstart Worksheet</a></li>
</ul>

<h2 id="more-information">More Information</h2>
<ul>
  <li><a href="https://blog.adafruit.com/2019/04/01/circuitpython-open-spaces-planned-for-pycon-2019-pycon-circuitplaygroundexpress-adafruit-adafruit-circuitpython/">CircuitPython Open Spaces Planned for PyCon 2019</a></li>
  <li><a href="https://blog.adafruit.com/2019/02/23/digi-key-and-adafruit-at-pycon-all-attendees-will-receive-a-circuit-playground-express-digikey-adafruit-pycon-pycon2019/">Digi-Key and Adafruit at PyCon - All attendees will receive a Circuit Playground Express!</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 13 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/circuitplayground_express_digikey_pycon2019/</guid>
  </item><item>
    <title>Circuit Playground Express + Displayio</title>
    <link>https://circuitpython.org/board/circuitplayground_express_displayio/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/circuitplayground_express_displayio.jpg 300w,
               /assets/images/boards/large/circuitplayground_express_displayio.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/circuitplayground_express_displayio.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>Extend and expand your Circuit Playground projects with a bolt on TFT Gizmo that lets you add a lovely color display in a sturdy and reliable fashion. This PCB looks just like a round TFT breakout but has permanently affixed M3 standoffs that act as mechanical and electrical connections.</p>

<p>Once attached you’ll get a 1.54” 240x240 IPS display with backlight control, two 3-pin STEMMA connectors for attaching NeoPixel strips or servos, and a Class D audio amplifier with a Molex PicoBlade connector that can plug one of our lil speakers.</p>

<p>This is a great companion for our Circuit Playground Express or Bluefruit boards thanks to their fast SPI hardware speeds, and works in Arduino and CircuitPython. You can use it with the Circuit Playground Classic but it won’t be very fast, as you have to bitbang the SPI - and the display has a lot of pixels - so it’s not recommended.</p>

<p>Comes with a PCB that has pre-soldered standoffs attached, and 12x M3 screws for attachment. Fits all Circuit Playgrounds but like we mentioned earlier, the Express and Bluefruit are recommended.</p>

<h2 id="tutorials">Tutorials</h2>
<ul>
  <li><a href="https://learn.adafruit.com/adafruit-circuit-playground-express">Circuit Playground Express Overview</a></li>
  <li><a href="https://learn.adafruit.com/adafruit-tft-gizmo">Adafruit Circuit Playground TFT Gizmo</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3333">Circuit Playground Express - Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/4367">TFT Gizmo for CircuitPlayground Express - Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/circuitplayground_express_displayio.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 16 Oct 2019 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/circuitplayground_express_displayio/</guid>
  </item><item>
    <title>CLUE NRF52840 Express</title>
    <link>https://circuitpython.org/board/clue_nrf52840_express/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/clue_nrf52840_express.jpg 300w,
               /assets/images/boards/large/clue_nrf52840_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/clue_nrf52840_express.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>We wanted to build some projects that have a small screen and a lot of sensors. This board has a 1.3″ 240×240 IPS TFT display, two buttons, and a ton of sensors:</p>

<p>LSM series 9-DoF motion - LSM6DS33 Accel/Gyro + LIS3MDL magnetometer
APDS9960 Proximity, Light, RGB, and Gesture Sensor
PDM Microphone sound sensor
Humidity, temperature and barometric environmental sensing
There’s a Qwiic / STEMMA QT connector for adding more sensors, like PM2.5 air quality and others that were too big to fit on the board.</p>

<p>We’ll be primarily using CircuitPython for programming it, but it will also work in Arduino. And of course, we’d love to see MakeCode on it!</p>

<p>After designing it, the board was close enough to micro:bit-shape-size that we moved a few parts to make it fit in micro:bit robots and some projects – the nrf52840 is a big upgrade chip and can do stuff like Tensorflow Lite for Microcontrollers, BLE central and peripheral, and more.</p>

<h2 id="tutorials">Tutorials</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-clue">CLUE Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/4500/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4500">Adafruit CLUE</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/clue_nrf52840_express.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 29 Dec 2019 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/clue_nrf52840_express/</guid>
  </item><item>
    <title>CP Sapling</title>
    <link>https://circuitpython.org/board/cp_sapling_m0/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/cp_sapling_m0.jpg 300w,
               /assets/images/boards/large/cp_sapling_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/cp_sapling_m0.jpg" alt="Image of Board">

<p>By Oak Development Technologies</p> <p>Finally, a tree that runs CircuitPython? YEP! Now you can get working in CircuitPython fast with our new CircuitPython compatible development board featuring the popular Microchip AT SAM D21 microcontroller.</p>

<p>Providing quick and easy access to SPI and I2C (pins + Stemma/Qwiic connector) so you can get your project off the ground in no time.</p>

<p>This board also comes with the SOIC-8 pads available on the bottom of the board to enable it to expand storage with SPI FLASH!</p>

<ul>
  <li><strong>ATSAMD21E18</strong> 32-bit Cortex M0+ - 48 MHz 32 bit processor with <strong>256KB Flash</strong> and <strong>32 KB RAM</strong></li>
  <li>Native USB supported by every OS - can be used in CircuitPython as USB serial console, MIDI, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with <strong>CircuitPython</strong> (Arduino coming soon!)</li>
  <li><strong>Built in BIG 3535 RGB NeoPixel LED</strong></li>
  <li><strong>8 GPIO pins</strong>:
    <ul>
      <li>2 x 12-bit analog inputs (SDA/SCL do not have analog inputs)</li>
      <li>8 x PWM outputs</li>
      <li>Hardware I2C port with STEMMA QT plug-n-play connector</li>
      <li>Hardware SPI</li>
    </ul>
  </li>
  <li>3.3V regulator with <a href="">500mA peak output</a></li>
  <li>[Optional SOIC-8 SPI Flash chip on bottom]</li>
  <li><strong>Reset switch</strong> for starting your project code over or entering bootloader mode</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.oakdev.tech/store/p7/CP-Sapling-m0-development-board.html#/">Oak Dev Tech</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/cp_sapling_m0.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 22 Nov 2020 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/cp_sapling_m0/</guid>
  </item><item>
    <title>datum-Distance</title>
    <link>https://circuitpython.org/board/datum_distance/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/datum_distance.jpg 300w,
               /assets/images/boards/large/datum_distance.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/datum_distance.jpg" alt="Image of Board">

<p>By J&J Studios</p> <p>The datum-Distance sensor combines the same SAMD21G18 microcontroller used on the Arduino Zero with the VL53LX1 distance sensor from ST Microelectronics to create the simplest, easiest to use distance sensor for your application.</p>

<p>The datum-Distance sensor emulates a serial port over a USB connection, presents the information and data stored on it in a JSON formatted packet, and processes URI style commands to change and retrieve its settings. The datum-Distance sensor fills the gap between a LEGO® Mindstorms® sensor and a breakout board.</p>

<p>The datum-Distance sensor can do much more than just collect the data. The measurement units can be customized to suit your application. Distance data can be returned in mm, cm, inches, or feet. The datum-Distance sensor does all the calculations for you.</p>

<p>It can also apply filters such as min, mix, mean, and RMS to the data stream. This truly makes the datum-Distance sensor a smart sensor that goes far beyond what a breakout board can do.</p>

<h2 id="learn-more">Learn more</h2>
<ul>
  <li><a href="https://jandjstudios.io/datum/datum-Distance/">datum-Distance Website</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://groupgets.com/campaigns/568-datum-distance">GroupGets</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/datum_distance.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 12 Jul 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/datum_distance/</guid>
  </item><item>
    <title>datum-IMU</title>
    <link>https://circuitpython.org/board/datum_imu/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/datum_imu.jpg 300w,
               /assets/images/boards/large/datum_imu.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/datum_imu.jpg" alt="Image of Board">

<p>By J&J Studios</p> <p>The datum-IMU sensor combines the same SAMD21G18 microcontroller used on the Arduino Zero with the LSM9DS1 IMU sensor from ST Microelectronics to create the simplest, easiest to use IMU sensor for your application.</p>

<p>The datum-IMU sensor emulates a serial port over a USB connection, presents the information and data stored on it in a JSON formatted packet, and processes URI style commands to change and retrieve its settings. The datum-IMU sensor fills the gap between a LEGO® Mindstorms® sensor and a breakout board.</p>

<p>The datum-IMU sensor can do much more than just collect the data. The measurement units can be customized to suit your application. IMU data can be returned in mm, cm, inches, or feet. The datum-IMU sensor does all the calculations for you.</p>

<p>It can also apply filters such as min, mix, mean, and RMS to the data stream. This truly makes the datum-IMU sensor a smart sensor that goes far beyond what a breakout board can do.</p>

<h2 id="learn-more">Learn more</h2>
<ul>
  <li><a href="https://jandjstudios.io/datum/datum-IMU/">datum-IMU Website</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://groupgets.com/campaigns/573-datum-imu">GroupGets</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/datum_imu.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 12 Jul 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/datum_imu/</guid>
  </item><item>
    <title>datum-Light</title>
    <link>https://circuitpython.org/board/datum_light/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/datum_light.jpg 300w,
               /assets/images/boards/large/datum_light.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/datum_light.jpg" alt="Image of Board">

<p>By J&J Studios</p> <p>The datum-Light sensor combines the same SAMD21G18 microcontroller used on the Arduino Zero with the APDS-9960 light sensor from Broadcom to create the simplest, easiest to use light sensor for your application.</p>

<p>The datum-Light sensor emulates a serial port over a USB connection, presents the information and data stored on it in a JSON formatted packet, and processes URI style commands to change and retrieve its settings. The datum-Light sensor fills the gap between a LEGO® Mindstorms® sensor and a breakout board.</p>

<p>The datum-Light sensor can do much more than just collect the data. The measurement units can be customized to suit your application. light data can be returned in mm, cm, inches, or feet. The datum-Light sensor does all the calculations for you.</p>

<p>It can also apply filters such as min, mix, mean, and RMS to the data stream. This truly makes the datum-Light sensor a smart sensor that goes far beyond what a breakout board can do.</p>

<h2 id="learn-more">Learn more</h2>
<ul>
  <li><a href="https://jandjstudios.io/datum/datum-Light/">datum-Light Website</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://groupgets.com/campaigns/574-datum-light">GroupGets</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/datum_light.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 12 Jul 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/datum_light/</guid>
  </item><item>
    <title>datum-Weather</title>
    <link>https://circuitpython.org/board/datum_weather/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/datum_weather.jpg 300w,
               /assets/images/boards/large/datum_weather.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/datum_weather.jpg" alt="Image of Board">

<p>By J&J Studios</p> <p>The datum-Weather sensor combines the same SAMD21G18 microcontroller used on the Arduino Zero with the BME280 environmental sensor from Bosch Sensortec to create the simplest, easiest to use weather sensor for your application.</p>

<p>The datum-Weather sensor emulates a serial port over a USB connection, presents the information and data stored on it in a JSON formatted packet, and processes URI style commands to change and retrieve its settings. The datum-Weather sensor fills the gap between a LEGO® Mindstorms® sensor and a breakout board.</p>

<p>The datum-Weather sensor can do much more than just collect the data. The measurement units can be customized to suit your application. Temperature data can be returned in degrees Farenheit or Celsius. Altitude could be in meters or feet. The datum-Weather sensor does all the calculations for you.</p>

<p>It can also apply filters such as min, mix, mean, and RMS to the data stream. This truly makes the datum-Weather sensor a smart sensor that goes far beyond what a breakout board can do.</p>

<h2 id="learn-more">Learn more</h2>
<ul>
  <li><a href="https://jandjstudios.io/datum/datum-Weather/">datum-Weather Website</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/datum_weather.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 12 Jul 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/datum_weather/</guid>
  </item><item>
    <title>DynaLoRa-USB</title>
    <link>https://circuitpython.org/board/dynalora_usb/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/dynalora_usb.jpg 300w,
               /assets/images/boards/large/dynalora_usb.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/dynalora_usb.jpg" alt="Image of Board">

<p>By BH Dynamics</p> <h2 id="overview">Overview</h2>

<p>DynaLoRa-USB is a low cost and open source, CircuitPython and Arduino compatible, LoRa tinkering dongle designed by and for makers.</p>

<p>Our aim is to facilitate access to the hottest radio technology (LoRa) through the use of maker-friendly languages such as Python and the Arduino framework. With that intent, DynaLoRa-USB is a simple device that you just plug and play with! It includes a powerful SAMD21 microcontroller and a HopeRF LoRa radio module (RFM96W for 868/915 MHz), an user button, an RGB LED and an external interface to plug your favorite peripherals.</p>

<ul>
  <li>ATSAMD21E18 48 MHz Cortex-M0+ processor with 256 KB flash + 32 KB RAM, compatible with CircuitPython and Arduino</li>
  <li>32 Mbit SPI flash for storing CircuitPython code and libraries</li>
  <li>High performance HopeRF radio module. We offer the device with the RFM96W, which is capable of LoRa modulation at 868/915 MHz, but you can easily replace it by the 433 MHz version (RFM95W) or a generic Sub-GHz radio (RFM69HCW) since they are pin compatible.</li>
  <li>User-controllable WS2812B addressable RGB LED</li>
  <li>Regular user LED</li>
  <li>3V3 @ 1A power through a DC/DC buck regulator from USB</li>
  <li>MicroSD Card slot</li>
  <li>GPIO header exposing SWD interface, a full SERCOM (enabling external SPI/I2C/UART peripherals) and a DAC for prototyping</li>
  <li>This version comes with an USB-A plug. It should be easy enough to modify the design to offer other options (such as USB-C).</li>
  <li>Comes preprogrammed with the UF2 Bootloader and latest stable release of CircuitPython.</li>
</ul>

<p>Hardware is licensed under <strong>CERN OHL v1.2</strong>.</p>

<h2 id="documentation">Documentation</h2>

<p>This board is open source hardware. You can check the docs and contribute <a href="https://github.com/BHDynamics/rfm_radio_dongle">here</a>.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/bhdynamics/dynalora-usb/">Tindie</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/dynalora_usb.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 31 Dec 1969 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/dynalora_usb/</guid>
  </item><item>
    <title>DynOSSAT-EDU EPS</title>
    <link>https://circuitpython.org/board/dynossat_edu_eps/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/dynossat_edu_eps.jpg 300w,
               /assets/images/boards/large/dynossat_edu_eps.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/dynossat_edu_eps.jpg" alt="Image of Board">

<p>By BH Dynamics</p> <p>DynOSSAT-EDU is the first open source PocketQube educational kit compatible with CircuitPython and Arduino.</p>

<p>This plaform is equipped with all the necessary modules for the operation of a nanosatellite (PocketQube)
in Low Earth Orbit (LEO) that would serve as a device for teaching, training, and driving curiosity about the philosophy and technology related to NewSpace.</p>

<p>This is the EPS (Electric Power System), the module responsible for battery management and power distribution subsystems,
including charging through solar panels using flight-proven MPPT electronics.</p>

<p>Hardware is licensed under <strong>CERN OHL v1.2</strong>.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Well-known 48 MHz Cortex-M0 ATSAMD21E18 MCU with 256 KB flash + 32 KB RAM</li>
  <li>32 Mbit SPI flash for storing CircuitPython code and libraries</li>
  <li>Flight-proven SPV1040 Maximum Power Point Tracking (MPPT) IC for solar cells power management</li>
  <li>Ultra low input voltage L6924D Lithium battery charger management IC optimized for pairing with the SPV1040</li>
  <li>Separate 5V and 3.3V power rails generated through high-performance DC/DC converters</li>
  <li>Battery Current/Voltage/Power measurement through the flight-proven INA226 digital meter</li>
  <li>Back-powering protection and load switching through the TPS22918, member of a flight-proven family of switches</li>
  <li>User-controllable WS2812B addressable RGB LED</li>
  <li>Female USB-C 2.0 connector for power and data logging</li>
  <li>Standard Molex Picoblade 1.5 mm connectors for battery and solar cells</li>
  <li>Connected to the OBC through SPI/I2C/UART for data communication and/or redundancy</li>
  <li>Comes preprogrammed with the UF2 Bootloader and CircuitPython 6.0.0</li>
</ul>

<h2 id="documentation">Documentation</h2>

<p>This board is open source hardware. You can check the docs and contribute <a href="https://github.com/BHDynamics/dynossat-edu-eps">here</a>.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/21832/">Tindie</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/dynossat_edu_eps.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 31 Dec 1969 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/dynossat_edu_eps/</guid>
  </item><item>
    <title>DynOSSAT-EDU OBC</title>
    <link>https://circuitpython.org/board/dynossat_edu_obc/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/dynossat_edu_obc.jpg 300w,
               /assets/images/boards/large/dynossat_edu_obc.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/dynossat_edu_obc.jpg" alt="Image of Board">

<p>By BH Dynamics</p> <p>DynOSSAT-EDU is the first open source PocketQube educational kit compatible with CircuitPython and Arduino.</p>

<p>This plaform is equipped with all the necessary modules for the operation of a nanosatellite (PocketQube)
in Low Earth Orbit (LEO) that would serve as a device for teaching, training, and driving curiosity about the philosophy and technology related to NewSpace.</p>

<p>This is the On-Board Computer (OBC), the module responsible for managing the satellite and process sensor data. It
integrates a 9-axis IMU, a gas sensor, a temperature sensor and carries a powerful ATSAMD51.</p>

<p>Hardware is licensed under <strong>CERN OHL v1.2</strong>.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>Powerful ATSAMD51J20A-AU 120 MHz Cortex-M4F processor with 1 MB flash + 256 KB RAM for all your CircuitPython needs</li>
  <li>32 Mbit SPI flash for storing CircuitPython code and libraries</li>
  <li>High-precision ICM-20948 Inertial Measurement Unit including Accelerometer, Gyroscope and Magnetometer for Attitude management</li>
  <li>MCP9808 Digital Temperature Sensor</li>
  <li>SGP30 TVOC and eqCO2 air quality sensor</li>
  <li>User-controllable WS2812B addressable RGB LED</li>
  <li>Separate 5V and 3.3V rails, providing up to 1A/500mA respectively</li>
  <li>MicroSD Card slot</li>
  <li>Female USB-C 2.0 connector for power and data logging</li>
  <li>PQBH40 bus exposing 10 digital pins, 6 analog pins (+ true DAC), an I2C bus, an SPI bus and an UART</li>
  <li>Comes preprogrammed with the UF2 bootloader and CircuitPython 6.0.0</li>
</ul>

<h2 id="documentation">Documentation</h2>

<p>This board is open source hardware. You can check the docs and contribute <a href="https://github.com/BHDynamics/dynossat-edu-obc">here</a>.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/21832/">Tindie</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/dynossat_edu_obc.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 31 Dec 1969 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/dynossat_edu_obc/</guid>
  </item><item>
    <title>EdgeBadge</title>
    <link>https://circuitpython.org/board/edgebadge/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/edgebadge.jpg 300w,
               /assets/images/boards/large/edgebadge.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/edgebadge.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>Machine learning has come to the ‘edge’ - small microcontrollers that can run a very miniature version of TensorFlow Lite to do ML computations.</p>

<p>But you don’t need super complex hardware to start developing your own TensorFlow models! We’ve adapted our popular PyBadge board to add a microphone so you can dip your toes into machine learning waters. It does everything that the PyBadge does, and as we make more projects that use Machine Learning we’ll adapt this board to make it better and better for machine learning.</p>

<p>The EdgeBadge is a compact board - it’s credit card sized. It’s powered by our favorite chip, the ATSAMD51, with 512KB of flash and 192KB of RAM. We add 2 MB of QSPI flash for file storage, handy for TensorFlow Lite files, images, fonts, sounds, or other assets.</p>

<p>We’ve added a PDM microphone on the front as an input for micro speech recognition. Our Arduino library has some demos you can get started with to recognize various word pairs like “yes/no”, “up/down” and “cat/dog”. <strong>TensorFlow Lite for microcontrollers is very cutting-edge so expect to see a lot of development happening in this area, with lots of code and process changes.</strong></p>

<p>You can code the EdgeBadge with: <a href="https://circuitpython.org/">CircuitPython</a>, <a href="https://arcade.makecode.com/hardware">MakeCode Arcade</a>, <a href="https://www.tensorflow.org/lite/microcontrollers">TensorFlow Lite for Microcontrollers / Arduino</a>, and more!</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4400">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/edgebadge.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 18 Nov 2019 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/edgebadge/</guid>
  </item><item>
    <title>Bast Wifi</title>
    <link>https://circuitpython.org/board/electroniccats_bastwifi/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/bast_wifi.jpg 300w,
               /assets/images/boards/large/bast_wifi.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/bast_wifi.jpg" alt="Image of Board">

<p>By Electronic Cats</p> <p>The Bast WiFi includes the newer ESP32-S2 module, which is like a little brother to the ESP32 where only one core instead of 2 has cores, it has no BLE implemented, but gains a native USB, a new processor and crypto accelerators for better performance protection against physical fault injection attacks and more improvements over the SoC.</p>

<p>Please note that the ESP32-S2 is still intended for developers. Not all peripherals are fully documented with sample code on Arduino and there are still some bugs that can be found that have yet to be fixed. We know that it is not entirely pleasant but we hope you understand us.</p>

<p>Some elements are still in development; For this reason, we recommend this board to manufacturers who have some experience in microcontroller programming, and not as a first development board.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://electroniccats.com/store/bast-wifi/">Electronic Cats</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/electroniccats_bastwifi.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 12 Oct 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/electroniccats_bastwifi/</guid>
  </item><item>
    <title>Blip</title>
    <link>https://circuitpython.org/board/electronut_labs_blip/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/electronut_labs_blip.png 300w,
               /assets/images/boards/large/electronut_labs_blip.png 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/electronut_labs_blip.png" alt="Image of Board">

<p>By Electronut Labs</p> <p>Blip is a development board for Bluetooth Low Energy (BLE) and 802.15.4 based wireless applications,
based on the Nordic Semiconductor nRF52840 SoC. It has a Black Magic Probe compatible programmer and
debugger built in, along with temperature/humidity sensor, ambient light intensity sensor, and a
3-axis accelerometer. It can be used to prototype very low power devices. It also has provision
for an SD card slot, which makes it a complete and versatile development board.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://docs.electronut.in/blip/#purchasing-blip">Blip purchase information</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/electronut_labs_blip.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 23 May 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/electronut_labs_blip/</guid>
  </item><item>
    <title>Papyr</title>
    <link>https://circuitpython.org/board/electronut_labs_papyr/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/electronut_labs_papyr.jpg 300w,
               /assets/images/boards/large/electronut_labs_papyr.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/electronut_labs_papyr.jpg" alt="Image of Board">

<p>By Electronut Labs</p> <p>Papyr is a connected e-paper display powered by Nordic Semiconductor’s nRF52840 chip. You can read more details on the hardware, and installation instructions for Circuitpython on the <a href="https://docs.electronut.in/papyr/circuitpython/">docs site</a> for <a href="https://electronut.in">Electronut Labs</a>.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://docs.electronut.in/papyr/#buy-papyr">Papyr purchase information</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/electronut_labs_papyr.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 23 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/electronut_labs_papyr/</guid>
  </item><item>
    <title>Escornabot Makech</title>
    <link>https://circuitpython.org/board/escornabot_makech/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/escornabot_makech.jpg 300w,
               /assets/images/boards/large/escornabot_makech.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/escornabot_makech.jpg" alt="Image of Board">

<p>By Electronic Cats</p> <p>Escornabot is an open source/hardware project that aims to bring robotics and programming to children.</p>

<p>The basic Escornabot can be programmed with the robot’s buttons to execute sequence of movements. From this, imagination is the only one limit to the possibilities.</p>

<h2 id="learn-more">Learn more</h2>
<ul>
  <li><a href="https://github.com/ElectronicCats/escornabot">Escornabot Makech- GitHub</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/escornabot_makech.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 25 May 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/escornabot_makech/</guid>
  </item><item>
    <title>ESP32-S2 Kaluga Dev Kit featuring WROVER</title>
    <link>https://circuitpython.org/board/espressif_kaluga_1/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/espressif_kaluga_1.jpg 300w,
               /assets/images/boards/large/espressif_kaluga_1.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/espressif_kaluga_1.jpg" alt="Image of Board">

<p>By Espressif</p> <p>The <strong>ESP32-S2-Kaluga-1</strong> kit is a full featured development kit by Espressif for the ESP32-S2 that comes with everything but the kitchen sink! From TFTs to touch panels, this dev board has it all. Espressif designed this kit to demonstrate the ESP32-S2’s human-computer interaction functionalities and provide the users with the tools for development of human-computer interaction applications based on their new WiFi modules with the ESP32-S2 chip</p>

<p>The Kaluga comes with a WROVER module, which has 2 MB (8 Mbit) PSRAM mounted for a roomy development environment!</p>

<p>The micro USB connector on the Kaluga is wired through a CP210x USB to serial converter chip for debugging and programming. The native USB is not available on a USB connector - instead you’ll want to pick up a <a href="https://www.adafruit.com/product/1833">Micro B USB</a> connector breakout, <a href="https://www.adafruit.com/product/4090">Type C USB</a> connector breakout or <a href="https://www.adafruit.com/product/4448">USB data cable</a> and hand-wire D19/D20 to D- and D+ pads.</p>

<p>There are many ways of how the ESP32-S2’s abundant functionalities can be used. For starters, the possible use cases may include:</p>

<ul>
  <li><strong>Smart home</strong>: From simplest smart lighting, smart door locks, smart sockets, to video streaming devices, security cameras, OTT devices, and home appliances</li>
  <li><strong>Battery-powered equipment</strong>: Wi-Fi mesh sensor networks, Wi-Fi-networked toys, wearable devices, health management equipment</li>
  <li><strong>Industrial automation equipment</strong>: Wireless control and robot technology, intelligent lighting, HVAC control equipment, etc.</li>
  <li><strong>Retail and catering industry</strong>: POS machines and service robots</li>
</ul>

<p>Each order comes with a nice boxed kit containing:</p>
<ul>
  <li>Main board: ESP32-S2-Kaluga-1</li>
  <li><a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s2/hw-reference/esp32s2/user-guide-esp-lyrat-8311a_v1.2.html">ESP-LyraT-8311A</a> audio player extension board</li>
  <li><a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s2/hw-reference/esp32s2/user-guide-esp-lyrap-toucha-v1.1.html">ESP-LyraP-TouchA</a> touch panel extension board</li>
  <li><a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s2/hw-reference/esp32s2/user-guide-esp-lyrap-lcd32-v1.1.html">ESP-LyraP-LCD32</a> 3.2” LCD screen extension board</li>
  <li><a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s2/hw-reference/esp32s2/user-guide-esp-lyrap-cam-v1.0.html">ESP-LyraP-CAM</a> camera board extension board</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4729">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/espressif_kaluga_1.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 29 Aug 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/espressif_kaluga_1/</guid>
  </item><item>
    <title>Saola 1 w/WROOM</title>
    <link>https://circuitpython.org/board/espressif_saola_1_wroom/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/espressif_saola_1_wroom.jpg 300w,
               /assets/images/boards/large/espressif_saola_1_wroom.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/espressif_saola_1_wroom.jpg" alt="Image of Board">

<p>By Espressif</p> <p>This is the Saola dev board with a WROOM ESP32-S2 module.</p>

<p><strong>NOTE:</strong> This board does not have a USB connector for the native USB. Native USB is broken out on the header and therefore requires a non-standard USB connection such as <a href="https://www.adafruit.com/product/4448">a breakout cable</a>.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://docs.espressif.com/projects/esp-idf/en/latest/esp32s2/hw-reference/esp32s2/user-guide-saola-1-v1.2.html">User Guide</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/espressif_saola_1_wroom.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 14 May 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/espressif_saola_1_wroom/</guid>
  </item><item>
    <title>Saola 1 w/WROVER</title>
    <link>https://circuitpython.org/board/espressif_saola_1_wrover/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/espressif_saola_1_wrover.jpg 300w,
               /assets/images/boards/large/espressif_saola_1_wrover.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/espressif_saola_1_wrover.jpg" alt="Image of Board">

<p>By Espressif</p> <p><strong>ESP32-S2 Saola-1</strong> is a small-sized ESP32-S2 based development board produced by Espressif. Just about all of the I/O pins are broken out to the pin headers on both sides for easy interfacing. Developers can either connect peripherals with jumper wires or mount ESP32-S2 Saola-1 on a breadboard - we recommend two breadboards ‘side-by-side’ since the Saola is a bit wide and you won’t have extra holes on one side for wiring.</p>

<p>This particular Saola comes with a WROVER module, which has 2 MB (8 Mbit) PSRAM mounted for a roomy development environment!</p>

<p>The micro USB connector on the Saola is wired through a CP210x USB to serial converter chip for debugging and programming. The native USB is not available on a USB connector - instead you’ll want to pick up a <a href="https://www.adafruit.com/product/1833">Micro B USB</a> connector breakout, <a href="https://www.adafruit.com/product/4090">Type C USB</a> connector breakout or <a href="https://www.adafruit.com/product/4448">USB data cable</a> and hand-wire D19/D20 to D- and D+ pads.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4693">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/espressif_saola_1_wrover.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 14 May 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/espressif_saola_1_wrover/</guid>
  </item><item>
    <title>Espruino Pico</title>
    <link>https://circuitpython.org/board/espruino_pico/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/espruino_pico.jpg 300w,
               /assets/images/boards/large/espruino_pico.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/espruino_pico.jpg" alt="Image of Board">

<p>By Espruino</p> <p>Control Electronics quickly and easily with a tiny USB stick that runs JavaScript - introducing the <strong>Espruino Pico</strong>! <a href="https://www.adafruit.com/product/1887">Dig in to the JavaScript of things, with a mini version of the popular Espruino board we already carry</a></p>

<p>This little board has an STM32 microcontroller pre-programmed with Espruino all ready to go so you can start playing immediately. <strong>Warning: if you only use Assembly and think that even embedded C/C++ is for wimps, this device might explody your head.</strong></p>

<p><strong>Essential Features:</strong></p>
<ul>
  <li>22 GPIO pins: 9 analog inputs, 21 PWM, 2 serial, 3 SPI, 3 I2C</li>
  <li>All GPIO is 3.3V but 5 volt tolerant</li>
  <li>2 rows of 9 0.1” pins, with a third 0.05” row of 8 pins on the end</li>
  <li>On-board USB “PCB Type” connector, plugs right into any computer USB port</li>
  <li>Two on-board LEDs and one button</li>
  <li><a href="http://www.espruino.com/datasheets/STM32F401xD.pdf">STM32F401CDU6</a> CPU - ARM Cortex</li>
  <li>On-board 3.3v 250mA voltage regulator, accepts voltages from 3.5v to 16v</li>
  <li>Current draw in sleep: &lt; 0.05mA - over 2.5 years on a 2500mAh battery</li>
  <li>On-board FET can be used to drive high-current outputs</li>
</ul>

<p><strong>Note</strong>: As of Friday, October 2nd, 2015 we are selling the updated Pico with both a more helpful silkscreen marking for power, an updated USB power diode, and a 500mA polyfuse added!</p>

<p>The Espruino Pico is a USB stick with a tiny computer and JavaScript interpreter built in, allowing for instant feedback from whatever device you’re working with. Simply set up your code with the Espruino and send it to the device without having to wait for the board to ‘flash.’</p>

<p>The Pico is also designed to be easy to include in your own designs and builds. The .01” pins are easy to fit in to sockets, and castellated edges mean that unpinned Picos can easily be surface-mounted directly to a PCB. And to make it even easier, <a href="https://github.com/espruino/EspruinoBoard/tree/master/Pico/Component">Espruino provided a part library for Eagle CAD that includes the Pico’s footprint in several different configurations</a>.</p>

<p>The Espruino Pico’s fast response time has a lot of advantages. It allows for quick and easy debugging and is a great way to test your project before your big reveal. In addition, you can control the Espruino from almost anything - Windows, Mac OS, Linux, RasPi, Android, anything that can talk to a USB Serial port.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/2621">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/espruino_pico.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 07 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/espruino_pico/</guid>
  </item><item>
    <title>Espruino WiFi</title>
    <link>https://circuitpython.org/board/espruino_wifi/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/espruino_wifi.jpg 300w,
               /assets/images/boards/large/espruino_wifi.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/espruino_wifi.jpg" alt="Image of Board">

<p>By Espruino</p> <p>Try the JavaScript of things with the <strong>Espruino WiFi</strong> - the world’s first open-source JavaScript microcontroller, this time with built in WiFi! This little board has an STM32 microcontroller pre-programmed with Espruino all ready to go so you can start playing with Javascript-microcontrollers. It also comes with an ESP8266 WiFi module, so you can connect to the Internet using Espruino. <strong>Warning:</strong> if you only use Assembly and think that even embedded C/C++ is for wimps, this device might explode your head.</p>

<p>The Espruino is a tiny computer with a JavaScript interpreter, allowing for instant feedback from whatever device you’re working with. Simply set up your code with the Espruino and send it to the device without having to wait for the board to ‘flash. With the new Espruino WiFi you get the best of Javascript with Internet connectivity.</p>

<p>Once you’ve uploaded code, you can inspect and change variables (including functions!) while your program is running. There’s loads of <a href="http://www.espruino.com/Reference">documentation</a>, <a href="http://www.espruino.com/Tutorials">tutorials</a> and support for a <a href="http://www.espruino.com/Modules">huge range of different hardware</a> too. See <a href="http://www.espruino.com/Quick+Start">how to get started here</a>, or if you have any questions ask away <a href="http://forum.espruino.com/">on the Espruino forums</a>!</p>

<p><strong>Features</strong></p>
<ul>
  <li>30mm x 23mm (1.2 x 0.9 inch)</li>
  <li>On-board Micro USB connector</li>
  <li>2 rows of 11 0.1” pins, with 2 extra 0.1” holes</li>
  <li>21 GPIO pins : 8 Analog inputs, 20 PWM, 1 Serial, 3 SPI, 3 I2C</li>
  <li>Three on-board LEDs (2x user programmable, 1x WiFi activity) and one button.</li>
  <li>STM32F411CEU6 32-bit 100MHz ARM Cortex M4 CPU, 512kb flash, 128kb RAM</li>
  <li>ESP8266 WiFi (802.11 b/g/n)</li>
  <li>All GPIO is 5 volt tolerant (Arduino compatible)</li>
  <li>RTC with external oscillator</li>
  <li>On-board 3.3v 250mA voltage regulator, accepts voltages from 3.5v to 5v</li>
  <li>Current draw in sleep: &lt; 0.05mA - over 2.5 years on a 2500mAh battery</li>
  <li>500mA polyfuse on board</li>
</ul>

<p>The Espruino’s fast response time has a lot of advantages. It allows for quick and easy debugging and is a great way to test your project before your big reveal. In addition, you can control the Espruino from almost anything - Windows, Mac OS, Linux, RasPi, Android, anything that can talk to a USB Serial port.</p>

<p>The Espruino also interacts well with our <a href="https://www.adafruit.com/category/168">NeoPixels</a>. For more info, check out <a href="http://www.espruino.com/WS2811">Espruino’s page on the WS2811 and WS2812</a>.</p>

<p>While the main advantage of the Espruino is its instant execution, it can also be used as a traditional board through a Web-based IDE hosted on your computer. The microcontroller also uses less power than Linux Boards (although its of course a lot less powerful as well) so will run longer on battery power, it has loads of IO pins, and it can be used as an IO board for PCs, Macs, or Rasp Pis without having to program it first. Simply take the Espruino out of its packaging and get started!</p>

<p><strong>NOTE:</strong> The Wifi of this board is based on ESP8266 and might not work with CircuitPython. CircuitPython typically use Airlift that rely on ESP32 with better support for TLS such as this <a href="https://www.adafruit.com/product/4201">breakout board</a>.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/3514">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/espruino_wifi.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 13 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/espruino_wifi/</guid>
  </item><item>
    <title>Feather Bluefruit Sense</title>
    <link>https://circuitpython.org/board/feather_bluefruit_sense/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/feather_bluefruit_sense.jpg 300w,
               /assets/images/boards/large/feather_bluefruit_sense.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/feather_bluefruit_sense.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The <strong>Adafruit Feather Bluefruit Sense</strong> takes our popular <a href="https://www.adafruit.com/product/4062">Feather nRF52840 Express</a> and adds a smorgasbord of sensors to make a great wireless sensor platform. This Feather microcontroller comes with Bluetooth Low Energy and native USB support featuring the nRF52840!  This Feather is an ‘all-in-one’ Arduino-compatible + Bluetooth Low Energy with built in USB plus battery charging. With native USB it works great with CircuitPython, too.</p>

<p>Like the Feather nRF52840, <strong>this chip comes with Arduino IDE support</strong> - you can program the nRF52840 chip directly to take full advantage of the Cortex-M4 processor, and then calling into the Nordic SoftDevice radio stack when you need to communicate over BLE. Since the underlying API and peripherals are the same for the ‘832 and ‘840, you can supercharge your older nRF52832 projects with the same exact code, with a single recompile!</p>

<p>This Feather is also a <strong>BLE-friendly CircuitPython board</strong>! CircuitPython works best with disk drive access, and this is the only BLE-plus-USB-native chip that has the memory to handle running a little Python interpreter. The massive RAM and speedy Cortex M4F chip make this a good match. Make centrals or peripherals with the ease of CircuitPython.</p>

<p>A chorus of supporting sensors surround the module so you can do all sorts of <strong>environmental and motion sensing</strong>:</p>

<ul>
  <li>ST Micro series 9-DoF motion - <a href="https://www.adafruit.com/product/4480">LSM6DS33 Accel/Gyro</a> + <a href="http://www.adafruit.com/product/4479">LIS3MDL magnetometer</a></li>
  <li><a href="https://www.adafruit.com/product/3595">APDS9960 Proximity, Light, Color, and Gesture Sensor</a></li>
  <li><a href="https://www.adafruit.com/product/3492">PDM Microphone sound sensor</a></li>
  <li><a href="https://www.adafruit.com/product/4099">SHT Humidity</a></li>
  <li><a href="https://www.adafruit.com/product/2651">BMP280 temperature and barometric pressure/altitude</a></li>
</ul>

<p>Features:</p>
<ul>
  <li>ARM Cortex M4F (with HW floating point acceleration) running at 64MHz</li>
  <li>1MB flash and 256KB SRAM</li>
  <li><strong>Native Open Source USB stack</strong> - pre-programmed with UF2 bootloader</li>
  <li>Bluetooth Low Energy compatible 2.4GHz radio (Details available in the <a href="https://www.nordicsemi.com/Products/Low-power-short-range-wireless/nRF52840">nRF52840</a> product specification)</li>
  <li><strong>FCC / IC / TELEC certified module</strong></li>
  <li>Up to +8dBm output power</li>
  <li>21 GPIO, 6 x 12-bit ADC pins, up to 12 PWM outputs (3 PWM modules with 4 outputs each)</li>
  <li>Pin #13 red LED for general purpose blinking, Blue LED for general purpose connection status, NeoPixel for colorful feedback</li>
  <li>Power/enable pin</li>
  <li>Measures 2.0” x 0.9” x 0.28” (51mm x 23mm x 7.2mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 6 grams</li>
  <li>4 mounting holes</li>
  <li>Reset button</li>
  <li>SWD debug pads on bottom of PCB</li>
  <li><a href="https://www.adafruit.com/categories/814">Works out of the box with all of our Adafruit FeatherWings!</a> (Even the UART-using ones like the GPS FeatherWing)</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4516">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/feather_bluefruit_sense.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 01 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_bluefruit_sense/</guid>
  </item><item>
    <title>Feather M0 Adalogger</title>
    <link>https://circuitpython.org/board/feather_m0_adalogger/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/feather_m0_adalogger.jpg 300w,
               /assets/images/boards/large/feather_m0_adalogger.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/feather_m0_adalogger.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>Feather is a development board from Adafruit, and like its namesake it is thin, light, and lets you fly! Adafruit designed Feather to be a new open standard for portable microcontroller cores.</p>

<p>This is the <strong>Adafruit Feather M0 Adalogger</strong> - Adafruit’s take on an ‘all-in-one’ Cortex M0 datalogger (or data-reader) with built in USB and battery charging. It is an Adafruit Feather M0 with a microSD holder ready to rock! <a href="https://www.adafruit.com/feather">Adafruit has other boards in the Feather family here</a></p>

<p>At the Feather M0’s heart is an ATSAMD21G18 ARM Cortex M0 processor, clocked at 48 MHz and at 3.3V logic, the same one used in the new <a href="https://www.adafruit.com/products/2843">Arduino Zero</a>. This chip has a whopping 256K of FLASH (8x more than the Atmega328 or 32u4) and 32K of RAM (16x as much)! This chip comes with built in USB so it has USB-to-Serial program &amp; debug capability built in with no need for an FTDI-like chip.</p>

<p>To make it easy to use for portable projects, Adafruit added a connector for 3.7V Lithium polymer batteries and built in battery charging. You don’t need a battery, it will run just fine straight from the micro USB connector. But, if you do have a battery, you can take it on the go, then plug in the USB to recharge. The Feather will automatically switch over to USB power when its available. The battery is tied thru a divider to an analog pin, so you can measure and monitor the battery voltage to detect when you need a recharge.</p>

<p>Here’s some handy specs! Like all other Feather M0’s you get:</p>

<ul>
  <li>Measures 2.0” x 0.9” x 0.28” (51mm x 23mm x 8mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 5.3 grams</li>
  <li>ATSAMD21G18 @ 48MHz with 3.3V logic/power</li>
  <li>256KB of FLASH + 32KB of RAM</li>
  <li>No EEPROM</li>
  <li>3.3V regulator with 500mA peak current output</li>
  <li>USB native support, comes with USB bootloader and serial port debugging</li>
  <li>You also get tons of pins - 20 GPIO pins</li>
  <li>Hardware Serial, hardware I2C, hardware SPI support</li>
  <li>8 x PWM pins</li>
  <li>10 x analog inputs</li>
  <li>Built in 100mA lipoly charger with charging status indicator LED</li>
  <li>Pin #13 red LED for general purpose blinking</li>
  <li>Power/enable pin</li>
  <li>4 mounting holes</li>
  <li>Reset button</li>
</ul>

<p>The <strong>Feather M0 Adalogger</strong> uses the extra space left over to add MicroSD + a green LED:</p>

<ul>
  <li>Pin #8 green LED for your blinking pleasure</li>
  <li>MicroSD card holder for adding as much storage as you could possibly want, for reading or writing.</li>
</ul>

<p>Comes fully assembled and tested, with a USB bootloader. Includes some header so you can solder it in and plug into a solderless breadboard.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-feather-m0-adalogger">Feather M0 Adalogger Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/2796">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/feather_m0_adalogger.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_m0_adalogger/</guid>
  </item><item>
    <title>Feather M0 Basic</title>
    <link>https://circuitpython.org/board/feather_m0_basic/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/feather_m0_basic.jpg 300w,
               /assets/images/boards/large/feather_m0_basic.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/feather_m0_basic.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>Feather is thin, light, and lets you fly! Adafruit designed Feather to be a new open standard for portable microcontroller cores.</p>

<p>This is the <strong>Feather M0 Basic Proto</strong>, it has a bunch of prototyping space built right in. <a href="https://www.adafruit.com/feather">There are other boards in the Feather family as well</a>.</p>

<p>At the Feather M0’s heart is an ATSAMD21G18 ARM Cortex M0 processor, clocked at 48 MHz and at 3.3V logic, the same one used in the new <a href="https://www.adafruit.com/products/2843">Arduino Zero</a>. This chip has a whopping 256K of FLASH (8x more than the Atmega328 or 32u4) and 32K of RAM (16x as much)! This chip comes with built in USB so it has USB-to-Serial program &amp; debug capability built in with no need for an FTDI-like chip.</p>

<p>To make it easy to use for portable projects, there is a connector for 3.7V Lithium polymer batteries and built in battery charging. You don’t need a battery, it will run just fine straight from the micro USB connector. But, if you do have a battery, you can take it on the go, then plug in the USB to recharge. The Feather will automatically switch over to USB power when it is available. The battery is tied thru a divider to an analog pin, so you can measure and monitor the battery voltage to detect when you need a recharge.</p>

<p><strong>Here are some handy specs!</strong></p>

<ul>
  <li>Measures 2.0” x 0.9” x 0.28” (51mm x 23mm x 8mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 4.6 grams</li>
  <li>ATSAMD21G18 @ 48MHz with 3.3V logic/power</li>
  <li>256KB of FLASH + 32KB of RAM</li>
  <li>No EEPROM</li>
  <li>32.768 KHz crystal for clock generation &amp; RTC</li>
  <li>3.3V regulator with 500mA peak current output</li>
  <li>USB native support, comes with USB bootloader and serial port debugging</li>
  <li>You also get tons of pins - 20 GPIO pins</li>
  <li>Hardware Serial, hardware I2C, hardware SPI support</li>
  <li>PWM outputs on all pins</li>
  <li>6 x 12-bit analog inputs</li>
  <li>1 x 10-bit analog ouput (DAC)</li>
  <li>Built in 100mA lipoly charger with charging status indicator LED</li>
  <li>Pin #13 red LED for general purpose blinking</li>
  <li>Power/enable pin</li>
  <li>4 mounting holes</li>
  <li>Reset button</li>
</ul>

<p>The <strong>Feather M0 Basic Proto</strong> has some extra space left over, so we give you a tiny little prototyping area. If you just need to attach a button or sensor, you may be able to skip out on a breadboard and wire it directly on there.</p>

<p>Comes fully assembled and tested, with a USB bootloader. Includes headers so you can solder it in and plug into a solderless breadboard.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-feather-m0-basic-proto">Feather M0 Basic Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/2772">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/feather_m0_basic.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_m0_basic/</guid>
  </item><item>
    <title>Feather M0 Express</title>
    <link>https://circuitpython.org/board/feather_m0_express/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/feather_m0_express.jpg 300w,
               /assets/images/boards/large/feather_m0_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/feather_m0_express.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The Adafruit Feather M0 Express was one of the first development boards designed for CircuitPython by Adafruit. Unlike the original Feather M0 Basic, it added a NeoPixel status LED and external 2MB SPI Flash for storing CircuitPython code.</p>

<p>It is a great entry into the Feather ecosystem with CircuitPython. However, it is now out performed by the <a href="/board/feather_m4_express/">Feather M4 Express</a> which has a faster microcontroller with more RAM. The additional RAM allows CircuitPython to load more code all at once than this Feather M0 Express can.</p>

<h2 id="tutorials">Tutorials</h2>
<ul>
  <li><a href="https://learn.adafruit.com/adafruit-feather-m0-express-designed-for-circuit-python-circuitpython">Feather M0 Express Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/3403">Adafruit</a></li>
  <li><a href="https://www.digikey.com/short/p87w83">Digi-Key</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 08 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_m0_express/</guid>
  </item><item>
    <title>Feather M0 Express + Crickit</title>
    <link>https://circuitpython.org/board/feather_m0_express_crickit/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/feather_m0_express_crickit.jpg 300w,
               /assets/images/boards/large/feather_m0_express_crickit.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/feather_m0_express_crickit.jpg" alt="Image of Board">

<p>By Adafruit</p> <p><strong>Crickit</strong> is Adafruit’s <strong>C</strong>reative <strong>R</strong>obotics &amp; <strong>I</strong>nteractive <strong>C</strong>onstruction <strong>Kit</strong>. It’s an add-on to popular Feather ecosystem boards that lets you <strong>#MakeRobotFriend </strong>using CircuitPython.</p>

<p>Plug in <em>any</em> Feather mainboard you want into the center, and you’re good to go! <strong>The Crickit is powered by seesaw, an I2C-to-whatever bridge firmware. So you only need to use two I2C data pins to control the huge number of inputs and outputs on the Crickit. All those timers, PWMs, sensors are offloaded to the co-processor.</strong></p>

<p>The only thing that is <em>not</em> managed by seesaw is the audio output. Provided is a small jumper you can solder to connect the audio amplifier to the first analog pin. On Feather M0’s this is a true analog output (DAC) and you can play audio clips with CircuitPython. Other Feathers <em>may not have a DAC!</em> In that case, you can solder a wire to jumper the audio amp to a PWM pin.</p>

<p>You get to use all the non-I2C signal pins on your feather and get a boat-load of extra in/out pins, motor controllers, capacitive touch sensors, a NeoPixel driver and amplified speaker output. It complements &amp; extends your Feather so you can still use all the goodies, including stacking FeatherWings on top. But now you have a robotics playground as well.</p>

<p>Features:</p>
<ul>
  <li>4 x Analog or Digital Servo control, with precision 16-bit timers</li>
  <li>2 x Bi-directional brushed DC motor control, 1 Amp current limited each, with 8-bit PWM speed control (or one stepper)</li>
  <li>4 x High current “Darlington” 500mA drive outputs with kick-back diode protection. For solenoids, relays, large LEDs, or one uni-polar stepper</li>
  <li>4 x Capacitive touch sensors with alligator-pads</li>
  <li>8 x Signal pins, digital in/out or analog inputs</li>
  <li>1 x NeoPixel driver with 5V level shifter - The NeoPixels are buffered and controlled by the seesaw chip</li>
  <li>1 x Class D, 4-8 ohm speaker, 3W-max audio amplifier - the audio input pin is available as a solder-able pad for your configuration, you can connect it to your Feather’s DAC or PWM output as you desire.</li>
</ul>

<p>All are powered via 5V DC, so you can use any 5V-powered servos, DC motors, steppers, solenoids, relays etc. To keep things simple and safe, we don’t support mixing voltages, so only 5V, not for use with 9V or 12V robotic components.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-crickit-creative-robotic-interactive-construction-kit">Feather M0 Express + Crickit Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3403">Feather M0 Express - Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/3343">CRICKIT for Feather - Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/feather_m0_express_crickit.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_m0_express_crickit/</guid>
  </item><item>
    <title>Feather M0 RFM69</title>
    <link>https://circuitpython.org/board/feather_m0_rfm69/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/feather_m0_rfm69.jpg 300w,
               /assets/images/boards/large/feather_m0_rfm69.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/feather_m0_rfm69.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>This is the<strong> Adafruit Feather M0 RFM69 Packet Radio (433, 868, or 915 MHz)</strong><strong>.</strong> Also called <em>RadioFruits<strong>,</strong></em> Adafruit’s take on an microcontroller with a RFM69HCW packet radio transceiver plus built in USB and battery charging. Its an Adafruit Feather M0 with a VHF radio module cooked in!</p>

<p>Feather is the development platform from Adafruit, and like its namesake it is thin, light, and lets you fly! Adafruit designed Feather to be an open standard for portable microcontroller cores. <a href="https://www.adafruit.com/feather">Adafruit has other boards in the Feather family here.</a></p>

<p><strong>There are two versions: 433 MHz and 900 MHz. The 900 MHz version can be used for either 868MHz or 915MHz transmission/reception</strong> - the exact radio frequency is determined when you load the software since it can be tuned around dynamically.</p>

<p>At the Feather M0’s heart is an ATSAMD21G18 ARM Cortex M0 processor, clocked at 48 MHz and at 3.3V logic, the same one used in the new <a href="https://www.adafruit.com/products/2843">Arduino Zero</a>. This chip has a whopping 256K of FLASH (8x more than the Atmega328 or 32u4) and 32K of RAM (16x as much)! This chip comes with built in USB so it has USB-to-Serial program &amp; debug capability built in with no need for an FTDI-like chip.</p>

<p>To make it easy to use for portable projects, Adafruit added a connector for 3.7V Lithium polymer batteries and built in battery charging. You don’t need a battery, it will run just fine straight from the micro USB connector. But, if you do have a battery, you can take it on the go, then plug in the USB to recharge. The Feather will automatically switch over to USB power when its available. The battery is tied thru a divider to an analog pin, so you can measure and monitor the battery voltage to detect when you need a recharge.</p>

<p><strong>Here’s some handy specs! Like all Feather M0’s you get:</strong></p>

<ul>
  <li>Measures 2.0” x 0.9” x 0.3” (51mm x 23mm x 8mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 5.8 grams</li>
  <li>ATSAMD21G18 @ 48MHz with 3.3V logic/power</li>
  <li>No EEPROM</li>
  <li>3.3V regulator with 500mA peak current outpu0t</li>
  <li>USB native support, comes with USB bootloader and serial port debugging</li>
  <li>You also get tons of pins - 20 GPIO pins</li>
  <li>Hardware Serial, hardware I2C, hardware SPI support</li>
  <li>8 x PWM pins</li>
  <li>10 x analog inputs</li>
  <li>1 x analog output</li>
  <li>Built in 100mA lipoly charger with charging status indicator LED</li>
  <li>Pin #13 red LED for general purpose blinking</li>
  <li>Power/enable pin</li>
  <li>4 mounting holes</li>
  <li>Reset button</li>
</ul>

<p>The <strong>Feather M0 Radio</strong> uses the extra space left over to add an RFM69HCW 433 or 900MHz radio module. These radios are not good for transmitting audio or video, but they do work quite well for small data packet transmission when you need more range than 2.4 GHz (BT, BLE, WiFi, ZigBee)</p>

<ul>
  <li>SX1231 based module with SPI interface</li>
  <li>433 MHz version: Uses the amateur or license-free ISM band (ITU “Europe” license-free ISM or ITU “American” amateur with limitations)</li>
  <li>900 MHz version: Uses the license-free ISM band (“European ISM” @ 868MHz or “American ISM” @ 915MHz)</li>
  <li>+13 to +20 dBm up to 100 mW Power Output Capability (power output selectable in software)</li>
  <li>50mA (+13 dBm) to 150mA (+20dBm) current draw for transmissions</li>
  <li>Range of approx. 350 meters, depending on obstructions, frequency, antenna and power output</li>
  <li>Create multipoint networks with individual node addresses</li>
  <li>Encrypted packet engine with AES-128</li>
  <li>Simple wire antenna or spot for uFL connector</li>
</ul>

<p>Comes fully assembled and tested, with a USB bootloader. Includes some headers so you can solder it in and plug into a solderless breadboard. You will need to cut and solder on a small piece of wire (any solid or stranded core is fine) in order to create your antenna.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-feather-m0-radio-with-rfm69-packet-radio">Feather M0 RFM69 Tutorial</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3177">Adafruit</a> (433 MHz version)</li>
  <li><a href="https://www.adafruit.com/product/3176">Adafruit</a> (900 MHz version)</li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/feather_m0_rfm69.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_m0_rfm69/</guid>
  </item><item>
    <title>Feather M0 RFM9x</title>
    <link>https://circuitpython.org/board/feather_m0_rfm9x/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/feather_m0_rfm9x.jpg 300w,
               /assets/images/boards/large/feather_m0_rfm9x.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/feather_m0_rfm9x.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>This is the <strong>Adafruit Feather M0 RFM96 LoRa Radio (433 MHz).</strong> Also called <em>RadioFruits<strong>,</strong></em> Adafruit’s take on an microcontroller with a “<a href="https://www.lora-alliance.org/">Long Range (LoRa)</a>” packet radio transceiver with built in USB and battery charging. It is an Adafruit Feather M0 with a 433MHz radio module cooked in! Great for making wireless networks that are more flexible than Bluetooth LE and without the high power requirements of WiFi.</p>

<p>Feather is the development board platform from Adafruit, and like its namesake it is thin, light, and lets you fly! Adafruit designed Feather to be an open standard for portable microcontroller cores.<a href="https://www.adafruit.com/feather">Adafruit has other boards in the Feather family here</a>.</p>

<p><strong>There are 433 MHz and 898/915 MHz radio versions.</strong></p>

<p>At the Feather M0’s heart is an ATSAMD21G18 ARM Cortex M0 processor, clocked at 48 MHz and at 3.3V logic, the same one used in the new <a href="https://www.adafruit.com/products/2843">Arduino Zero</a>. This chip has a whopping 256K of FLASH (8x more than the Atmega328 or 32u4) and 32K of RAM (16x as much)! This chip comes with built in USB so it has USB-to-Serial program &amp; debug capability built in with no need for an FTDI-like chip.</p>

<p>To make it easy to use for portable projects, Adafruit added a connector for 3.7V Lithium polymer batteries and built in battery charging. You don’t need a battery, it will run just fine straight from the micro USB connector. But, if you do have a battery, you can take it on the go, then plug in the USB to recharge. The Feather will automatically switch over to USB power when its available. The battery is tied thru a divider to an analog pin, so you can measure and monitor the battery voltage to detect when you need a recharge.</p>

<p><strong>Here’s some handy specs! Like all Feather M0’s you get:</strong></p>

<ul>
  <li>Measures 2.0” x 0.9” x 0.3” (51mm x 23mm x 8mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 5.8 grams</li>
  <li>ATSAMD21G18 @ 48MHz with 3.3V logic/power</li>
  <li>No EEPROM</li>
  <li>3.3V regulator with 500mA peak current output</li>
  <li>USB native support, comes with USB bootloader and serial port debugging</li>
  <li>You also get tons of pins - 20 GPIO pins</li>
  <li>Hardware Serial, hardware I2C, hardware SPI support</li>
  <li>8 x PWM pins</li>
  <li>10 x analog inputs</li>
  <li>1 x analog output</li>
  <li>Built in 100mA lipoly charger with charging status indicator LED</li>
  <li>Pin #13 red LED for general purpose blinking</li>
  <li>Power/enable pin</li>
  <li>4 mounting holes</li>
  <li>Reset button</li>
</ul>

<p>This <strong>Feather M0 LoRa Radio</strong> uses the extra space left over to add an RFM9x LoRa 868/915 MHz radio module. These radios are not good for transmitting audio or video, but they do work quite well for small data packet transmission when you need more range than 2.4 GHz (BT, BLE, WiFi, ZigBee).</p>

<ul>
  <li>SX127x LoRa® based module with SPI interface</li>
  <li>Packet radio with ready-to-go Arduino libraries</li>
  <li>Uses the license-free ISM bands (ITU “Europe” @ 433MHz and ITU “Americas” @ 900MHz)</li>
  <li>+5 to +20 dBm up to 100 mW Power Output Capability (power output selectable in software)</li>
  <li>~300uA during full sleep, ~120mA peak during +20dBm transmit, ~40mA during active radio listening.</li>
  <li>Simple wire antenna or spot for uFL connector</li>
</ul>

<p>The initial tests with default library settings: over 1.2mi/2Km line-of-sight with wire quarter-wave antennas. (<a href="http://forum.anarduino.com/posts/list/46.page#2854">With setting tweaking and directional antennas, 20Km is possible</a>).</p>

<p>Comes fully assembled and tested, with a USB bootloader. Also includes some headers so you can solder it in and plug into a solderless breadboard. You will need to cut and solder on a small piece of wire (any solid or stranded core is fine) in order to create your antenna.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-feather-m0-radio-with-lora-radio-module">Feather M0 RFM9x</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3178">Feather M0 RFM95 - Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/3179">Feather M0 RFM96 - Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/feather_m0_rfm9x.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_m0_rfm9x/</guid>
  </item><item>
    <title>Feather M0 Supersized</title>
    <link>https://circuitpython.org/board/feather_m0_supersized/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/feather_m0_supersized.jpg 300w,
               /assets/images/boards/large/feather_m0_supersized.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/feather_m0_supersized.jpg" alt="Image of Board">

<p>By Dave Astels</p> <p>This is a <a href="/board/feather_m0_express/">Feather M0 Express</a> that has been
supersized by Dave Astels to fit a larger SPI flash chip than the default 2MB chip. It is not
available for purchase.</p>

<p>It was documented as a DIY project <a href="http://daveastels.com/feather-m0-express-supersizing.html">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 19 Mar 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/feather_m0_supersized/</guid>
  </item><item>
    <title>Feather M4 CAN</title>
    <link>https://circuitpython.org/board/feather_m4_can/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/feather_m4_can.jpg 300w,
               /assets/images/boards/large/feather_m4_can.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/feather_m4_can.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>One of our favorite Feathers, the Feather M4 Express, gets a glow-up here with an upgrade to the SAME51 chipset which has built-in CAN bus support! Like its SAMD51 cousin, the ATSAME51J19 comes with a 120MHz Cortex M4 with floating point support and 512KB Flash and 192KB RAM. Your code will zig and zag and zoom, and with a bunch of extra peripherals for support, this will for sure be your favorite new chipset for CAN interfacing projects.</p>

<p>At the end of the board we have placed a CAN transceiver chip as well as a 5V converter to generate 5V power to the transceiver even when running on battery. The two CAN signal lines and ground reference signal are available on a 3-pin 3.5mm terminal block. The chip and booster can be put to sleep for power saving. The built in CAN can read or write packets and has support in both Arduino and CircuitPython.</p>

<p>Like the original Feather M4 Express, you’ll find a Mini NeoPixel and 2 MB SPI Flash. When used in CircuitPython, the 2 MB flash acts as storage for all your scripts, libraries and files.</p>

<p>And best of all, it’s a Feather - so you know it will work with all our FeatherWings! What a great way to quickly get up and running. It’s even pin-compatible with the original Feather M4.</p>

<p>Easy reprogramming: the Feather M4 CAN comes pre-loaded with the UF2 bootloader, which looks like a USB storage key. Simply drag firmware on to program, no special tools or drivers needed! It can be used to load up CircuitPython or Arduino IDE (it is bossa-compatible)</p>

<p>Comes fully assembled and tested, with the UF2 USB bootloader. We also toss in some headers so you can solder it in and plug into a solderless breadboard.</p>

<h2 id="tutorials">Tutorials</h2>
<ul>
  <li><a href="https://learn.adafruit.com/using-canio-circuitpython">CAN Bus with CircuitPython: Using the canio module</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4759">Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/4759">Digikey</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/feather_m4_can.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 28 Sep 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/feather_m4_can/</guid>
  </item><item>
    <title>Feather M4 Express</title>
    <link>https://circuitpython.org/board/feather_m4_express/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/feather_m4_express.jpg 300w,
               /assets/images/boards/large/feather_m4_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/feather_m4_express.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>This feather is powered by the ATSAMD51J19 -  with its 120MHz Cortex M4 with floating point support and 512KB Flash and 192KB RAM. Your code will zig and zag and zoom, and with a bunch of extra peripherals for support, this will for sure be your favorite new chipset.</p>

<p>And best of all, it’s a Feather - so you know it will work with all our FeatherWings! What a great way to quickly get up and running.</p>

<p>The most exciting part of the Feather M4 is that while you can use it with the Arduino IDE - and it’s bonkers fast when you do, we are shipping it with CircuitPython on board. When you plug it in, it will show up as a very small disk drive with main.py on it. Edit main.py with your favorite text editor to build your project using Python, the most popular programming language. No installs, IDE or compiler needed, so you can use it on any computer, even ChromeBooks or computers you can’t install software on. When you’re done, unplug the Feather and your code will go with you.</p>

<p>The Feather M4 Express uses the extra space left over to add a Mini NeoPixel, 2 MB SPI Flash storage and a little prototyping space. You can use the SPI Flash storage like a very tiny hard drive. When used in CircuitPython, the 2 MB flash acts as storage for all your scripts, libraries and files. When used in Arduino, you can read/write files to it, like a little datalogger or SD card, and then with our helper program, access the files over USB.</p>

<p>Easy reprogramming: the Feather M4 comes pre-loaded with the UF2 bootloader, which looks like a USB storage key. Simply drag firmware on to program, no special tools or drivers needed! It can be used to load up CircuitPython or Arduino IDE (it is bossa-compatible)</p>

<p>Comes fully assembled and tested, with the UF2 USB bootloader. We also toss in some headers so you can solder it in and plug into a solderless breadboard.</p>

<h2 id="tutorials">Tutorials</h2>
<ul>
  <li><a href="https://learn.adafruit.com/adafruit-feather-m4-express-atsamd51">Feather M4 Express Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/3857">Adafruit</a></li>
  <li><a href="https://www.digikey.com/short/p87f17">Digi-Key</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/feather_m4_express.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 08 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_m4_express/</guid>
  </item><item>
    <title>Feather M7 1011</title>
    <link>https://circuitpython.org/board/feather_m7_1011/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/feather_m7_1011.jpg 300w,
               /assets/images/boards/large/feather_m7_1011.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/feather_m7_1011.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>Coming Soon!</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://www.youtube.com/watch?time_continue=1059&amp;v=k62kM94gieo">YouTube</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/feather_m7_1011.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 27 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_m7_1011/</guid>
  </item><item>
    <title>Feather MIMXRT1011</title>
    <link>https://circuitpython.org/board/feather_mimxrt1011/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/feather_mimxrt1011.jpg 300w,
               /assets/images/boards/large/feather_mimxrt1011.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/feather_mimxrt1011.jpg" alt="Image of Board">

<p>By arturo182</p> <p>A Work-In-Progress Feather featuring the NXP i.MX RT1011 MCU and a ESP32.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>ARM Cortex-M7 MCU running at 500MHz, 128KB of RAM</li>
  <li>8MB of Flash shared between MCU code and CircuitPython storage</li>
  <li>USB Type-C connector</li>
  <li>ESP32 that can be used as a SPI slave with the AirLift firmware</li>
  <li>Neopixel indicator</li>
  <li>Works with CircuitPython!</li>
  <li>I2C, UART, SPI, GPIO, ADCs</li>
  <li>Comes with a UF2 bootloader for easy FW update</li>
</ul>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://twitter.com/arturo182/status/1199841134253682690">Reveal Tweet</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.tindie.com/products/arturo182/nxp-mimxrt1011-feather-with-esp32/">Tindie</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/feather_mimxrt1011.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 08 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_mimxrt1011/</guid>
  </item><item>
    <title>Feather MIMXRT1062</title>
    <link>https://circuitpython.org/board/feather_mimxrt1062/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/feather_mimxrt1062.jpg 300w,
               /assets/images/boards/large/feather_mimxrt1062.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/feather_mimxrt1062.jpg" alt="Image of Board">

<p>By arturo182</p> <p>A Work-In-Progress Feather featuring the NXP i.MX RT1062 MCU.</p>

<h2 id="technical-details">Technical details</h2>

<ul>
  <li>ARM Cortex-M7 MCU running at 600MHz, 1MB of RAM (!)</li>
  <li>8MB of Flash shared between MCU code and CircuitPython storage</li>
  <li>USB Type-C connector</li>
  <li>High density connector with LCD interface supporting up to 1366x768</li>
  <li>Neopixel indicator</li>
  <li>MicroSD slot on the bottom</li>
  <li>Works with CircuitPython!</li>
  <li>I2C, UART, SPI, GPIO, ADCs</li>
  <li>Comes with a UF2 bootloader for easy FW update</li>
</ul>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://twitter.com/arturo182/status/1199841134253682690">Reveal Tweet</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/feather_mimxrt1062.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 08 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_mimxrt1062/</guid>
  </item><item>
    <title>Feather nRF52840 Express</title>
    <link>https://circuitpython.org/board/feather_nrf52840_express/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/feather_nrf52840_express.jpg 300w,
               /assets/images/boards/large/feather_nrf52840_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/feather_nrf52840_express.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The <strong>Adafruit Feather nRF52840 Express</strong> is the new Feather family member with Bluetooth Low Energy and <em>native USB support</em> featuring the nRF52840!  It is Adafruit’s take on an ‘all-in-one’ Bluetooth Low Energy device with built in USB plus battery charging. With native USB it’s part of the CircuitPython party.</p>

<p>This chip has twice the flash, and four times the SRAM of its earlier sibling, the nRF52832 - 1 MB of FLASH and 256KB of SRAM. Compared to the nRF51, this board has 4-8 times more of everything.</p>

<p><strong>This is Adafruit’s first BLE-friendly CircuitPython board</strong>! CircuitPython works best with disk drive access, and this is the only BLE-plus-USB-native chip that has the memory to handle running the Python interpreter. The massive RAM and speedy Cortex M4F chip makes this a good match.</p>

<p>It’s got tons of peripherals: plenty of GPIO, analog inputs, PWM, timers, etc. Best of all, it’s got that native USB! Finally, no need for a separate USB serial chip like CP2104 or FT232.</p>

<p>Some other upgrades are an extra ‘USER’ switch that could be used to trigger OTA updates (or whatever you choose), a NeoPixel LED for status updates, 2 MB of QSPI Flash for storing CircuitPython files, and a SWD connector.</p>

<p>Comes pre-programed the chip with a UF2 bootloader, which can use either command line UART programming with nrfutil or drag-n-drop mass storage, for CircuitPython installation and also because mass-storage-drive bootloaders make updating firmware so easy. Want to program the chip directly? You can use command line tools with your favorite editor and toolchain. If you want to use an SWD programmer/debugger (for even more advanced usage), use a standard 2x5 0.05” connector.</p>

<p><strong>Features:</strong></p>

<ul>
  <li>ARM Cortex M4F (with HW floating point acceleration) running at 64MHz</li>
  <li>1MB flash and 256KB SRAM</li>
  <li><strong>Native Open Source USB stack</strong> - pre-programmed with UF2 bootloader</li>
  <li>Bluetooth Low Energy compatible 2.4GHz radio (Details available in the <a href="https://www.nordicsemi.com/Products/Low-power-short-range-wireless/nRF52840">nRF52840</a> product specification)</li>
  <li><strong>FCC / IC / TELEC certified module</strong></li>
  <li>Up to +8dBm output power</li>
  <li>1.7v to 3.3v operation with internal linear and DC/DC voltage regulators</li>
  <li>21 GPIO, 6 x 12-bit ADC pins, up to 12 PWM outputs (3 PWM modules with 4 outputs each)</li>
  <li>Pin #3 red LED for general purpose blinking, NeoPixel for colorful feedback</li>
  <li>Power/enable pin</li>
  <li>Measures 2.0” x 0.9” x 0.28” (51mm x 23mm x 7.2mm) without headers soldered in</li>
  <li>Light as a (large?) feather - 6 grams</li>
  <li>4 mounting holes</li>
  <li>Reset button</li>
  <li>SWD connector for debugging</li>
</ul>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/introducing-the-adafruit-nrf52840-feather">Feather nRF52840 Express Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4062">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/feather_nrf52840_express.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/feather_nrf52840_express/</guid>
  </item><item>
    <title>Feather STM32F405 Express</title>
    <link>https://circuitpython.org/board/feather_stm32f405_express/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/feather_stm32f405_express.jpg 300w,
               /assets/images/boards/large/feather_stm32f405_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/feather_stm32f405_express.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>ST takes flight in this upcoming Feather board. The new STM32F405 Feather (video) that we designed runs CircuitPython at a blistering 168MHz – our fastest CircuitPython board ever! We put a STEMMA QT / Qwiic port on the end, so you can really easily plug and play I2C sensors.</p>

<p>This Feather has lots of goodies:</p>

<p>STM32F405 Cortex M4 with 1MB Flash, 168MHz speed
3.3V logic, but almost all pins are 5V compliant!
USB C power and data - our first USB C Feather!
LiPo connector and charger
SD socket on the bottom, connected to SDIO port
2 MB SPI Flash chip
Built in NeoPixel indicator
I2C, UART, GPIO, ADCs, DACs
Qwiic/STEMMA-QT connector for fast I2C connectivity
We use the built-in USB DFU bootloader to load firmware. It does not come with a UF2 bootloader.
With CircuitPython basics running on this board, it’s fast to get all our drivers working, then use the built in plotter in Mu to instantly get sensor data displaying within 3 minutes of unboxing.</p>

<p>You can use MicroPython, CircuitPython or Arduino IDE with this board, with some caveats. This board and chipset is new so expect rapid developments and updates!</p>

<p>CircuitPython support is under development. We have digital IO, analog in/out, I2C, SPI, PWM working so far and more on the way. For example, the SDIO SD card is not yet supported natively. DisplayIO is also not yet supported.
Arduino is supported through STM32duino. There’s no auto-reset bootloader support yet so you have to pull the BOOT0 pin high and manually reset before uploading. That said, STM32 support is really good, and we were able to run just about every sketch we tried.
MicroPython support is very solid but Adafruit does not provide MicroPython libraries for sensors!
We tested this in Arduino STM32duino with all our FeatherWings and only the RFM69/RFM9x libraries did not work (they are very platform specific). Its an extraordinarily fast Feather, and our first foray into STM32 - very exciting!</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-stm32f405-feather-express">Feather STM32F405 Express Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4382">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/feather_stm32f405_express.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 26 Sep 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/feather_stm32f405_express/</guid>
  </item><item>
    <title>Fluff M0</title>
    <link>https://circuitpython.org/board/fluff_m0/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/fluff_m0.jpg 300w,
               /assets/images/boards/large/fluff_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/fluff_m0.jpg" alt="Image of Board">

<p>By Radomir Dopieralski</p> <p>A minimal CircuitPython board compatible with the Feather M0 Basic. Everything
that is non-essential has been removed, and the smallest possible chip is used.</p>

<p><a href="https://hackaday.io/project/171381-fluff-m0">Project page on hackaday.io</a></p>

<p><strong>Here are some handy specs!</strong></p>
<ul>
  <li>Measures 2.0” x 0.9” x 0.28” (51mm x 23mm x 8mm) without headers soldered in</li>
  <li>ATSAMD21E18 @ 48MHz with 3.3V logic/power</li>
  <li>256KB of FLASH + 32KB of RAM</li>
  <li>No EEPROM</li>
  <li>3.3V regulator with 500mA peak current output</li>
  <li>USB native support, comes with USB bootloader and serial port debugging</li>
  <li>You also get tons of pins - 23 GPIO pins</li>
  <li>Hardware Serial, hardware I2C, hardware SPI support</li>
  <li>8 x 12-bit analog inputs</li>
  <li>1 x 10-bit analog ouput (DAC)</li>
  <li>Yellow LED for general purpose blinking</li>
  <li>4 mounting holes</li>
</ul>

<p><strong>Differences from Feather M0</strong></p>
<ul>
  <li>No battery charger</li>
  <li>No crystal</li>
  <li>No external flash</li>
  <li>No reset button</li>
  <li>No enable pin, instead you get another GPIO pin</li>
  <li>Two additional analog pins (AREF and A6)</li>
  <li>LED is on a separate, dedicated pin, not on D13</li>
  <li>USB-C PCB socket</li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 22 May 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/fluff_m0/</guid>
  </item><item>
    <title>Fomu</title>
    <link>https://circuitpython.org/board/fomu/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/fomu.jpg 300w,
               /assets/images/boards/large/fomu.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/fomu.jpg" alt="Image of Board">

<p>By Sean 'xobs' Cross</p> <p>Only 13mm long, <strong>Fomu</strong> really puts the <em>micro</em> in microprocessor. Fomu is a fully open-source, programmable FPGA device that sits inside a USB Type-A port. It has four buttons, an RGB LED, and an FPGA that is compatible with a fully open source chain and capable of running a RISC-V core. Fomu comes in a custom plastic enclosure that slots perfectly into a USB port.</p>

<p>Fomu:</p>

<ul>
  <li><strong>has Python</strong>
    <ul>
      <li>With 128 kilobytes of RAM and a large amount of storage, Fomu is powerful enough to run Python natively. And since it lives in your USB port, installation is super simple. FPGAs are complicated, but the latest Python tools make it easy to use Fomu without any specialized training.</li>
    </ul>
  </li>
  <li><strong>runs RISC-V</strong>
    <ul>
      <li>Underneath the Python interpreter lies a RISC-V softcore running on the FPGA fabric. RISC-V is an up-and-coming processor architecture that is poised to take over everything from deeply-embedded chips to high-performance computing. Fomu’s RISC-V softcore is a great introduction to the processor architecture of the future.</li>
    </ul>
  </li>
  <li><strong>is an FPGA</strong>
    <ul>
      <li>An FPGA is a piece of reconfigurable silicon. The default Fomu firmware exposes a USB bootloader running a RISC-V softcore, but you can load whatever you want. Softcores are also available for LM32 and OpenRISC. You can practice adding instructions to the CPU, or add new blocks such as LED blink patterns or better captouch hardware blocks.</li>
    </ul>
  </li>
  <li><strong>is entirely open</strong>
    <ul>
      <li>Developing with Fomu is incredibly easy: just load code via USB and go. Whether you’re writing RISC-V code, Python code, or HDL, it’s all uploaded to Fomu in the same way. The ICE40UP5K FPGA is supported with a fully open toolchain, meaning you can start development without creating an account, signing an NDA, or downloading a multi-gigabyte installer.
An FPGA is an Array of Gates that is Field-Programmable. When you buy a chip such as a CPU, the logic cells are all fixed in place. A CPU can run any amount of code, but if you want to do anything exotic you need to create software and, depending on what you want to do, that software can be very slow.</li>
    </ul>
  </li>
</ul>

<p>For example, many embedded projects use WS2812 LEDs such as <a href="https://www.adafruit.com/?q=WS2812">NeoPixels</a> that require a specialized timing signal. A CPU can generate this signal in software, but it can’t do anything in the background while talking to the light. If the string of LEDs is very long, then the CPU wastes a lot of time and power generating the signal.</p>

<p>With an FPGA, it becomes possible to create an “LED driver” that allows the CPU to keep running while a hardware component handles the timing. The CPU could do other work, or could put itself in a low power state.</p>

<p>In fact, the “CPU” in the FPGA is created from a hardware description language, meaning it can be modified or swapped out. If you wanted, you could create a brand-new CPU instruction. Do you want to have fast 64-bit multiplies? Or maybe you want a way to get random numbers easily? With Fomu and its FPGA, you have the source code to the CPU itself.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4332">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/fomu.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 16 Apr 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/fomu/</guid>
  </item><item>
    <title>Python powered GameBoy-compatible cartridge</title>
    <link>https://circuitpython.org/board/gb_m4/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/gb_m4.jpg 300w,
               /assets/images/boards/large/gb_m4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/gb_m4.jpg" alt="Image of Board">

<p>By Scott Shawcroft</p> <p>CircuitPython for Game Boy is a work in progress, check out the weekly “Show and Tell” or “Top Secret” segment on ASK AN ENGINEER or when it’s ready, the new product videos on <a href="https://www.youtube.com/adafruit">YouTube</a>.</p>

<h2 id="links-and-more">Links and more</h2>
<ul>
  <li><a href="https://twitter.com/adafruit/status/1119323846857904128">Twitter thread</a>.</li>
  <li>A Python powered GameBoy-compatible cartridge with a SAMD51 - <a href="https://github.com/chickadee-tech/pygb">GitHub</a>.</li>
  <li>GBIO branch - <a href="https://github.com/tannewt/circuitpython/tree/gbio">GitHub</a>.</li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/gb_m4.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 05 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/gb_m4/</guid>
  </item><item>
    <title>Gemma M0</title>
    <link>https://circuitpython.org/board/gemma_m0/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/gemma_m0.jpg 300w,
               /assets/images/boards/large/gemma_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/gemma_m0.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The <strong>Adafruit Gemma M0</strong> is a super small microcontroller board, with just enough built-in to create many simple projects. It may look small and cute: round, about the size of a quarter, with friendly alligator-clip sew pads. But do not be fooled! The Gemma M0 is incredibly powerful! Adafruit used the same form factor from <a href="https://www.adafruit.com/product/1222">the original ATtiny85-based Gemma</a> and gave it an upgrade. The Gemma M0 has swapped out the lightweight ATtiny85 for a ATSAMD21E18 powerhouse.</p>

<p>The Gemma M0 will super-charge your wearables! It’s just as small, and it’s easier to use, so you can do more.</p>

<p>The most exciting part of the Gemma M0 is that it ships with CircuitPython on board. When you plug it in, it will show up as a very small disk drive with <strong>code.py</strong> on it. Edit <strong>code.py</strong> with your favorite text editor to build your project using Python, the most popular programming language. No installs, IDE or compiler needed, so you can use it on any computer, even ChromeBooks or computers you can’t install software on. When you’re done, unplug the Gemma M0 and your code will go with you.</p>

<p>Gemma M0 features:</p>

<ul>
  <li>Same size, form-factor, and pinout as classic Gemma</li>
  <li>Updating ATtiny85 8-bit AVR for ATSAMD21E18 32-bit Cortex M0+</li>
  <li><strong>256KB Flash</strong> - 8x as much as 8 KB on ATtiny85</li>
  <li><strong>32 KB RAM</strong> - 64x as much as 512 bytes on ATtiny85</li>
  <li><strong>48 MHz 32 bit processor</strong> - 6x as fast as ATtiny85 (not even taking into account 32-bit speedups)</li>
  <li><strong>Native USB supported by every OS</strong> - can be used in CircuitPython as USB serial console, Keyboard/Mouse HID, even a little disk drive for storing Python scripts. (ATtiny85 does not have native USB)</li>
  <li><strong>Built in RGB DotStar LED</strong></li>
  <li><strong>Three big-hole sew-pads</strong> can be used for conductive thread or alligator-clips for fast prototyping
    <ul>
      <li>Each I/O pad can be used for <strong>12-bit analog input</strong>, or <strong>digital input/output </strong>with internally connected pullups or pulldowns</li>
      <li>True <strong>analog output</strong> on one I/O pad - can be used to play 10-bit quality audio clips</li>
      <li><strong>Two</strong> <strong>high speed PWM</strong> outputs on other two I/O Pads - for servos, LEDs, etc</li>
      <li>All three pads can also be used as <strong>hardware capacitive touch sensors</strong> with no additional components required</li>
      <li>Can drive <strong>NeoPixels or DotStars on any pins, with enough memory to drive 8000+ pixels</strong>. <a href="https://learn.adafruit.com/dma-driven-neopixels">DMA-NeoPixel support on one pin </a>so you can drive pixels without having to spend any processor time on it.</li>
      <li>Native hardware I2C or Serial available on two pads so you can connect to any I2C or Serial device with true hardware support (no annoying bit-banging)</li>
    </ul>
  </li>
  <li>Same <strong>Reset switch</strong> for starting your project code over</li>
  <li><strong>On/Off switch</strong> built in</li>
  <li><strong>JST battery connector</strong> for plugging in AAA’s or LiPoly battery (no built-in LiPoly charging so it is safe to use with NiMH/Alkalines)</li>
</ul>

<p>Fully assembled and tested Gemma M0 with CircuitPython &amp; example code programmed in.</p>

<h2 id="tutorials">Tutorials</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-gemma-m0">Gemma M0 Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/3501">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/gemma_m0.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/gemma_m0/</guid>
  </item><item>
    <title>Gemma M0 PyCon 2018</title>
    <link>https://circuitpython.org/board/gemma_m0_pycon2018/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/gemma_m0_pycon2018.jpg 300w,
               /assets/images/boards/large/gemma_m0_pycon2018.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/gemma_m0_pycon2018.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The <strong>Adafruit Gemma M0</strong> is a super small microcontroller board, with just enough built-in to create many simple projects. It may look small and cute: round, about the size of a quarter, with friendly alligator-clip sew pads. But do not be fooled! The Gemma M0 is incredibly powerful! Adafruit used the same form factor from <a href="https://www.adafruit.com/product/1222">the original ATtiny85-based Gemma</a> and gave it an upgrade. The Gemma M0 has swapped out the lightweight ATtiny85 for a ATSAMD21E18 powerhouse.</p>

<p>The Gemma M0 will super-charge your wearables! It’s just as small, and it’s easier to use, so you can do more.</p>

<p>The most exciting part of the Gemma M0 is that it ships with CircuitPython on board. When you plug it in, it will show up as a very small disk drive with <strong>code.py</strong> on it. Edit <strong>code.py</strong> with your favorite text editor to build your project using Python, the most popular programming language. No installs, IDE or compiler needed, so you can use it on any computer, even ChromeBooks or computers you can’t install software on. When you’re done, unplug the Gemma M0 and your code will go with you.</p>

<p>Gemma M0 features:</p>

<ul>
  <li>Same size, form-factor, and pinout as classic Gemma</li>
  <li>Updating ATtiny85 8-bit AVR for ATSAMD21E18 32-bit Cortex M0+</li>
  <li><strong>256KB Flash</strong> - 8x as much as 8 KB on ATtiny85</li>
  <li><strong>32 KB RAM</strong> - 64x as much as 512 bytes on ATtiny85</li>
  <li><strong>48 MHz 32 bit processor</strong> - 6x as fast as ATtiny85 (not even taking into account 32-bit speedups)</li>
  <li><strong>Native USB supported by every OS</strong> - can be used in CircuitPython as USB serial console, Keyboard/Mouse HID, even a little disk drive for storing Python scripts. (ATtiny85 does not have native USB)</li>
  <li><strong>Built in RGB DotStar LED</strong></li>
  <li><strong>Three big-hole sew-pads</strong> can be used for conductive thread or alligator-clips for fast prototyping
    <ul>
      <li>Each I/O pad can be used for <strong>12-bit analog input</strong>, or <strong>digital input/output </strong>with internally connected pullups or pulldowns</li>
      <li>True <strong>analog output</strong> on one I/O pad - can be used to play 10-bit quality audio clips</li>
      <li><strong>Two</strong> <strong>high speed PWM</strong> outputs on other two I/O Pads - for servos, LEDs, etc</li>
      <li>All three pads can also be used as <strong>hardware capacitive touch sensors</strong> with no additional components required</li>
      <li>Can drive <strong>NeoPixels or DotStars on any pins, with enough memory to drive 8000+ pixels</strong>. <a href="https://learn.adafruit.com/dma-driven-neopixels">DMA-NeoPixel support on one pin </a>so you can drive pixels without having to spend any processor time on it.</li>
      <li>Native hardware I2C or Serial available on two pads so you can connect to any I2C or Serial device with true hardware support (no annoying bit-banging)</li>
    </ul>
  </li>
  <li>Same <strong>Reset switch</strong> for starting your project code over</li>
  <li><strong>On/Off switch</strong> built in</li>
  <li><strong>JST battery connector</strong> for plugging in AAA’s or LiPoly battery (no built-in LiPoly charging so it is safe to use with NiMH/Alkalines)</li>
</ul>

<p>Fully assembled and tested Gemma M0 with CircuitPython &amp; example code programmed in.</p>

<h2 id="tutorials">Tutorials</h2>
<ul>
  <li><a href="https://learn.adafruit.com/adafruit-gemma-m0">Adafruit Gemma M0</a></li>
</ul>

<h2 id="downloads">Downloads</h2>
<ul>
  <li><a href="https://github.com/adafruit/CircuitPython_Badge_README/tree/master/final_versions/PYCON_2018">PyCon 2018 Gemma Files</a></li>
</ul>

<h2 id="contribute">Contribute</h2>
<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/gemma_m0_pycon2018.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 13 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/gemma_m0_pycon2018/</guid>
  </item><item>
    <title>Grand Central M4 Express</title>
    <link>https://circuitpython.org/board/grandcentral_m4_express/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/grandcentral_m4_express.jpg 300w,
               /assets/images/boards/large/grandcentral_m4_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/grandcentral_m4_express.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The <strong>Adafruit Grand Central</strong> features the <strong>Microchip ATSAMD51</strong>. This dev board is so big, it’s not named after a Metro train, it’s a whole freakin’ <em>station</em>!</p>

<p>This board is like a freight train, with its 120MHz Cortex M4 with floating point support. Your code will zig and zag and zoom, and with a bunch of extra peripherals for support, this will for sure be your favorite new chipset.</p>

<p>The Grand Central is the first SAMD board that has enough pins to make it in the form of the Arduino Mega - with a massive number of pins, tons of analog inputs, dual DAC output, 8 MBytes of QSPI flash, SD card socket, and a NeoPixel.</p>

<p>To start off our ATSAMD51 journey, it goes large with the Mega shape and pinout you know and love. The front half has the same shape and pinout as an Adafruit Metro, so it is compatible with many shields. It’s got analog pins where you expect, and SPI/UART/I2C hardware support in the same spot as the Metro 328 and M0. But! It’s powered with an ATSAMD51P20:</p>

<ul>
  <li>Cortex M4 core running at <strong>120 MHz</strong></li>
  <li><a href="https://developer.arm.com/technologies/dsp/dsp-for-cortex-m">Floating point support with Cortex M4 DSP instructions</a></li>
  <li><strong>1MB</strong> flash, <strong>256 KB</strong> RAM</li>
  <li>32-bit, 3.3V logic and power</li>
  <li><strong>70 GPIO pins in total</strong></li>
  <li>Dual 1 MSPS DAC (A0 and A1)</li>
  <li>Dual 1 MSPS ADC (15 analog pins)</li>
  <li>8 x hardware SERCOM (can be I2C, SPI or UART)</li>
  <li>22 x PWM outputs</li>
  <li>Stereo I2S input/output with MCK pin</li>
  <li>12-bit Parallel capture controller (for camera/video in)</li>
  <li>Built in crypto engines with AES (256 bit), true RNG, Pubkey controller</li>
</ul>

<p>Extras:</p>

<ul>
  <li><strong>Power the Grand Central</strong> with 6-12V polarity protected DC or the micro USB connector to any 5V USB source. The 2.1mm DC jack has an on/off switch next to it so you can turn off your setup easily. The board will automagically switch between USB and DC.</li>
  <li><strong>Grand Central has 62 GPIO pins</strong>, 16 of which are analog in, and two of which is a true analog out. There’s a hardware SPI port, hardware I2C port and hardware UART. 5 more SERCOMs are available for extra I2C/SPI/UARTs.</li>
  <li><strong>Logic level is 3.3V</strong></li>
  <li><strong>Native USB</strong>, there’s no need for a hardware USB to Serial converter as the Metro M4 has built in USB support. When used to act like a serial device, the USB interface can be used by any computer to listen/send data to the METRO, and can also be used to launch and update code via the bootloader. It can also act like an HID keyboard or mouse.</li>
  <li><strong>Four indicator LEDs and one NeoPixel</strong>, on the front edge of the PCB, for easy debugging. One green power LED, two RX/TX LEDs for data being sent over USB, and a red LED connected. Next to the reset button there is an RGB NeoPixel that can be used for any purpose.</li>
  <li><strong>8 MB QSPI Flash </strong>storage chip is included on board. You can use the SPI Flash storage like a very tiny hard drive. When used in Circuit Python, the 8 MB flash acts as storage for all your scripts, libraries and files.</li>
  <li><strong>Micro SD Card slot</strong> - removable storage of any size, connected to an SPI SERCOM (SDIO is not supported)</li>
  <li><strong>Easy reprogramming</strong>, comes pre-loaded with the <a href="https://learn.adafruit.com/adafruit-metro-m0-express-designed-for-circuitpython/uf2-bootloader">UF2 bootloader</a>, which looks like a USB storage key. Simply drag firmware on to program, no special tools or drivers needed! It can be used to load up CircuitPython (it is bossa v1.8 compatible)</li>
</ul>

<p>The primary target for this board is CircuitPython - with 120 MHz, and 256KB of RAM CircuitPython runs <em>really</em> well on this chip!</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-grand-central">Grand Central M4 Express Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4064">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/grandcentral_m4_express.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/grandcentral_m4_express/</guid>
  </item><item>
    <title>HalloWing M0 Express</title>
    <link>https://circuitpython.org/board/hallowing_m0_express/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/hallowing_m0_express.jpg 300w,
               /assets/images/boards/large/hallowing_m0_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/hallowing_m0_express.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>This is Hallowing..this is Hallowing… Hallowing! Hallowing! </p>

<p>Are you the kind of person who doesn’t like taking down the skeletons and spiders until after January? This is development board for you. This is electronics at its <em>most spooky!</em> The <strong>Adafruit HalloWing</strong> is a skull-shaped ATSAMD21 board with a ton of extras built in to make for an adorable wearable, badge, development kit, or the engine for your next cosplay or prop.</p>

<p>On the front is a cute <strong>1.44” sized 128x128 full color TFT</strong>. There’s also 4 fang-teeth below the display, these are analog/capacitive touch inputs with big alligator-clip holes.</p>

<p>On the reverse is a smorgasbord of electronic goodies:</p>

<ul>
  <li><strong>ATSAMD21G18</strong> @ 48MHz with 3.3V logic/power - 256KB of FLASH + 32KB of RAM</li>
  <li><strong>8 MB of SPI Flash</strong> for storing images, sounds, animations, whatever!</li>
  <li><strong>3-axis accelerometer</strong> (motion sensor)</li>
  <li><strong>Light sensor</strong>, reverse-mount so that it points out the front</li>
  <li><strong>Mono Class-D speaker driver</strong> for 4-8 ohm speakers, up to 2 Watts, with mini volume pot</li>
  <li>LiPoly battery port with built in recharging capability</li>
  <li>USB port for battery charging, programming and debugging</li>
  <li>Two female header strips with Feather-compatible pinout so you can plug any FeatherWings in</li>
  <li>JST ports for Neopixels, sensor input, and I2C (you can fit I2C Grove connectors in here)</li>
  <li>3.3V regulator with 500mA peak current output</li>
  <li>Reset button</li>
  <li>On-Off switch</li>
</ul>

<p>Right now you can use the Hallowing similarly Feather M0 Express, it’s got the same chip although the pins have been rearranged. CircuitPython support, the extra 8 MB of SPI Flash is great for sound effects projects where you want to play up to 3 minutes of WAV files.</p>

<p>On each side of the Hallowing are JST-PH plugs for connecting external devices. The 3-pin JSTs connect to analog pins on the SAMD21, so you can use them for analog inputs. One is labeled for Neopixel and one for Sensors since most people will have one of each. The 4-pin JST connector connects to the I2C port and you can fit Grove connectors in it for additional hardware support.</p>

<p>Comes fully assembled and ready to be your spooky friend. Comes installed with the UF2 bootloader.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-hallowing">HalloWing M0 Express Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/3900/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3900">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/hallowing_m0_express.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/hallowing_m0_express/</guid>
  </item><item>
    <title>HalloWing M4 Express</title>
    <link>https://circuitpython.org/board/hallowing_m4_express/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/hallowing_m4_express.jpg 300w,
               /assets/images/boards/large/hallowing_m4_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/hallowing_m4_express.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>This is Hallowing, now with SAMD51 M4 processor! More later!</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-hallowing-m4">HalloWing M4 Express Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/4300/guides">HalloWing M4 Projects and Guides</a></li>
  <li><a href="https://learn.adafruit.com/products/3900/guides">HalloWing M0 Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4300">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/hallowing_m4_express.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 30 Aug 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/hallowing_m4_express/</guid>
  </item><item>
    <title>HiiBot BlueFi</title>
    <link>https://circuitpython.org/board/hiibot_bluefi/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/hiibot_bluefi.jpg 300w,
               /assets/images/boards/large/hiibot_bluefi.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/hiibot_bluefi.jpg" alt="Image of Board">

<p>By Hangzhou LeBan</p> <p>The HiiBot BlueFi is a microbit-compatible single board computer, but has enhanced computing ability, and connectivity. BlueFi uses Nordic nRF52840 (64MHz Cortex M4F, 1MB Flash and 256KB SRAM) as main processor, ESP32 (160MHz dual CPU, 4MB Flash and 520KB SRAM) as a co-processor. Features:</p>

<ul>
  <li>Microbit-compatible (board size, extended interface)</li>
  <li>Built-in BlueTooth 5 (nRF52840) and WiFi (ESP32)</li>
  <li>2 MB of QSPI Flash storage</li>
  <li>Battery Charging and 1.5A DC-DC</li>
  <li>1.3” TFT-LCD (IPS 240x240)</li>
  <li>5x Neopixel</li>
  <li>1W Speaker with class-D amplifier</li>
  <li>1x Red LED (programmable)</li>
  <li>1x White LED (programmable)</li>
  <li>2x Button (A and B) + 1x reset button</li>
  <li>1x Sound sensor (MEMS microphone)</li>
  <li>1x Integrated Optical sensor (Proximity, Gesture, Color, and Illumination)</li>
  <li>1x Temperature and Humidity sensor (SHT31-Dis)</li>
  <li>1x Magnetometer 3-axis sensor (LIS3MDL)</li>
  <li>1x 3-axis Accelerometer and 3-axis Gyroscope (LSM6DS)</li>
  <li>1x mini-Grove/Qwiic/STEMMA QT connector</li>
</ul>

<p>The HiiBot BlueFi have a lot of sensors, vs 6-DoF motion sensor of microbit, including 9-DoF motion sensors, sound sensor, temperature &amp; humidity sensor, and integrated optical sensor. At the same time, BlueFi have two buttons, three touchpads, and 40-Pin extended interface on the microbit.</p>

<p>In a variety of IoT application scenario, BlueTooth and WiFi is an integral part of the wireless connection channel. BlueTooth and WiFi be supportted at the same time on the BlueFI board. You can realize bridges, gateways and other net equipment with BlueFi.</p>

<p>Built-in a lot of sensors and output devices on the HiiBot BlueFi, but a low-cost SBC. Our purpose is to help you quickly realize all kinds of ideas, no trouble wiring and welding electronic components.</p>

<p>The most exciting part of the HiiBot BlueFi is that while you can use it with the Arduino IDE - and it’s bonkers fast when you do, we are shipping it with CircuitPython on board. When you plug it in, it will show up as a very small disk drive with code.py on it. Edit code.py with your favorite text editor to build your project using Python, the most popular programming language. No installs, IDE or compiler needed, so you can use it on any computer, even ChromeBooks or computers you can’t install software on. When you’re done, unplug the BlueFi and your code will go with you.</p>

<p>Easy reprogramming: the HiiBot BlueFi comes pre-loaded with the UF2 bootloader, which looks like a USB storage key. Simply drag firmware on to program, no special tools or drivers needed! It can be used to load up CircuitPython or Arduino IDE.</p>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/hiibot_bluefi.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 19 May 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/hiibot_bluefi/</guid>
  </item><item>
    <title>HiiBot IoTs2</title>
    <link>https://circuitpython.org/board/hiibot_iots2/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/hiibot_iots2.jpg 300w,
               /assets/images/boards/large/hiibot_iots2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/hiibot_iots2.jpg" alt="Image of Board">

<p>By Hangzhou LeBan</p> <p>Introducing the microS2 - An ESP32-S2 based development board with smaller size (25.4*45.9mm). Features:</p>

<ul>
  <li>32-bit 240 MHz single-core processor</li>
  <li>8MB SPI FlashROM</li>
  <li>8MB SPI PSRAM</li>
  <li>2.4 GHz Wi-Fi - 802.11b/g/n</li>
  <li>USB Type-C</li>
  <li>1.14” TFT-LCD (IPS 135x240)</li>
  <li>1x Neopixel (IO16)</li>
  <li>1x programmable Blue LED (IO37)</li>
  <li>2x LED indicator (power[Green], charge[Red])</li>
  <li>1x programmable Button (IO21)</li>
  <li>1x System Reset button</li>
  <li>1x 3-axis Accelerometer (LIS3DH, IO1&amp;2)</li>
  <li>20x GPIO pin exposed</li>
  <li>Battery Charging and 1.5A DC-DC</li>
  <li>1x Qwiic/STEMMA QT connector (IO1&amp;2)</li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/hiibot_iots2.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 19 Nov 2020 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/hiibot_iots2/</guid>
  </item><item>
    <title>Ikigaisense Vita</title>
    <link>https://circuitpython.org/board/ikigaisense_vita/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/ikigaisense_vita.jpg 300w,
               /assets/images/boards/large/ikigaisense_vita.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/ikigaisense_vita.jpg" alt="Image of Board">

<p>By Ikigaisense</p> <p>Ideally VitaPatch could be a disposable patch. It is an dedicated device to monitor vital signs of temperature, heart rate, SpO2 and blood pressure. It is also an integrated solution to monitor all these vital signs.</p>

<p>VitaPatch has to be small if not tiny so that it is convenient. It has to be cheap so that it could be available to more people. It will be open sourced so that anyone could hack and improve.</p>

<p>This is an ambitious endeavour and most likely a bumpy one. If you are intrigued, let’s join the force to make it real.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://hackaday.io/project/173761-vita-hardware">Hackaday.io</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/ikigaisense_vita.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 29 Aug 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/ikigaisense_vita/</guid>
  </item><item>
    <title>MIMXRT1010 Eval Kit</title>
    <link>https://circuitpython.org/board/imxrt1010_evk/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/imxrt1010_evk.jpg 300w,
               /assets/images/boards/large/imxrt1010_evk.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/imxrt1010_evk.jpg" alt="Image of Board">

<p>By NXP</p> <p>The i.MX RT1010 EVK is a two-layer low-cost through-hole USB-powered PCB. At its heart lies the i.MX RT1010 crossover MCU in an 80LQFP package, featuring NXP’s advanced implementation of the Arm® Cortex®-M7 core. This core operates at speeds of up to 500 MHz to provide high CPU performance and best real-time response.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.nxp.com/design/development-boards/i.mx-evaluation-and-development-boards/i.mx-rt1010-evaluation-kit:MIMXRT1010-EVK">NXP</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/imxrt1010_evk.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 08 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/imxrt1010_evk/</guid>
  </item><item>
    <title>MIMXRT1020 Eval Kit</title>
    <link>https://circuitpython.org/board/imxrt1020_evk/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/imxrt1020_evk.jpg 300w,
               /assets/images/boards/large/imxrt1020_evk.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/imxrt1020_evk.jpg" alt="Image of Board">

<p>By NXP</p> <p>The i.MX RT1020 EVK is a 2-layer low-cost through-hole USB-powered PCB. At its heart lies the i.MX RT1020 crossover MCU in LQFP144 package, featuring NXP’s advanced implementation of the Arm® Cortex®-M7 core. This core operates at speeds up to 500 MHz to provide high CPU performance and excellent real-time response.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.nxp.com/design/development-boards/i.mx-evaluation-and-development-boards/i.mx-rt1020-evaluation-kit:MIMXRT1020-EVK">NXP</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/imxrt1020_evk.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 31 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/imxrt1020_evk/</guid>
  </item><item>
    <title>MIMXRT1060 Eval Kit</title>
    <link>https://circuitpython.org/board/imxrt1060_evk/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/imxrt1060_evk.jpg 300w,
               /assets/images/boards/large/imxrt1060_evk.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/imxrt1060_evk.jpg" alt="Image of Board">

<p>By NXP</p> <p>The i.MX RT1060 EVK is a 4-layer through-hole USB-powered PCB. At its heart lies the i.MX RT1060 crossover MCU, featuring NXP’s advanced implementation of the Arm® Cortex®-M7 core. This core operates at speeds up to 600 MHz to provide high CPU performance and excellent real-time response.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.nxp.com/design/development-boards/i.mx-evaluation-and-development-boards/i.mx-rt1060-evaluation-kit:MIMXRT1060-EVK">NXP</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/imxrt1060_evk.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 31 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/imxrt1060_evk/</guid>
  </item><item>
    <title>ItsyBitsy M0 Express</title>
    <link>https://circuitpython.org/board/itsybitsy_m0_express/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/itsybitsy_m0_express.jpg 300w,
               /assets/images/boards/large/itsybitsy_m0_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/itsybitsy_m0_express.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>What’s smaller than a Feather but larger than a Trinket? It’s an <strong>Adafruit ItsyBitsy M0 Express</strong>! Small, powerful, with a rockin’ ATSAMD21 Cortex M0 processor running at 48 MHz - this microcontroller board is perfect when you want something very compact, but still with a bunch of pins.</p>

<p>ItsyBitsy M0 Express is only 1.4” long by 0.7” wide, but has 6 power pins, 23 digital GPIO pins (12 of which can be analog in, 1x analog out, and 13x PWM out). It packs much of the same capability as an <a href="https://www.adafruit.com/product/3505">Adafruit Metro M0 Express</a> or <a href="https://www.adafruit.com/product/3403">Feather M0 Express</a> but <em>really really small</em>. So it’s great once you’ve finished up a prototype on a Metro M0 or Feather M0, and want to make the project much smaller. It even comes with 2MB of SPI Flash built in, for data logging, file storage, or CircuitPython code.</p>

<p>The most exciting part of the ItsyBitsy M0 is that it is shipping with CircuitPython on board. When you plug it in, it will show up as a very small disk drive with code.py on it. Edit code.py with your favorite text editor to build your project using Python, the most popular programming language. No installs, IDE or compiler needed, so you can use it on any computer, even ChromeBooks or computers you can’t install software on. When you’re done, unplug the Itsy’ and your code will go with you.</p>

<p>Here are some of the updates you can look forward to when using ItsyBitsy M0:</p>

<ul>
  <li>Same size, form-factor as the ItsyBisty 32u4, and nearly-indentical pinout as <a href="https://www.adafruit.com/product/3675">ItsyBitsy 32u4 3.3V</a></li>
  <li><strong>ATSAMD21G18 32-bit Cortex M0+</strong> with <strong>256KB Flash</strong> and <strong>32 KB RAM</strong></li>
  <li><strong>3.3V logic</strong>, <strong>48 MHz</strong>, <strong>32 bit</strong> processor</li>
  <li><strong>2 MB SPI FLASH chip</strong> for storing files and CircuitPython code storage.</li>
  <li>Native USB supported by every OS - can be used in CircuitPython as USB serial console, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Built in red pin #13 LED</li>
  <li>Built in RGB DotStar LED</li>
  <li>Tons of GPIO! 23 x GPIO pins with following capabilities:
    <ul>
      <li>1 x True analog output pin - can be used to play 10-bit quality audio clips</li>
      <li>13 x PWM outputs - for servos, LEDs, etc</li>
      <li>11 x 12-bit analog inputs</li>
      <li>7 x Hardware capacitive touch sensors with no additional components required</li>
      <li>1 x Special <strong>Vhigh</strong> output pin gives you the higher voltage from VBAT or VUSB, for driving NeoPixels, servos, and other high-current devices. <strong>Digital 5</strong> level-shifted output for high-voltage logic level output.</li>
      <li>Can drive NeoPixels or DotStars on any pins, with enough memory to drive 8000+ pixels. <a href="https://learn.adafruit.com/dma-driven-neopixels">DMA-NeoPixel support on the VHigh pin </a>so you can drive pixels without having to spend any processor time on it.</li>
      <li>Native hardware SPI, I2C and Serial all available</li>
    </ul>
  </li>
  <li>Reset button and pin</li>
  <li>Power with either USB or external output (such as a battery) - it’ll automatically switch over</li>
</ul>

<p>Comes assembled and tested ItsyBitsy M0, with header that can be soldered in for use with a breadboard. ItsyBity M0 comes with CircuitPython &amp; example code programmed in.</p>

<h2 id="tutorials">Tutorials</h2>

<ul>
  <li><a href="https://learn.adafruit.com/introducing-itsy-bitsy-m0">ItsyBitsy M0 Express Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/3727/guides">Projects and Guides</a>
    <h2 id="purchase">Purchase</h2>
  </li>
  <li><a href="https://www.adafruit.com/product/3727">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/itsybitsy_m0_express.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/itsybitsy_m0_express/</guid>
  </item><item>
    <title>ItsyBitsy M4 Express</title>
    <link>https://circuitpython.org/board/itsybitsy_m4_express/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/itsybitsy_m4_express.jpg 300w,
               /assets/images/boards/large/itsybitsy_m4_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/itsybitsy_m4_express.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>What’s smaller than a Feather but larger than a Trinket? It’s an <strong>Adafruit ItsyBitsy M4 Express</strong> featuring the <strong>Microchip ATSAMD51</strong>! Small, powerful, with a ultra fast ATSAMD51 Cortex M4 processor running at 120 MHz - this microcontroller board is perfect when you want something very compact, with a ton of horsepower and a bunch of pins. This Itsy is like a bullet train, with it’s <strong>120MHz Cortex M4</strong> with floating point support and <strong>512KB Flash and 192KB RAM</strong>. Your code will zig and zag and zoom, and with a bunch of extra peripherals for support, this will for sure be your favorite new chipset.</p>

<p>ItsyBitsy M4 Express is only is only 1.4” long by 0.7” wide, but has 6 power pins, 23 digital GPIO pins (7 of which can be analog in, 2 x 1 MSPS analog out DACs, and 18 x PWM out). It’s the same chip as the <a href="https://www.adafruit.com/product/3382">Adafruit Metro M4</a> but <em>really really small</em>. So it’s great once you’ve finished up a prototype on a Metro M4 or (the upcoming) Feather M4, and want to make the project much smaller. It even comes with 2MB of SPI Flash built in, for data logging, file storage, or CircuitPython code.</p>

<p>The most exciting part of the ItsyBitsy M4 is that it ships with CircuitPython on board. When you plug it in, it will show up as a very small disk drive with code.py on it. Edit code.py with your favorite text editor to build your project using Python, the most popular programming language. No installs, IDE or compiler needed, so you can use it on any computer, even ChromeBooks or computers you can’t install software on. When you’re done, unplug the Itsy’ and your code will go with you.</p>

<p>Here are some of the updates you can look forward to when using ItsyBitsy M4:</p>

<ul>
  <li>Same size, form-factor as the <a href="https://www.adafruit.com/product/3675">ItsyBitsy 32u4</a> and <a href="https://www.adafruit.com/product/3727">ItsyBitsy M0</a>, and nearly-identical pinout as both</li>
  <li><strong>ATSAMD51 32-bit Cortex M4</strong> core running at <strong>120 MHz</strong></li>
  <li><a href="https://developer.arm.com/technologies/dsp/dsp-for-cortex-m">Floating point support with Cortex M4 DSP instructions</a></li>
  <li><strong>512 KB</strong> flash, <strong>192 KB</strong> RAM</li>
  <li><strong>2 MB SPI FLASH chip</strong> for storing files and CircuitPython code storage.</li>
  <li>32-bit, 3.3V logic and power</li>
  <li>Tons of GPIO! 23 x GPIO pins with following capabilities:
    <ul>
      <li>Dual 1 MSPS 12 bit true analog DAC (A0 and A1) - can be used to play 12-bit stereo audio clips</li>
      <li>Dual 1 MSPS 12 bit ADC (7 analog pins some on ADC1 and some on ADC2)</li>
      <li>6 x hardware SERCOM - Native hardware SPI, I2C and Serial all available</li>
      <li>18 x PWM outputs - for servos, LEDs, etc</li>
      <li>No I2S. I2S is only supported on the 64 pin version of this chip. But there’s a stereo DAC you could use.</li>
      <li>1 x Special <strong>Vhigh</strong> output pin gives you the higher voltage from VBAT or VUSB, for driving NeoPixels, servos, and other 5V-logic devices. <strong>Digital 5</strong> level-shifted output for high-voltage logic level output.</li>
      <li>Can drive NeoPixels or DotStars on any pins, with enough memory to drive 60,000+ pixels. <a href="https://learn.adafruit.com/dma-driven-neopixels">DMA-NeoPixel support on the VHigh pin </a>so you can drive pixels without having to spend any processor time on it.</li>
    </ul>
  </li>
  <li>Native USB supported by every OS - can be used in Arduino or CircuitPython as USB serial console, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with Arduino IDE or CircuitPython</li>
  <li>Built in red pin #13 LED</li>
  <li>Built in RGB DotStar LED</li>
  <li>Reset button and pin</li>
  <li>Power with either USB or external output (such as a battery) - it’ll automatically switch over</li>
  <li>Comes pre-loaded with the <a href="https://learn.adafruit.com/adafruit-metro-m0-express-designed-for-circuitpython/uf2-bootloader">UF2 bootloader</a>, which looks like a USB storage key. Simply drag firmware on to program, no special tools or drivers needed! It can be used to load up CircuitPython or Arduino IDE (it is bossa v1.8 compatible)</li>
</ul>

<p>Comes assembled and tested, with headers that can be soldered in for use with a breadboard. ItsyBitsy M4 comes with CircuitPython programmed in.</p>

<h2 id="tutorials">Tutorials</h2>

<ul>
  <li><a href="https://learn.adafruit.com/introducing-adafruit-itsybitsy-m4">Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3800">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/itsybitsy_m4_express.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/itsybitsy_m4_express/</guid>
  </item><item>
    <title>ItsyBitsy NRF52840 Express</title>
    <link>https://circuitpython.org/board/itsybitsy_nrf52840_express/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/itsybitsy_nrf52840_express.jpg 300w,
               /assets/images/boards/large/itsybitsy_nrf52840_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/itsybitsy_nrf52840_express.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>What’s smaller than a Feather but larger than a Trinket? It’s an <strong>Adafruit ItsyBitsy nRF52840 Express</strong> featuring the <strong>Nordic nRF52840 Bluetooth LE</strong> processor! Teensy &amp; powerful, with an fast nRF52840 Cortex M4 processor running at 64 MHz and 1 MB of FLASH - this microcontroller board is perfect when you want something very compact, with a heap-load of memory and Bluetooth LE support This Itsy is your best option for tiny wireless connectivity - it can act as both a BLE central and peripheral, with support in both Arduino and CircuitPython</p>

<p>ItsyBitsy nRF52840 Express is only 1.4” long by 0.7” wide, but has 6 power pins, 21 digital GPIO pins (6 of which can be analog in). It’s the same chip as the <a href="https://www.adafruit.com/product/4062">Feather nRF52840</a> but <em>really really small</em>. So it’s great for thse really compact builds. It even comes with 2MB of QSPI Flash built in, for data logging, file storage, or CircuitPython code.</p>

<p>The most exciting part of the ItsyBitsy is that while we ship it with an Arduino IDE compatible demo, you can also install CircuitPython on board with only a few clicks. When you plug it in, it will show up as a very small disk drive with code.py on it. Edit code.py with your favorite text editor to build your wireless-enabled project using Python, the most popular programming language. No installs, IDE or compiler needed, so you can use it on any computer, even ChromeBooks or computers you can’t install software on. When you’re done, unplug the Itsy’ and your code will go with you.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-itsybitsy-nrf52840-express">ItsyBitsy NRF52840 Express Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4481">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/itsybitsy_nrf52840_express.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 04 Nov 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/itsybitsy_nrf52840_express/</guid>
  </item><item>
    <title>KickSat Sprite</title>
    <link>https://circuitpython.org/board/kicksat-sprite/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/kicksat-sprite.jpg 300w,
               /assets/images/boards/large/kicksat-sprite.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/kicksat-sprite.jpg" alt="Image of Board">

<p>By Max Holliday</p> <p>CircuitPython provides an approachable and logical means of conducting science with hardware. Paired with low-cost hardware shown to work in space, we can enable an new generation to question and explore the unknown. With the necessary “satellite stuff” already baked in, students can spend their time trying something new rather than reinventing the wheel (similar philosophy to early Arduino efforts and the microcontroller movement in general).</p>

<h2 id="resources">Resources</h2>
<p><a href="https://github.com/RoboticExplorationLab/sprite">RoboticExplorationLab/sprite</a>.</p>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/kicksat-sprite.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 13 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/kicksat-sprite/</guid>
  </item><item>
    <title>TTGO T8 ESP32-S2 ST7789</title>
    <link>https://circuitpython.org/board/lilygo_ttgo_t8_s2_st7789/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/lilygo_ttgo_t8_s2_st7789.jpg 300w,
               /assets/images/boards/large/lilygo_ttgo_t8_s2_st7789.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/lilygo_ttgo_t8_s2_st7789.jpg" alt="Image of Board">

<p>By LILYGO</p> <p><strong>Features &amp; Specifications:</strong></p>
<ul>
  <li>ESP32-S2 240MHz Tensilica processor</li>
  <li>Wi-Fi 802.11 b/g/n 2.4GHz</li>
  <li>4MB FLASH</li>
  <li>8MB PSRAM</li>
  <li>1.14” ST7789 Display</li>
  <li>microSD card slot</li>
  <li>built in battery charging, 2-pin 1.25mm JST connector</li>
  <li>on/off power switch</li>
  <li>reset and boot button</li>
  <li>onboard 32.768kHz crystal oscillator</li>
  <li>USB type-C connector</li>
</ul>

<p><strong>Schematic:</strong></p>
<ul>
  <li><a href="https://github.com/Xinyuan-LilyGO/LilyGo-T-Display-S2">LILYGO Github repository</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/lilygo_ttgo_t8_s2_st7789.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 31 Dec 1969 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/lilygo_ttgo_t8_s2_st7789/</guid>
  </item><item>
    <title>M60 Mechanical Keyboard</title>
    <link>https://circuitpython.org/board/makerdiary_m60_keyboard/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/makerdiary_m60_keyboard.jpg 300w,
               /assets/images/boards/large/makerdiary_m60_keyboard.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/makerdiary_m60_keyboard.jpg" alt="Image of Board">

<p>By MakerDiary</p> <p>USB Type-C &amp; BLE 5.0 Connectivity
M60 uses Nordic’s nRF52840 SoC to provide USB Type-C wired and Bluetooth LE 5.0 wireless connectivity. It can easily pair to your PC, laptop, smartphone, or tablet with Bluetooth LE.</p>

<p>Powered by Python
It’s not just a keyboard but also a USB drive containing Python files. Its Python code can be changed with any text editor and executed simultaneously, which makes it super easy to customize the keyboard or to add a new function. No need to download any software or setup a development environment.</p>

<p>Modular, Hot-Swappable &amp; Solder-Free
To take advantage of the removable M.2 module and hot-swap sockets, assembly made easy. Everyday we find innovative assembly solutions to make things even easier for you because we care about the quality of our products.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://makerdiary.com/products/m60-mechanical-keyboard-pcba">MakerDiary</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/makerdiary_m60_keyboard.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 26 Jul 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/makerdiary_m60_keyboard/</guid>
  </item><item>
    <title>nRF52840 M.2 Developer Kit</title>
    <link>https://circuitpython.org/board/makerdiary_nrf52840_m2_devkit/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/makerdiary_nrf52840_m2_devkit.jpg 300w,
               /assets/images/boards/large/makerdiary_nrf52840_m2_devkit.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/makerdiary_nrf52840_m2_devkit.jpg" alt="Image of Board">

<p>By MakerDiary</p> <p>nRF52840 M.2 Developer Kit is a versatile IoT prototyping platform, including the nRF52840 M.2 Module and M.2 Dock. You can use the developer kit to prototype your IoT products and then scale to production faster using the nRF52840 M.2 Module combined with your custom PCB hardware.</p>

<p>The nRF52840 M.2 Module is a removable M.2 E-Key form factor module based on the nRF52840 SoC, supporting Bluetooth 5, Bluetooth mesh, Thread, Zigbee, 802.15.4, ANT and 2.4 GHz proprietary stacks.</p>

<p>The M.2 Dock extends the interfaces compared to the nRF52840 M.2 Module through an M.2 E-Key connector. This design also features a fully-integrated DAPLink debugger with Power Profiling, enabling you to program, debug and perform real-time current profiling of your applications without using external tools.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://makerdiary.com/products/nrf52840-m2-developer-kit">MakerDiary</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/makerdiary_nrf52840_m2_devkit.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 26 Jul 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/makerdiary_nrf52840_m2_devkit/</guid>
  </item><item>
    <title>nRF52840 Micro Dev Kit</title>
    <link>https://circuitpython.org/board/makerdiary_nrf52840_mdk/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/nRF52840_micro_dev_kit.jpg 300w,
               /assets/images/boards/large/nRF52840_micro_dev_kit.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/nRF52840_micro_dev_kit.jpg" alt="Image of Board">

<p>By MakerDiary</p> <p>The nRF52840-MDK is a versatile, easy-to-use IoT hardware platform for Bluetooth 5, Bluetooth Mesh, Thread, IEEE 802.15.4, ANT and 2.4GHz proprietary wireless applications using the nRF52840 SoC.</p>

<p>The development kit comes with a fully integrated debugger (also known as DAPLink)that provides USB drag-and-drop programming, USB Virtual COM port and CMSIS-DAP interface.</p>

<p>The kit contains a Microchip USB 2.0 Hi-Speed hub controller with two downstream ports: one for DAPLink interface and one for nRF52840 USB device controller. The kit also features ultra-low power 64-Mb QSPI FLASH memory, programmable user button, RGB LED, up to 24 GPIOs, antenna selection for custom applications.</p>

<p>It supports the standard Nordic Software Development Tool-chain using GCC, Keil and IAR. It can also be used to play with many popular frameworks, such as nRF5 SDK, nRF5 SDK for Mesh, OpenThread, ZigBee 3.0, Mbed OS 5, Zephyr, Mynewt, Web Bluetooth, iBeacon, Eddystone, and more.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.makerdiary.com/collections/frontpage/products/nrf52840-mdk-iot-development-kit">MakerDiary</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/makerdiary_nrf52840_mdk.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/makerdiary_nrf52840_mdk/</guid>
  </item><item>
    <title>nRF52840 Micro Dev Kit USB Dongle</title>
    <link>https://circuitpython.org/board/makerdiary_nrf52840_mdk_usb_dongle/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/nRF52840_micro_dev_kit_usb_dongle.jpg 300w,
               /assets/images/boards/large/nRF52840_micro_dev_kit_usb_dongle.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/nRF52840_micro_dev_kit_usb_dongle.jpg" alt="Image of Board">

<p>By MakerDiary</p> <p>The nRF52840 Micro Dev Kit USB Dongle is a small and low-cost development platform enabled by the nRF52840 multi-protocol SoC in a convenient USB dongle form factor.</p>

<p>The nRF52840 Micro Dev Kit USB Dongle features a programmable user button, RGB LED, up to 12 GPIOs and 2.4G Chip antenna on board.</p>

<p>The USB Dongle can be used as a low-cost Bluetooth5/Tread/802.15.4/ANT/2.4GHz multi-protocol node or development board. Alternatively the USB Dongle can be used as a Network Co-Processor(NCP) with a simple connection to a PC or other USB enabled device.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.makerdiary.com/collections/frontpage/products/nrf52840-mdk-usb-dongle">MakerDiary</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/makerdiary_nrf52840_mdk_usb_dongle.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/makerdiary_nrf52840_mdk_usb_dongle/</guid>
  </item><item>
    <title>Matrix Portal M4</title>
    <link>https://circuitpython.org/board/matrixportal_m4/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/matrixportal_m4.jpg 300w,
               /assets/images/boards/large/matrixportal_m4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/matrixportal_m4.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>Folks love our <a href="https://www.adafruit.com/category/327">wide selection of RGB matrices</a> and accessories, for making custom colorful LED displays… and our RGB Matrix Shields and FeatherWings can be quickly soldered together to make the wiring much easier. But what if we made it even easier than that? <strong>Like, no solder, no wiring, just instant plug-and-play?</strong> Dream no more - with the <strong>Adafruit Matrix Portal add-on for RGB Matrices</strong>, there’s never been an easier way to create powerful Internet-connected LED displays.</p>

<p>Plug directly into the back of <a href="https://www.adafruit.com/category/327">any HUB-75 compatible display (all the ones we stock will work) from 16x32 up to 64x64</a>! Use the included screws to attach the power cable to the power plugs with a common screwdriver, then power it with any USB C power supply. (For larger projects, power the matrices with a separate 5V power adapter)</p>

<p>Then code up your project in <a href="https://learn.adafruit.com/rgb-led-matrices-matrix-panels-with-circuitpython">CircuitPython</a> or <a href="https://learn.adafruit.com/adafruit-protomatter-rgb-matrix-library">Arduino</a>, our Protomatter matrix library works great on the SAMD51 chipset, knowing that you’ve got the wiring and level shifting all handled. Here’s what you get:</p>

<ul>
  <li><strong>ATSAMD51J19 Cortex M4 processor</strong>, 512KB flash, 192K of SRAM, with full Arduino or CircuitPython support</li>
  <li><strong>ESP32 WiFi co-processor</strong> with TLS support and SPI interface to the M4, with full Arduino or CircuitPython support</li>
  <li><strong>USB Type C</strong> connector for data and power connectivity</li>
  <li><a href="https://www.adafruit.com/category/620"><strong>I2C STEMMA QT connector</strong> for plug-n-play use of any of our STEMMA QT devices or sensors</a> can also be used with <a href="https://www.adafruit.com/product/4528">any Grove I2C devices using this adapter cable</a>)</li>
  <li><strong>JST 3-pin connector</strong> that also has analog input/output, say for adding audio playback to projects</li>
  <li><strong>LIS3DH accelerometer</strong> for digital sand projects or detecting taps/orientation.</li>
  <li><strong>GPIO breakouts</strong> including 4 analog outputs with PWM and SPI support for adding other hardware.</li>
  <li><strong>Address E line jumper</strong> for use with 64x64 matrices (check your matrix to see which pin is used for address E!</li>
  <li><strong>Two user interface buttons</strong> + one reset button</li>
  <li><strong>Indicator NeoPixel</strong> and red LED</li>
  <li><strong>Green power indicator LEDs</strong> for both 3V and 5V power</li>
  <li><strong>2x10 socket connector</strong> fits snugly into 2x8 HUB75 ports without worrying about ‘off by one’ errors.</li>
</ul>

<p>The Matrix Portal uses an ATMEL (Microchip) ATSAMD51J19, and an Espressif ESP32 Wi-Fi coprocessor with TLS/SSL support built-in. The M4 and ESP32 are a great couple - and each bring their own strengths to this board. The SAMD51 M4 has native USB so it can show up like a disk drive, act as a MIDI or HID keyboard/mouse, and of course bootload and debug over a serial port. It also has DACs, ADC, PWM, and tons of GPIO, so it can handle the high speed updating of the RGB matrix.</p>

<p>Meanwhile, the ESP32 has secure WiFi capabilities, and plenty of Flash and RAM to buffer sockets. By letting the ESP32 focus on the complex TLS/SSL computation and socket buffering, it frees up the SAMD51 to act as the user interface. You get a great programming experience thanks to the native USB with files available for drag-n-drop, and you don’t have to spend a ton of processor time and memory to do SSL encryption/decryption and certificate management. It’s the best of both worlds!</p>

<p>Comes with one fully-programmed and assembled MatrixPortal, preprogrammed with a rainbow digital sand demo for 32x64 LED matrices.</p>

<h2 id="purchase">Purchase:</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4745">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/matrixportal_m4.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 16 Sep 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/matrixportal_m4/</guid>
  </item><item>
    <title>Meowbit</title>
    <link>https://circuitpython.org/board/meowbit_v121/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/meowbit_v121.jpg 300w,
               /assets/images/boards/large/meowbit_v121.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/meowbit_v121.jpg" alt="Image of Board">

<p>By KittenBot</p> <p>From the creative and cat-lovin’ engineers at KittenBot comes the <strong>Meowbit</strong> - a handheld retro gaming computer for coding your own games with MakeCode Arcade and MicroPython. This design is really fun, with a GameBoy-like shape that can plug into micro:bit expansion boards. The built in display is a 160x128 color 1.8” TFT screen with the familiar ST7735 chipset over SPI. You also get 8 buttons (4-way D-Pad, A and B, menu and reset) to make games or interface with, and there’s also a built-in speaker and SD card. For inputs there’s a bunch of sensors including a light sensor, temperature sensor and even a 6-DoF gyro+accelerometer.</p>

<h2 id="purchase">Purchase</h2>
<p>Add any links to purchase the board</p>
<ul>
  <li><a href="https://www.adafruit.com/product/4324">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/meowbit_v121.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 26 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/meowbit_v121/</guid>
  </item><item>
    <title>Meow Meow</title>
    <link>https://circuitpython.org/board/meowmeow/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/meowmeow.jpg 300w,
               /assets/images/boards/large/meowmeow.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/meowmeow.jpg" alt="Image of Board">

<p>By Electronic Cats</p> <p>Meow Meow is a electronic board that allows you to connect different objects to a computer and interact with it, since you can convert many everyday objects into touch panels that send signals to the computer, and allows you to use it as a conventional keyboard, you can even connect them to the internet.</p>

<p>Meow Meow was designed by Electronic Cats and wants to encourage experimentation, both for beginners and experts, who want to interact with the real world (physical) and with digital world. For this reason, it can be applied in visual and arts, music… engineering, etc. Even, for purposes of physical rehabilitation and related to the interaction between human and technology.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://electroniccats.com/producto/meowmeow/">Electronic Cats</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/meowmeow.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 01 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/meowmeow/</guid>
  </item><item>
    <title>Metro M0 Express</title>
    <link>https://circuitpython.org/board/metro_m0_express/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/metro_m0_express.jpg 300w,
               /assets/images/boards/large/metro_m0_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/metro_m0_express.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>This <strong>Metro M0 Express</strong> board looks a whole lot like the <a href="https://www.adafruit.com/product/2488">original Metro 328</a>, but with a huge upgrade. Instead of the ATmega328, this Metro features a ATSAMD21G18 chip, an ARM Cortex M0+. It’s the first Adafruit Metro that is designed for use with CircuitPython!</p>

<p>At the Metro M0’s heart is an ATSAMD21G18 ARM Cortex M0 processor, clocked at 48 MHz and at 3.3V logic, the same one used in the new <a href="https://www.adafruit.com/products/2843">Arduino Zero</a>. This chip has a whopping 256K of FLASH (8x more than the Atmega328) and 32K of RAM (16x as much)! This chip comes with built in USB so it has USB-to-Serial program &amp; debug capability built in with no need for an FTDI-like chip.</p>

<ul>
  <li><strong>Power the METRO</strong> with 7-9V polarity protected DC or the micro USB connector to any 5V USB source. The 2.1mm DC jack has an on/off switch next to it so you can turn off your setup easily. The METRO will automagically switch between USB and DC.</li>
  <li><strong>METRO has 25 GPIO pins</strong>, 12 of which are analog in, and one of which is a true analog out. There’s a hardware SPI port, hardware I2C port and hardware UART. Logic level is 3.3V</li>
  <li><strong>Native USB</strong>, there’s no need for a hardware USB to Serial converter as the Metro M0 has built in USB support. When used to act like a serial device, the USB interface can be used by any computer to listen/send data to the METRO, and can also be used to launch and update code via the bootloader. It can also act like a keyboard, mouse or MIDI device as well.</li>
  <li><strong>Four indicator LEDs and one NeoPixel</strong>, on the front edge of the PCB, for easy debugging. One green power LED, two RX/TX LEDs for data being sent over USB, and a red LED connected. Next to the reset button there is an RGB NeoPixel that can be used for any purpose.</li>
  <li><strong>2 MB SPI Flash </strong>storage chip is included on board. You can use the SPI Flash storage like a very tiny hard drive. When used in Circuit Python, the 2 MB flash acts as storage for all your scripts, libraries and files.</li>
  <li><strong>Easy reprogramming</strong>, comes pre-loaded with the <a href="https://learn.adafruit.com/adafruit-metro-m0-express-designed-for-circuitpython/uf2-bootloader">UF2 bootloader</a>, which looks like a USB storage key. Simply drag firmware on to program, no special tools or drivers needed! It can be used to load up CircuitPython, PXT/MakeCode or Arduino IDE (it is bossa-compatible)</li>
</ul>

<p>Comes fully assembled with headers, tested, and with the UF2 bootloader loaded on. Includes 4 rubber bumpers to keep it from slipping off your desk. No soldering required to use, plug and play!</p>

<h2 id="tutorial">Tutorial</h2>
<ul>
  <li><a href="https://learn.adafruit.com/adafruit-metro-m0-express-designed-for-circuitpython/overview">Metro M0 Express Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/3505">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/metro_m0_express.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/metro_m0_express/</guid>
  </item><item>
    <title>Metro M4 AirLift Lite</title>
    <link>https://circuitpython.org/board/metro_m4_airlift_lite/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/metro_m4_airlift_lite.jpg 300w,
               /assets/images/boards/large/metro_m4_airlift_lite.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/metro_m4_airlift_lite.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>Give your next project a lift with <em>AirLift</em> - Adafruit’s witty name for the ESP32 co-processor that graces this Metro M4.</p>

<p>You already know about the <strong>Adafruit Metro M4</strong> featuring the <strong>Microchip ATSAMD51</strong>, with it’s 120MHz Cortex M4 with floating point support. With a train-load of FLASH and RAM, your code will be fast and roomy. And what better way to improve it than to add wireless? Now cooked in directly on board, you get a certified WiFi module that can handle all your TLS and socket needs, it even has root certificates pre-loaded.</p>

<p>This Metro is the same size as the others, and is compatible with all our shields. It’s got analog pins where you expect, and SPI/UART/I2C hardware support in the same spot as the Metro 328 and M0. But! It’s powered with an ATSAMD51J19:</p>

<ul>
  <li>Cortex M4 core running at <strong>120 MHz</strong></li>
  <li><a href="https://developer.arm.com/technologies/dsp/dsp-for-cortex-m">Floating point support with Cortex M4 DSP instructions</a></li>
  <li><strong>512 KB</strong> flash, <strong>192 KB</strong> RAM</li>
  <li>32-bit, 3.3V logic and power</li>
  <li>Dual 1 MSPS DAC (A0 and A1)</li>
  <li>Dual 1 MSPS ADC (8 analog pins)</li>
  <li>6 x hardware SERCOM (I2C, SPI or UART)</li>
  <li>22 x PWM outputs</li>
  <li>Stereo I2S input/output with MCK pin</li>
  <li>10-bit Parallel capture controller (for camera/video in)</li>
  <li>Built in crypto engines with AES (256 bit), true RNG, Pubkey controller</li>
  <li>64 QFN</li>
</ul>

<p>Pretty good start, right? Adafruit put this chip on a PCB with all these nice extras:</p>

<ul>
  <li><strong>Power the METRO M4</strong> with 7-9V polarity protected DC or the micro USB connector to any 5V USB source. The 2.1mm DC jack has an on/off switch next to it so you can turn off your setup easily. The METRO will automagically switch between USB and DC.</li>
  <li><strong>METRO has 25 GPIO pins</strong>, 8 of which are analog in, and two of which is a true analog out. There’s a hardware SPI port, hardware I2C port and hardware UART. Logic level is 3.3V</li>
  <li><strong>Native USB</strong>, there’s no need for a hardware USB to Serial converter as the Metro M4 has built in USB support. When used to act like a serial device, the USB interface can be used by any computer to listen/send data to the METRO, and can also be used to launch and update code via the bootloader. It can also act like an HID keyboard or mouse.</li>
  <li><strong>AirLift WiFi Co-processor</strong>, with TLS/SSL support, plenty of RAM for sockets, communication is over SPI and has Arduino and CircuitPython libraries ready to go for fast wireless integration.</li>
  <li><strong>Four indicator LEDs and one NeoPixel</strong>, on the back edge of the PCB, for easy debugging. One green power LED, two RX/TX LEDs for data being sent over USB, and a red LED connected. Next to the reset button there is an RGB NeoPixel that can be used for any purpose.</li>
  <li><strong>2 MB QSPI Flash </strong>storage chip is included on board. You can use the SPI Flash storage like a very tiny hard drive. When used in Circuit Python, the 2 MB flash acts as storage for all your scripts, libraries and files. When used in Arduino, you can read/write files to it, like a little datalogger or SD card, and then with our helper program, access the files over USB.</li>
  <li><strong>Easy reprogramming</strong>, comes pre-loaded with the <a href="https://learn.adafruit.com/adafruit-metro-m0-express-designed-for-circuitpython/uf2-bootloader">UF2 bootloader</a>, which looks like a USB storage key. Simply drag firmware on to program, no special tools or drivers needed! It can be used to load up CircuitPython (it is bossa v1.8 compatible).</li>
</ul>

<p>The primary target for this board is CircuitPython - with 120 MHz, and 192KB of RAM CircuitPython runs really well on this chip! CircuitPython’s built in support for JSON parsing plus our <em>requests</em> compatible library makes it incredibly easy to build secure IoT projects in just a few minutes.</p>

<p>Metro M4 AirLift, see how easy and fast it is to get started with IoT projects using CircuitPython!</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-metro-m4-express-airlift-wifi">Metro M4 AirLift Lite Overview</a></li>
</ul>

<h2 id="purchase">Purchase:</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4000">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/metro_m4_airlift_lite.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 13 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/metro_m4_airlift_lite/</guid>
  </item><item>
    <title>Metro M4 Express</title>
    <link>https://circuitpython.org/board/metro_m4_express/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/metro_m4_express.jpg 300w,
               /assets/images/boards/large/metro_m4_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/metro_m4_express.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The most powerful Metro at this time, the <strong>Adafruit Metro M4</strong> featuring the <strong>Microchip ATSAMD51</strong>. This Metro is like a bullet train, with it’s 120MHz Cortex M4 with floating point support. Your code will zig and zag and zoom, and with a bunch of extra peripherals for support, this will for sure be your favorite new chipset.</p>

<p>To start off the ATSAMD51 journey it has a classic ‘Arduino compatible’ shape and pinout. This Metro is the same size as the others, and is compatible with many shields. It’s got analog pins where you expect, and SPI/UART/I2C hardware support in the same spot as the Metro 328 and M0. But! It’s powered with an ATSAMD51J19:</p>

<ul>
  <li>Cortex M4 core running at <strong>120 MHz</strong></li>
  <li><a href="https://developer.arm.com/technologies/dsp/dsp-for-cortex-m">Floating point support with Cortex M4 DSP instructions</a></li>
  <li><strong>512 KB</strong> flash, <strong>192 KB</strong> RAM</li>
  <li>32-bit, 3.3V logic and power</li>
  <li>Dual 1 MSPS DAC (A0 and A1)</li>
  <li>Dual 1 MSPS ADC (8 analog pins)</li>
  <li>6 x hardware SERCOM (I2C, SPI or UART)</li>
  <li>22 x PWM outputs</li>
  <li>Stereo I2S input/output with MCK pin</li>
  <li>64 QFN</li>
</ul>

<p>Includes:</p>

<ul>
  <li><strong>Power the METRO M4</strong> with 7-9V polarity protected DC or the micro USB connector to any 5V USB source. The 2.1mm DC jack has an on/off switch next to it so you can turn off your setup easily. The METRO will automagically switch between USB and DC.</li>
  <li><strong>METRO has 25 GPIO pins</strong>, 8 of which are analog in, and two of which is a true analog out. There’s a hardware SPI port, hardware I2C port and hardware UART. Logic level is 3.3V</li>
  <li><strong>Native USB</strong>, there’s no need for a hardware USB to Serial converter as the Metro M4 has built in USB support. When used to act like a serial device, the USB interface can be used by any computer to listen/send data to the METRO, and can also be used to launch and update code via the bootloader. It can also act like an HID keyboard or mouse.</li>
  <li><strong>Four indicator LEDs and one NeoPixel</strong>, on the front edge of the PCB, for easy debugging. One green power LED, two RX/TX LEDs for data being sent over USB, and a red LED connected. Next to the reset button there is an RGB NeoPixel that can be used for any purpose.</li>
  <li><strong>2 MB QSPI Flash </strong>storage chip is included on board. You can use the SPI Flash storage like a very tiny hard drive. When used in Circuit Python, the 2 MB flash acts as storage for all your scripts, libraries and files.</li>
  <li><strong>Easy reprogramming</strong>, comes pre-loaded with the <a href="https://learn.adafruit.com/adafruit-metro-m0-express-designed-for-circuitpython/uf2-bootloader">UF2 bootloader</a>, which looks like a USB storage key. Simply drag firmware on to program, no special tools or drivers needed! It can be used to load up CircuitPython (it is bossa v1.8 compatible)</li>
</ul>

<p>The primary target for this board is CircuitPython - with 120 MHz, and 192KB of RAM CircuitPython runs really well on this chip. At this time, the latest versions of CircuitPython working on this board, and more API parts are added every week.</p>
<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-metro-m4-express-featuring-atsamd51">Metro M4 Express Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/3382/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3382">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/metro_m4_express.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/metro_m4_express/</guid>
  </item><item>
    <title>Metro M7 1011</title>
    <link>https://circuitpython.org/board/metro_m7_1011/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/metro_m7_1011.jpg 300w,
               /assets/images/boards/large/metro_m7_1011.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/metro_m7_1011.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>Watch Adafruit’s Ask an Engineer on YouTube to learn more.</p>

<h2 id="learn-more">Learn More:</h2>

<ul>
  <li><a href="https://www.youtube.com/watch?v=_sLgycNpMCQ">YouTube</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/metro_m7_1011.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 15 Oct 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/metro_m7_1011/</guid>
  </item><item>
    <title>Metro nRF52840 Express</title>
    <link>https://circuitpython.org/board/metro_nrf52840_express/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/metro_nrf52840_express.png 300w,
               /assets/images/boards/large/metro_nrf52840_express.png 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/metro_nrf52840_express.png" alt="Image of Board">

<p>By Adafruit</p> <p>The <strong>Adafruit Metro nRF52840 Express</strong> is a new Metro family member with Bluetooth Low Energy and <em>native USB support</em> featuring the nRF52840! </p>

<p>This chip has twice the flash, and four times the SRAM of its earlier sibling, the nRF52832 - 1 MB of FLASH and 256KB of SRAM. Compared to the nRF51, this board has 4-8 times more of everything.</p>

<p>More later!</p>

<p><strong>Features:</strong></p>

<ul>
  <li>ARM Cortex M4F (with HW floating point acceleration) running at 64MHz</li>
  <li>1MB flash and 256KB SRAM</li>
  <li><strong>Native Open Source USB stack</strong> - pre-programmed with UF2 bootloader</li>
  <li>Bluetooth Low Energy compatible 2.4GHz radio (Details available in the <a href="https://www.nordicsemi.com/Products/Low-power-short-range-wireless/nRF52840">nRF52840</a> product specification)</li>
  <li><strong>FCC / IC / TELEC certified module</strong></li>
  <li>more later!</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/metro_nrf52840_express.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 30 Aug 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/metro_nrf52840_express/</guid>
  </item><item>
    <title>microS2</title>
    <link>https://circuitpython.org/board/microdev_micro_s2/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/microdev_micro_s2.jpg 300w,
               /assets/images/boards/large/microdev_micro_s2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/microdev_micro_s2.jpg" alt="Image of Board">

<p>By microDev</p> <p>Introducing the <strong>microS2</strong> - <em>An ESP32-S2 based development board in the size of an esp32 module!</em></p>

<p>With Wi-Fi, native USB and a load of Flash &amp; PSRAM the microS2 is perfect for use with CircuitPython while keeping the form-factor small.</p>

<h3 id="features--specifications">Features &amp; Specifications</h3>
<ul>
  <li><strong>ESP32-S2</strong> 32-bit 240MHz Tensilica processor - <em>the next generation of ESP32</em></li>
  <li><strong>16MB Flash</strong> &amp; <strong>8MB PSRAM</strong> - <em>you can have huge data buffers</em></li>
  <li><strong>2.4 GHz Wi-Fi</strong> 802.11b/g/n - <em>get communicating with the world</em></li>
  <li><strong>All pins exposed</strong> &amp; <strong>breadboard compatible</strong> - <em>too good to be true</em></li>
  <li><strong>Neopixel</strong> (IO33) <strong>Blue led</strong> (IO21) - <em>who doesn’t love some lights</em></li>
  <li><strong>Reset</strong> &amp; <strong>Boot</strong> buttons - <em>can also be used as user button</em></li>
  <li><strong>USB micro-B</strong> &amp; <strong>QWIIC/STEMMA</strong> connector - <em>easily connect with peripherals</em></li>
  <li><strong>31 x 18 mm</strong> - <em>all of the above in a small form factor</em></li>
</ul>

<h3 id="learn-more">Learn More</h3>
<ul>
  <li><a href="https://github.com/microDev1/microS2/wiki">GitHub</a></li>
</ul>

<h3 id="contribute">Contribute</h3>
<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/microdev_micro_s2.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 25 Aug 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/microdev_micro_s2/</guid>
  </item><item>
    <title>Mini SAM M4</title>
    <link>https://circuitpython.org/board/mini_sam_m4/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/mini_sam_m4.jpg 300w,
               /assets/images/boards/large/mini_sam_m4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/mini_sam_m4.jpg" alt="Image of Board">

<p>By Benjamin Shockley</p> <p>Mini SAM is a LEGO® minifigure-sized development board based on the Microchip SAMD51G 48-Pin 32-Bit ARM® Cortex®-M4F MCU  running at 48Mhz.</p>

<h1 id="board-features">Board Features</h1>
<h2 id="io">I/O</h2>
<p>The boards includes a micro USB interface for programming and power. Around the edges are 0.050″ spaced breakouts for the six analog pins, including true analog out, and several digital pins available on the SAMD51G including some dedicated I2C, SPI, and UART connections.</p>

<p>The Mini SAM boards include two LED indicators; a standard “Built-In” LED and an APA102 RGB LED.  The standard LED is red and located on the reverse side of the board.  When illuminated it lights up the spaceship on on the logo. There are two built-in buttons as well; a RESET button and a user programmable BUTTON.</p>

<h2 id="memory">Memory</h2>
<p>In order to support CircuitPython, a 2MB Quad-SPI flash memory chip is included. This provides plenty of space for the CircuitPython program as well as space for user programming.  It comes pre-loaded with the latest CircuitPython library bundle.</p>

<h2 id="power">Power</h2>
<p>The boards include a 600mA 3.3V regulator, more than enough to power this little board and its built-in features. The board can be powered from a micro-USB or via a battery connected to the BAT pin – it will automatically switch between the two.  There are exposed pads to solder on an optional 2-JST battery connector on the back or directly to the BAT pin.</p>

<h2 id="purchase">Purchase</h2>
<p>When in stock, you can purchase a board from minifigboards.com</p>
<ul>
  <li><a href="https://www.minifigboards.com/product/mini-sam-m4/">Minifigboards.com</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/mini_sam_m4.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 12 Mar 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/mini_sam_m4/</guid>
  </item><item>
    <title>MONSTER M4SK</title>
    <link>https://circuitpython.org/board/monster_m4sk/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/monster_m4sk.jpg 300w,
               /assets/images/boards/large/monster_m4sk.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/monster_m4sk.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>Peep dis! Have you always wanted to have another pair of eyes on the back of your
head? Or outfit your costume with big beautiful orbs? The MONSTER M4SK is like the
Hallowing but twice as good, with two gorgeous 240x240 pixel IPS TFT displays, driven
by a 120MHZ Cortex M4 processor that can pump out those pixels super fast. You’ll get
the same quality display as our Raspberry Pi Eyes kit but without needing to tote
around a full Linux computer</p>

<p>This unique design has the eyes at the same pupil-distance as a human (~63mm) but is
designed so that the nose section can be broken apart with pliers/cutters and then
wired together with a 9-pin JST SH cable up to 100mm long so the eyes can be
re-positioned or freely attached.</p>

<p>We wanted to make audio-effects easier so in addition to a class D audio amp, there’s
also a stereo headphone jack that is connected to the two DACs on the chip. Use it
when you want an externally sound amplifier box for big effects. For small portable
effects, the built-in amp can drive 8 ohm speakers up to 1 Watt.</p>

<p>On each side are JST-PH plugs for connecting external devices. The 3-pin JSTs connect
to analog/timer pins on the SAMD51, so you can use them for sensors or GPIO
devices. The 4-pin JST connector connects to the I2C port and you can fit Grove
connectors in it for additional hardware support. For the PDM mic port, you can use
this cable to wire to a PDM mic.</p>

<p>There’s also plenty of sensors built in - light sensor, 3 tactile buttons, and a
capacitive touch pad on the nose.</p>

<p>Speaking of that nose, the silkscreen is by the skillful Miss Monster, check out those fangs!</p>

<p>This is by far the cutest, creepiest and most incredible development board we’ve made so far!
Gaze upon these features:</p>

<ul>
  <li>ATSAMD51G19 Cortex M4 microcontroller running at 120MHz with 512KB Flash, 192KB RAM</li>
  <li>8 MB QSPI flash for storing graphics and sound effects</li>
  <li>Two 240x240 IPS TFT displays each on their own SPI bus</li>
  <li>Beautiful silkscreen with a boop-able nose that is a capacitive touch pad</li>
  <li>Lipoly battery charge circuit for portable use</li>
  <li>Stereo headphone jack out, for sound effects via an amplifier</li>
  <li>Mono speaker driver for smaller 8 ohm 1W speakers</li>
  <li>One 4 pin STEMMA JST connector for I2C connection (also Grove compatible)</li>
  <li>Two 3 pin STEMMA JST connectors with digital/analog/PWM for servos, sensors, etc</li>
  <li>One 4 pin JST SH port for connecting an optional PDM microphone</li>
  <li>Backlight controls</li>
  <li>Three tactile buttons</li>
  <li>Light sensor</li>
  <li>On/Off Switch and reset button</li>
</ul>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-monster-m4sk-eyes">MONSTER M4SK Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/4343/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4343">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/monster_m4sk.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 30 Aug 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/monster_m4sk/</guid>
  </item><item>
    <title>NanoESP32 S2</title>
    <link>https://circuitpython.org/board/muselab_nanoesp32_s2/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/muselab_nanoesp32_s2.jpg 300w,
               /assets/images/boards/large/muselab_nanoesp32_s2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/muselab_nanoesp32_s2.jpg" alt="Image of Board">

<p>By Muselab</p> <p>This is the nanoESP32-S2 board with a WROOM ESP32-S2 module.</p>

<p><strong>NOTE:</strong> This board has 2 USB-C connector, one for Serial (ch340) and one for Native USB (esp32).</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/wuxx/nanoESP32-S2">User Guide</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/muselab_nanoesp32_s2.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 15 Sep 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/muselab_nanoesp32_s2/</guid>
  </item><item>
    <title>Ndbit6</title>
    <link>https://circuitpython.org/board/ndgarage_ndbit6/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/ndgarage_ndbit6.jpg 300w,
               /assets/images/boards/large/ndgarage_ndbit6.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/ndgarage_ndbit6.jpg" alt="Image of Board">

<p>By n°Garage</p> <h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/ndgarage_ndbit6.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 05 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/ndgarage_ndbit6/</guid>
  </item><item>
    <title>NFC Copy Cat</title>
    <link>https://circuitpython.org/board/nfc_copy_cat/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/nfc_copy_cat.jpg 300w,
               /assets/images/boards/large/nfc_copy_cat.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/nfc_copy_cat.jpg" alt="Image of Board">

<p>By Electronic Cats</p> <p>NFC Copy Cat, manufactured by Electronic Cats, is a small device that combines two powerful cybersecurity tools, NFCopy and MagSpoof. NFCopy works by reading or emulating a NFC card; depending on the necessities of the researcher. On the other hand, MagSpoof can wirelessly emulate/spoof any magnetic stripe card. So using NFC Copy Cat, the user will have a device capable of storing magnetic stripe data or NFC payment data to be replayed later — known in the cybersecurity world as a replay attack.</p>

<h2 id="learn-more">Learn more</h2>
<ul>
  <li><a href="https://github.com/ElectronicCats/NFC-Copy-Cat">NFC Copy Cat - GitHub</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/nfc_copy_cat.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 09 Apr 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/nfc_copy_cat/</guid>
  </item><item>
    <title>Nice!Nano</title>
    <link>https://circuitpython.org/board/nice_nano/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/nice_nano.jpg 300w,
               /assets/images/boards/large/nice_nano.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/nice_nano.jpg" alt="Image of Board">

<p>By Nice Keyboards</p> <h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://docs.nicekeyboards.com/#/nice!nano/">Nice Keyboards</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/nice_nano.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 04 Jun 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/nice_nano/</guid>
  </item><item>
    <title>STM32F746 Nucleo</title>
    <link>https://circuitpython.org/board/nucleo_f746zg/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/nucleo_f746zg.jpg 300w,
               /assets/images/boards/large/nucleo_f746zg.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/nucleo_f746zg.jpg" alt="Image of Board">

<p>By ST</p> <p>The STM32F746 Nucleo dev board from ST.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.st.com/content/st_com/en/products/evaluation-tools/product-evaluation-tools/mcu-mpu-eval-tools/stm32-mcu-mpu-eval-tools/stm32-nucleo-boards/nucleo-f746zg.html">ST</a></li>
  <li><a href="https://www.digikey.com/product-detail/en/stmicro/NUCLEO-F746ZG/497-16282-ND/5806779">Digi-Key</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/nucleo_f746zg.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 22 Apr 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/nucleo_f746zg/</guid>
  </item><item>
    <title>STM32F767 Nucleo</title>
    <link>https://circuitpython.org/board/nucleo_f767zi/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/nucleo_f767zi.jpg 300w,
               /assets/images/boards/large/nucleo_f767zi.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/nucleo_f767zi.jpg" alt="Image of Board">

<p>By ST</p> <p>The STM32F767 Nucleo dev board from ST.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.st.com/content/st_com/en/products/evaluation-tools/product-evaluation-tools/mcu-mpu-eval-tools/stm32-mcu-mpu-eval-tools/stm32-nucleo-boards/nucleo-f767zi.html">ST</a></li>
  <li><a href="https://www.digikey.com/product-detail/en/stmicro/NUCLEO-F767ZI/497-16525-ND/6004740">Digi-Key</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/nucleo_f767zi.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 05 Apr 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/nucleo_f767zi/</guid>
  </item><item>
    <title>STM32H743 Nucleo</title>
    <link>https://circuitpython.org/board/nucleo_h743zi_2/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/nucleo_h743zi_2.jpg 300w,
               /assets/images/boards/large/nucleo_h743zi_2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/nucleo_h743zi_2.jpg" alt="Image of Board">

<p>By ST</p> <p>The STM32H743 Nucleo dev board from ST.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.st.com/content/st_com/en/products/evaluation-tools/product-evaluation-tools/mcu-mpu-eval-tools/stm32-mcu-mpu-eval-tools/stm32-nucleo-boards/nucleo-h743zi.html">ST</a></li>
  <li><a href="https://www.digikey.com/product-detail/en/stmicroelectronics/NUCLEO-H743ZI/497-17786-ND/7809236">Digi-Key</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/nucleo_h743zi_2.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 31 Mar 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/nucleo_h743zi_2/</guid>
  </item><item>
    <title>Open Hardware Summit 2020 Badge</title>
    <link>https://circuitpython.org/board/ohs2020_badge/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/ohs2020_badge.jpg 300w,
               /assets/images/boards/large/ohs2020_badge.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/ohs2020_badge.jpg" alt="Image of Board">

<p>By OSHWA</p> <p>This is the badge for the Open Hardware Summit in NYC on on March 13th.
<a href="https://2020.oshwa.org/">Conference Link</a></p>

<p>It is going to be in a wrist watch form factor with several awesome features.</p>

<ul>
  <li>Rigado BMD340 (Nordic nRF52840)</li>
  <li>1.54” LCD</li>
  <li>4 user buttons</li>
  <li>BME680 Temperature, Pressure, and Humidity sensor</li>
  <li>APDS-9960 Gesture Sensor</li>
  <li>LSM9DS1 9DoF IMU</li>
  <li>SPH0645LM4H-B Microphone (Optional)</li>
  <li>Sparkfun QWIIC connector</li>
  <li>LiPo Charger</li>
</ul>

<h2 id="purchase">Purchase</h2>
<p>Not available for direct purchase.
The badge will be given to all attendees of the Open Hardware Summit!</p>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/ohs2020_badge.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 16 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/ohs2020_badge/</guid>
  </item><item>
    <title>The Open Book </title>
    <link>https://circuitpython.org/board/openbook_m4/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/openbook_m4.jpg 300w,
               /assets/images/boards/large/openbook_m4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/openbook_m4.jpg" alt="Image of Board">

<p>By Oddly Specific Objects</p> <p>The Open Book is an open-hardware device for reading books in all the languages of the world. It includes a large screen and buttons for navigation, as well as audio options for accessibility and ports to extend its functionality. Its detailed silkscreen, with the all the manic energy and quixotic ambition of a Dr. Bronner’s bottle, aims to demystify the Open Book’s own design, breaking down for the curious reader both how the book works, and how they can build one for themselves.</p>

<p>For more detailed technical specifications, check out <a href="https://hackaday.io/project/168761-the-open-book-feather">the Hackaday.io project page</a>.</p>

<h2 id="purchase">Purchase</h2>

<p>The Open Book is not yet available for purchase, but you can <a href="https://oshpark.com/shared_projects/9h6jn9B1">order the board</a> from OSH Park, and the BOM is available at <a href="https://github.com/joeycastillo/The-Open-Book">the project’s GitHub page</a>. Instructions for assembly are printed on the front of the PCB.</p>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/openbook_m4.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 16 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/openbook_m4/</guid>
  </item><item>
    <title>OpenMV H7</title>
    <link>https://circuitpython.org/board/openmv_h7/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/openmv_h7.jpg 300w,
               /assets/images/boards/large/openmv_h7.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/openmv_h7.jpg" alt="Image of Board">

<p>By OpenMV</p> <p>STM32H7 powered OpenMV camera board.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4478">Adafruit</a></li>
  <li><a href="https://openmv.io/collections/products/products/openmv-cam-h7">OpenMV</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/openmv_h7.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 29 Apr 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/openmv_h7/</guid>
  </item><item>
    <title>Argon</title>
    <link>https://circuitpython.org/board/particle_argon/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/particle_argon.jpg 300w,
               /assets/images/boards/large/particle_argon.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/particle_argon.jpg" alt="Image of Board">

<p>By Particle</p> <p>This board hasn’t been fully documented yet. Please make a pull request adding more info to this file.</p>

<p>The description should be written to inform a CircuitPython user what makes the board unique and link to relevant info about it.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.particle.io/products/argon-kit">Argon Kit - Particle</a></li>
  <li><a href="https://www.adafruit.com/product/3997">Board Only - Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/3993">Argon Kit - Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/particle_argon.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/particle_argon/</guid>
  </item><item>
    <title>Boron</title>
    <link>https://circuitpython.org/board/particle_boron/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/particle_boron.jpg 300w,
               /assets/images/boards/large/particle_boron.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/particle_boron.jpg" alt="Image of Board">

<p>By Particle</p> <p>This board hasn’t been fully documented yet. Please make a pull request adding more info to this file.</p>

<p>The description should be written to inform a CircuitPython user what makes the board unique and link to relevant info about it.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.particle.io/products/boron-kit">Boron Kit - Particle</a></li>
  <li><a href="https://www.adafruit.com/product/3998">Board Only - Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/3994">Boron Kit - Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/particle_boron.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/particle_boron/</guid>
  </item><item>
    <title>Xenon</title>
    <link>https://circuitpython.org/board/particle_xenon/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/particle_xenon.jpg 300w,
               /assets/images/boards/large/particle_xenon.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/particle_xenon.jpg" alt="Image of Board">

<p>By Particle</p> <p>This board hasn’t been fully documented yet. Please make a pull request adding more info to this file.</p>

<p>The description should be written to inform a CircuitPython user what makes the board unique and link to relevant info about it.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.particle.io/products/xenon-kit">Xenon Kit - Particle</a></li>
  <li><a href="https://www.adafruit.com/product/3999">Board Only - Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/3995">Xenon Kit - Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/particle_xenon.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/particle_xenon/</guid>
  </item><item>
    <title>nRF52840 DK (PCA10056)</title>
    <link>https://circuitpython.org/board/pca10056/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/nRF52840_dk.jpg 300w,
               /assets/images/boards/large/nRF52840_dk.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/nRF52840_dk.jpg" alt="Image of Board">

<p>By Nordic Semiconductor</p> <p>The Nordic nRF52840 kit is hardware compatible with the Arduino Uno Revision 3 standard for shields, making it possible to use 3rd-party shields that are compatible to this standard. An NFC antenna can be connected the kit to enable NFC tag functionality. The kit gives access to all I/O and interfaces via connectors and has 4 LEDs and 4 buttons which are user-programmable. It supports the standard Nordic Software Development Tool-chain using Segger Embedded Studio, Keil, IAR and GCC. Program/Debug options on the kit is Segger J-Link OB.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.nordicsemi.com/About-us/BuyOnline?search_token=nrf52840-DK">Price Comparison</a></li>
  <li><a href="https://www.arrow.com/en/products/nrf52840-dk/nordic-semiconductor?utm_source=oemsecrets&amp;utm_medium=aggregator&amp;utm_campaign=oemsecrets_2019_arrow&amp;utm_content=inv_listing&amp;utm_keyword=NRF52840-DK">Arrow Electronics</a></li>
  <li><a href="https://www.semiconductorstore.com/cart/pc/viewPrd.asp?idproduct=94949&amp;utm_source=OemSecrets&amp;utm_medium=compref&amp;utm_campaign=OemSecrets&amp;utm_term=NRF52840-DK">Symmetry Electronics</a></li>
  <li><a href="https://www.mouser.co.uk/ProductDetail/Nordic-Semiconductor/nRF52840-DK?qs=F5EMLAvA7IA76ZLjlwrwMw==&amp;utm_source=OEMSECRETS&amp;utm_medium=aggregator&amp;utm_campaign=nRF52840-DK&amp;utm_term=nrf52840-DK&amp;utm_content=Nordic%20Semiconductor">Mouser</a></li>
  <li><a href="https://www.digikey.com/product-detail/en/nordic-semiconductor-asa/NRF52840-DK/1490-1072-ND/8593726?utm_source=oemsecrets&amp;utm_medium=aggregator&amp;utm_campaign=buynow">Digi-Key</a></li>
  <li><a href="https://www.avnet.com/shop/us/products/nordic-semiconductor/nrf52840-dk-3074457345635668705?CMP=EMA_OEMSecrets_inventoryfeed_VSE">Avnet America</a></li>
  <li><a href="https://sg.element14.com/nordic-semiconductor/nrf52840-dk/dev-kit-bluetooth-low-energy-soc/dp/2842321?CMP=GRHB-OEMSECRETS">element14</a></li>
  <li><a href="https://www.avnet.com/shop/emea/products/nordic-semiconductor/nrf52840-dk-3074457345635159181?c=EUR&amp;r=EMEA&amp;CMP=EMEA_OEMSecrets_inventoryfeed_VSE">Avnet Europe/Middle East/Africa</a></li>
  <li><a href="https://www.tme.eu/en/details/nrf52840-dk/development-kits-others/nordic-semiconductor/?utm_source=oemsecrets.com&amp;utm_medium=cpc&amp;utm_campaign=compare-2020-01">TME</a></li>
  <li><a href="https://www.avnet.com/shop/apac/products/nordic-semiconductor/nrf52840-dk-3074457345635203852?r=ASIA&amp;CMP=ASIA_OEMSecrets_inventoryfeed_VSE">Avnet Asia Pacific</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/pca10056.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pca10056/</guid>
  </item><item>
    <title>nRF52840 Dongle (PCA10059)</title>
    <link>https://circuitpython.org/board/pca10059/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/nRF52840_dongle.jpg 300w,
               /assets/images/boards/large/nRF52840_dongle.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/nRF52840_dongle.jpg" alt="Image of Board">

<p>By Nordic</p> <p>The nRF52840 dongle from Nordic Semiconductor is a small, low-cost USB dongle for Bluetooth Low Energy, Bluetooth mesh, Thread, ZigBee, 802.15.4, ANT, and 2.4 GHz proprietary applications using the nRF52840 SoC. The dongle has been designed to be used as a wireless HW device together with nRF Connect for Desktop.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.nordicsemi.com/About-us/BuyOnline?search_token=nRF52840DONGLE">Price Comparison</a></li>
  <li><a href="https://www.semiconductorstore.com/cart/pc/viewPrd.asp?idproduct=94964&amp;utm_source=OemSecrets&amp;utm_medium=compref&amp;utm_campaign=OemSecrets&amp;utm_term=NRF52840-DONGLE">Symmetry Electronics</a></li>
  <li><a href="https://www.digikey.com/product-detail/en/nordic-semiconductor-asa/NRF52840-DONGLE/1490-1073-ND/9491124?utm_source=oemsecrets&amp;utm_medium=aggregator&amp;utm_campaign=buynow">Digi-Key</a></li>
  <li><a href="https://www.arrow.com/en/products/nrf52840-dongle/nordic-semiconductor?utm_source=oemsecrets&amp;utm_medium=aggregator&amp;utm_campaign=oemsecrets_2019_arrow&amp;utm_content=inv_listing&amp;utm_keyword=NRF52840-DONGLE">Arrow Electronics</a></li>
  <li><a href="https://www.avnet.com/shop/us/products/nordic-semiconductor/nrf52840-dongle-3074457345635709668?CMP=EMA_OEMSecrets_inventoryfeed_VSE">Avnet America</a></li>
  <li><a href="https://www.mouser.co.uk/ProductDetail/Nordic-Semiconductor/nRF52840-Dongle?qs=gTYE2QTfZfTbdrOaMHWEZg==&amp;utm_source=OEMSECRETS&amp;utm_medium=aggregator&amp;utm_campaign=nRF52840-Dongle&amp;utm_term=nRF52840DONGLE&amp;utm_content=Nordic+Semiconductor">Mouser</a></li>
  <li><a href="https://sg.element14.com/nordic-semiconductor/nrf52840-dongle/bluetooth-module-v5-2mbps/dp/2902521?CMP=GRHB-OEMSECRETS">element14 Farnell</a></li>
  <li><a href="https://www.avnet.com/shop/emea/products/nordic-semiconductor/nrf52840-dongle-3074457345635584192?c=EUR&amp;r=EMEA&amp;CMP=EMEA_OEMSecrets_inventoryfeed_VSE">Avnet Europe/Middle East/Africa</a></li>
  <li><a href="https://www.tme.eu/en/details/nrf52840-dongle/development-kits-for-data-transmission/nordic-semiconductor/?utm_source=oemsecrets.com&amp;utm_medium=cpc&amp;utm_campaign=compare-2020-01">TME</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/pca10059.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pca10059/</guid>
  </item><item>
    <title>nRF52833 DK (PCA10100)</title>
    <link>https://circuitpython.org/board/pca10100/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pca10100.jpg 300w,
               /assets/images/boards/large/pca10100.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pca10100.jpg" alt="Image of Board">

<p>By Nordic</p> <p>The nRF52833 development kit from Nordic.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.nordicsemi.com/About-us/BuyOnline?search_token=nRF52833-DK&amp;series_token=nRF52833">Price Comparison</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/pca10100.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 03 May 2019 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pca10100/</guid>
  </item><item>
    <title>PewPew</title>
    <link>https://circuitpython.org/board/pewpew10/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pewpew_10.2.jpg 300w,
               /assets/images/boards/large/pewpew_10.2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pewpew_10.2.jpg" alt="Image of Board">

<p>By Radomir Dopieralski</p> <p>This board was designed to be an affordable device for teaching game
development. An eight by eight display, with four shades of pixels, together
with an equivalent of a Trinket M0 on board let you create and play simple
games such as Snake, Tetris or Frogger. A number of example games, together
with an online tutorial and documentation, let you quickly pick up the skills
that you will later find useful when creating bigger games and interactive
applications. A row of pins on the back also lets you connect anything you
could use with other boards, so you can also use this for playing with
electronics.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.tindie.com/products/14890/">Tindie</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/pewpew10.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 12 Mar 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pewpew10/</guid>
  </item><item>
    <title>PewPew M4</title>
    <link>https://circuitpython.org/board/pewpew_m4/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pewpew_m4.jpg 300w,
               /assets/images/boards/large/pewpew_m4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pewpew_m4.jpg" alt="Image of Board">

<p>By Radomir Dopieralski</p> <p>This board was designed to get you to make games with CircuitPython with
minimal fuss and also minimal cost. It comes with a powerful SAMD51 Cortex M4
microcontroller already loaded with CircuitPython and some example games,
a 160x128 display, and seven buttons arranged in a familiar way. Just plug it
into USB and you can modify the example games or write your own.</p>

<h2 id="updating-warning">Updating Warning</h2>

<p>If you update this board from version 5.x or older to version 6.x or newer, you
have to replace the <code class="language-plaintext highlighter-rouge">main.py</code> file with a <a href="https://github.com/pewpew-game/game-m4-menu">newer version obtained from the
repository</a>, otherwise the game
selection menu will not work with the new version of CircuitPython.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://hackaday.io/project/165032-pewpew-m4">Hackaday.io</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.tindie.com/products/makerfabs/circuitpython-pewpew-m4-kit/">Tindie</a></li>
  <li><a href="https://makerfabs.com/circuitpython-pewpew-m4.html">Makerfabs</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 16 Sep 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pewpew_m4/</guid>
  </item><item>
    <title>PicoPlanet</title>
    <link>https://circuitpython.org/board/picoplanet/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/picoplanet.jpg 300w,
               /assets/images/boards/large/picoplanet.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/picoplanet.jpg" alt="Image of Board">

<p>By bleeptrack</p> <p>PicoPlanet is a procedurally generated series of PCBs. The three planets act as capacitive touch buttons. The board also has a RGB LED on top, a USB-C connector and 4 more pin pads on the bottom. The board’s brain is a powerful SAMD21. The design also has stars that are not covered by  copper or soldermask and are perfect spots to place more LEDs.</p>

<p>The board design is generated procedurally and each version of the board is only produced 10 times.</p>

<h2 id="purchase">Purchase</h2>
<p>Add any links to purchase the board</p>
<ul>
  <li><a href="https://www.tindie.com/products/21123/">Tindie</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/picoplanet.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 31 Mar 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/picoplanet/</guid>
  </item><item>
    <title>pIRkey</title>
    <link>https://circuitpython.org/board/pirkey_m0/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pirkey_m0.jpg 300w,
               /assets/images/boards/large/pirkey_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pirkey_m0.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The pIRkey adds an IR remote receiver to any computer, laptop, tablet…any computer or device with a USB port that can use a keyboard. This little board slides into any USB A port, and shows up as an every-day USB keyboard. The onboard ATSAMD21 microcontroller listens for IR remote signals and converts them to keypresses, mouse movements, or even USB serial output.</p>

<p>Infrared is a favorite wireless protocol - no antennas, certifications, pairings, passwords, or special tools required. Works everywhere in the world and very intuitive - everyone’s got an IR remote in their home.</p>

<p>The <strong>pIRkey</strong> is an improvement on Adafruit’s original IRkey product, by adding a <strong>p</strong> for <strong>python</strong>. Now with CircuitPython being available for the tiny ATSAMD21E processor, it’s swapped in for the ATtiny85, giving a huge boost in power and a working Python interpreter on board as well. This means it is easy to reprogram, customize or adapt it to whatever Infrared-reading needs you may have.</p>

<p>When you plug it in, the pIRkey shows up as a triple device: USB disk drive to store code, USB serial for debugging and Python interactive command line, and USB keyboard/mouse that can transmit keypresses or mouse movements.</p>

<p>By default it ships with simple example code to read NEC remotes but <strong>you can use <em>any</em> remote that has about 38KHz output frequency which is the vast majority of remote controls</strong>. CircuitPython makes this all very easy to customize and adapt to your own needs.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-pirkey-python-programmable-infrared-usb-adapter/">pIRkey Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3364">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/pirkey_m0.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 11 Mar 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pirkey_m0/</guid>
  </item><item>
    <title>Pitaya Go</title>
    <link>https://circuitpython.org/board/pitaya_go/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pitaya_go.jpg 300w,
               /assets/images/boards/large/pitaya_go.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pitaya_go.jpg" alt="Image of Board">

<p>By MakerDiary</p> <p>BLE and Wifi board in a small for factor.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.makerdiary.com/products/pitaya-go">MakerDiary</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/pitaya_go.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 10 May 2019 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pitaya_go/</guid>
  </item><item>
    <title>PYB Nano v2</title>
    <link>https://circuitpython.org/board/pyb_nano_v2/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pyb_nano_v2.jpg 300w,
               /assets/images/boards/large/pyb_nano_v2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pyb_nano_v2.jpg" alt="Image of Board">

<p>By Elecrow</p> <p>DETAILS</p>

<p>Although the PYB Nano board is small, it contains all the features of MicroPython. It is an ideal development board for beginners to learn more about MicroPython. It can be a well cost choice for you, for the price is low, but it supports most features and functions of MicroPython. The PYB Nano has accelerometer, the data of sport can be read directly.
It is convenient to extend features via I2C, SPI, UART and other interfaces. By connecting various sensors, LCD displays, OLED, GPS module and so on, you can DIY some interesting projects.</p>

<p><strong>Features:</strong></p>
<ul>
  <li>Supports microUSB.</li>
  <li>Compatible with Pyboard development board.</li>
  <li>Supports 2 UART, 3 I2C, 3 SPI, 10 ADC and RTC.</li>
  <li>It allows two power input type, power by battery or USB.</li>
  <li>The 4 LED on the board support luminance regulation function.</li>
  <li>8M flash</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.elecrow.com/micropython-development-board-pyb-nano-compatible-with-python.html">Elecrow</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/pyb_nano_v2.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 09 Dec 2019 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pyb_nano_v2/</guid>
  </item><item>
    <title>PyBadge</title>
    <link>https://circuitpython.org/board/pybadge/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pybadge.jpg 300w,
               /assets/images/boards/large/pybadge.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pybadge.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The Adafruit PyBadge an all-in-one compact dev board programmable in CircuitPython. Full of features squeezed onto a 3 3⁄8 × 2 1⁄8 inch rounded credit card sized rectangle. It’s a perfect wearable badge, but can be used for many projects.</p>

<p>The PyBadge is powered by our favorite microcontroller, the ATSAMD51, with 512KB of flash and 192KB of RAM. There is an additional 2 MB of QSPI flash for file storage, handy for images, fonts, sounds, or game assets.</p>

<p>On the front, there is a 1.8” 160x128 color TFT display with dimmable backlight. There is fast DMA support for drawing, so updates are incredibly fast. There are also 8 silicone-top buttons: they are clicky but have a soft button top so they’re nice and grippy. The buttons are arranged to mimic a gaming handheld, with a d-pad, 2 menu-select buttons and 2 fire-action buttons. There are also 5 NeoPixel LEDs to dazzle or track activity.</p>

<p>On the back, there is a full Feather-compatible header socket set, so you can plug in any FeatherWing to expand the capabilities of the PyBadge. There are also 3 STEMMA connectors - two 3-pin with ADC/PWM capability and one 4-pin that connects to I2C - you can use this for Grove sensors as well.</p>

<p>For built-in sensors, there is a light sensor that points out the front, and a 3-axis accelerometer that can detect taps and free-fall. To make bleeps and bloops, there’s a built in buzzer-speaker. For projects where you need more volume, you can plug in an 8 ohm speaker.</p>

<p>You can power the PyBadge from any of Adafruit’s LiPoly batteries, but <a href="https://www.adafruit.com/category/574">this 400mAh one</a> is suggested. An on-off switch will save battery power when not in use. Or power the board from the Micro USB port - it will also charge the battery if one is attached.</p>

<p><a href="https://youtu.be/n2rzrYRAPYI?t=762" title="PyBadge"><img src="http://img.youtube.com/vi/n2rzrYRAPYI/0.jpg" alt="PyBadge" /></a></p>

<p>There is a variant on the Adafruit PyBadge, the Adafruit PyBadge LC, which has a subset of the PyBadge features.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-pybadge">PyBadge Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/4200/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4200">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/pybadge.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 19 Mar 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pybadge/</guid>
  </item><item>
    <title>PyBadge AirLift</title>
    <link>https://circuitpython.org/board/pybadge_airlift/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pybadge_airlift.jpg 300w,
               /assets/images/boards/large/pybadge_airlift.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pybadge_airlift.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The PyBadge AirLift is coming soon from Adafruit, check out the weekly “Top Secret” segment on ASK AN ENGINEER or the upcoming new product videos on <a href="https://www.youtube.com/adafruit">YouTube</a>.</p>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/pybadge_airlift.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 01 Jul 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pybadge_airlift/</guid>
  </item><item>
    <title>Pyboard</title>
    <link>https://circuitpython.org/board/pyboard_v11/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pyboard_v11.jpg 300w,
               /assets/images/boards/large/pyboard_v11.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pyboard_v11.jpg" alt="Image of Board">

<p>By Damien George</p> <p>The pyboard is a compact and powerful electronics development board that runs MicroPython. It connects to your PC over USB, giving you a USB flash drive to save your Python scripts, and a serial Python prompt (a REPL) for instant programming. Requires a micro USB cable, and will work with Windows, Mac and Linux.</p>

<p>There are 3 main ways to control the pyboard:</p>

<ul>
  <li><strong>REPL:</strong> Connecting to your PC via USB, the board appears as a USB virtual comms port (CDC VCP) and you can use any serial program to connect and get a Python REPL prompt. This allows you to instantly type and execute Python commands, just like you would when running Python on your PC. You can also redirect the REPL to any of the UARTs on the pyboard.</li>
  <li><strong>Remote script:</strong> You can change from REPL to raw REPL mode by sending ctrl-A, and then in raw REPL mode you can send an arbitrary Python script to the board for it to execute immediately. A Python script is available which makes using this mode very simple: you just run python pyboard.py script_to_run.py and this will execute script_to_run.py on the pyboard, returning any output.</li>
  <li><strong>From file:</strong> The pyboard has a small, built-in filesystem which lives in part of the flash memory of the microcontroller. It also has an SD card slot if you want to extend the available storage. When you connect the pyboard to your PC, it appears as a USB flash storage device and you can access (mount) the internal filesystem and the SD card this way. If you copy a Python script to the filesystem and call it main.py then the board will execute this script when it starts up. This way you can run scripts without being connected to a PC.</li>
</ul>

<p><strong>Main features of the hardware:</strong></p>
<ul>
  <li>STM32F405RG microcontroller</li>
  <li>168 MHz Cortex M4 CPU with hardware floating point</li>
  <li>1024KiB flash ROM and 192KiB RAM</li>
  <li>Micro USB connector for power and serial communication</li>
  <li>Micro SD card slot, supporting standard and high capacity SD cards</li>
  <li>3-axis accelerometer (MMA7660)</li>
  <li>Real time clock with optional battery backup</li>
  <li>24 GPIO on left and right edges and 5 GPIO on bottom row, plus LED and switch GPIO available on bottom row</li>
  <li>3x 12-bit analog to digital converters, available on 16 pins, 4 with analog ground shielding</li>
  <li>2x 12-bit digital to analog (DAC) converters, available on pins X5 and X6</li>
  <li>4 LEDs (red, green, yellow and blue)</li>
  <li>1 reset and 1 user switch</li>
  <li>On-board 3.3V LDO voltage regulator, capable of supplying up to 300mA, input voltage range 3.6V to 10V</li>
  <li>DFU bootloader in ROM for easy upgrading of firmware</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/2390">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/pyboard_v11.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 26 Sep 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pyboard_v11/</guid>
  </item><item>
    <title>PyCubed</title>
    <link>https://circuitpython.org/board/pycubed/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pycubed.jpg 300w,
               /assets/images/boards/large/pycubed.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pycubed.jpg" alt="Image of Board">

<p>By Robot Exploration Lab</p> <p>The hardware and software pitfalls associated with satellite development greatly contribute to the nearly 60% failure rates of initial CubeSat missions. As the role of small satellites in commercial and scientific endeavors evolves beyond an “engineering exercise,” basic aspects of the spacecraft design must be matured and made widely available in order to continue advancing this valuable technology for Space exploration.</p>

<p>PyCubed: an open-source, radiation-tested CubeSat framework that cost-effectively integrates ADCS, TT&amp;C, C&amp;DH, and EPS into a single PC104-compatible module programmable entirely in Python. PyRCubed addresses many hardware-related failure modes of CubeSats through component and system-level radiation testing, in-depth design and qualification documentation, and on-orbit flight performance from an ongoing LEO mission (KickSat-2). The challenge of mission-ready software development is also mitigated through low-level implementation of the Python programming language via CircuitPython.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/PyCubed">Github</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/pycubed.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 27 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pycubed/</guid>
  </item><item>
    <title>PyCubed w/MRAM</title>
    <link>https://circuitpython.org/board/pycubed_mram/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pycubed.jpg 300w,
               /assets/images/boards/large/pycubed.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pycubed.jpg" alt="Image of Board">

<p>By Robot Exploration Lab</p> <p>The hardware and software pitfalls associated with satellite development greatly contribute to the nearly 60% failure rates of initial CubeSat missions. As the role of small satellites in commercial and scientific endeavors evolves beyond an “engineering exercise,” basic aspects of the spacecraft design must be matured and made widely available in order to continue advancing this valuable technology for Space exploration.</p>

<p>PyCubed: an open-source, radiation-tested CubeSat framework that cost-effectively integrates ADCS, TT&amp;C, C&amp;DH, and EPS into a single PC104-compatible module programmable entirely in Python. PyRCubed addresses many hardware-related failure modes of CubeSats through component and system-level radiation testing, in-depth design and qualification documentation, and on-orbit flight performance from an ongoing LEO mission (KickSat-2). The challenge of mission-ready software development is also mitigated through low-level implementation of the Python programming language via CircuitPython.</p>

<p>This version uses magnetic RAM (MRAM) instead of flash memory.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/PyCubed">Github</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/pycubed_mram.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 07 Apr 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pycubed_mram/</guid>
  </item><item>
    <title>PyGamer</title>
    <link>https://circuitpython.org/board/pygamer/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pygamer.jpg 300w,
               /assets/images/boards/large/pygamer.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pygamer.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The Adafruit PyGamer is an entry-level gaming handheld for DIY gaming and maybe a little retro-emulation, all in one compact dev board.</p>

<p>The PyGamer is powered by the ATSAMD51 microcontroller with 512KB of flash and 192KB of RAM. There is an additional 8 MB of QSPI flash for file storage, handy for images, fonts, sounds, or game assets.</p>

<p>On the front, you get a 1.8” 160x128 color TFT display with a dimmable backlight. There is fast DMA support for drawing - screen updates are incredibly fast. A dual-potentiometer analog stick gives great control, with easy diagonal movement, or really any direction you like.
There are also 4 square-top buttons which fit <a href="https://www.adafruit.com/product/4228">square top button caps</a> (available separately). The buttons are arranged to mimic a gaming handheld, with 2 menu-select buttons and 2 fire-action buttons. There are also 5 NeoPixel LEDs below the LCD screen to dazzle or track activity.</p>

<p>On the back, there is a full Feather-compatible header socket set to allow plugging in any FeatherWing, providinge expansion of the PyGamer’s capabilities. There are 3 integrated STEMMA connectors: two 3-pin with ADC/PWM capability and one 4-pin that connects to I2C -  this can be used for Grove sensors as well.</p>

<p>For built in sensors, there’s a light sensor that points out the front, and a 3-axis accelerometer that can detect taps and free-fall. To make bleeps and bloops, plug in any set of stereo headphones. For projects where you need more volume, you can plug in an 8 ohm speaker. The PyGamer will auto-switch to speakers when they’re plugged in.</p>

<p>You can power the PyGamer from any Adafruit LiPoly battery, but <a href="https://www.adafruit.com/product/2750">this 350mAh one</a> is suggested as it will fit into the <a href="https://www.adafruit.com/product/4238">Adafruit PyGamer acrylic case</a> (sold separately). An on-off switch will save battery power when not in use. Or power the PyGamer from the Micro USB port - it will also charge up the battery if one is attached.</p>

<p><a href="https://youtu.be/yX2SuS0rK2A?t=1167" title="PyGamer"><img src="http://img.youtube.com/vi/yX2SuS0rK2A/0.jpg" alt="PyGamer" /></a></p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-pygamer">PyGamer Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/4242/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4242">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/pygamer.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 25 May 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pygamer/</guid>
  </item><item>
    <title>PyGamer Advance</title>
    <link>https://circuitpython.org/board/pygamer_advance/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pygamer_advance.jpg 300w,
               /assets/images/boards/large/pygamer_advance.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pygamer_advance.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The PyGamer Advance is coming soon from Adafruit, check out the weekly “Top Secret” segment on ASK AN ENGINEER or the upcoming new product videos on <a href="https://www.youtube.com/adafruit">YouTube</a>.</p>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/pygamer_advance.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 01 Jul 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pygamer_advance/</guid>
  </item><item>
    <title>PyPortal</title>
    <link>https://circuitpython.org/board/pyportal/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pyportal.jpg 300w,
               /assets/images/boards/large/pyportal.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pyportal.jpg" alt="Image of Board">

<p>By Adafruit</p> <p><strong>PyPortal</strong>, is Adafruit’s easy-to-use IoT device that allows you to create all the things for the “Internet of Things” in minutes. Make custom touch screen interface GUIs, all open-source, and Python-powered using tinyJSON / APIs to get news, stock, weather, cat photos, and more – all over Wi-Fi with the latest technologies. Create little pocket universes of joy that connect to something good. Rotate it 90 degrees, it’s a web-connected conference badge #badgelife.</p>

<p><a href="http://www.youtube.com/watch?v=9meeVehRS6A" title="PyPortal"><img src="http://img.youtube.com/vi/9meeVehRS6A/0.jpg" alt="PyPortal" /></a></p>

<p>The PyPortal uses an ATMEL (Microchip) ATSAMD51J20, and an Espressif ESP32 Wi-Fi coprocessor with TLS/SSL support built-in. PyPortal has a <strong>3.2″ 320 x 240 color TFT</strong> with resistive touch screen. PyPortal includes: speaker, light sensor, temperature sensor, NeoPixel, microSD card slot, 8MB flash, plug-in ports for I2C and 2 analog/digital pins, 3D files for custom enclosures / lanyard fastening. Open-source hardware, and Open-Source software, and CircuitPython. The device shows up as a USB drive and the code (Python) can be edited in any IDE, text editor, etc.</p>

<p>The M4 and ESP32 are a great couple - and each bring their own strengths to this board. The SAMD51 M4 has native USB so it can show up like a disk drive, act as a MIDI or HID keyboard/mouse, and of course bootload and debug over a serial port. It also has DACs, ADC, PWM, and tons of GPIO. Meanwhile, the ESP32 has secure WiFi capabilities, and plenty of Flash and RAM to buffer sockets. By letting the ESP32 focus on the complex TLS/SSL computation and socket buffering, it frees up the SAMD51 to act as the user interface. You get a great programming experience thanks to the native USB with files available for drag-n-drop, and you don’t have to spend a ton of processor time and memory to do SSL encryption/decryption and certificate management. It’s the best of both worlds!</p>

<h2 id="tutorials">Tutorials</h2>
<ul>
  <li><a href="https://learn.adafruit.com/adafruit-pyportal">PyPortal Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/4116/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4116">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/pyportal.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pyportal/</guid>
  </item><item>
    <title>PyPortal Pynt</title>
    <link>https://circuitpython.org/board/pyportal_pynt/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pyportal_pynt.jpg 300w,
               /assets/images/boards/large/pyportal_pynt.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pyportal_pynt.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The <strong>PyPortal Pynt</strong> is the little sister to our <a href="https://www.adafruit.com/product/4116">popular PyPortal</a> - zapped with a shink ray to take the design from a 3.2” diagonal down to 2.4” diagonal screen - but otherwise the same! The PyPortal is our easy-to-use IoT device that allows you to create all the things for the “Internet of Things” in minutes. Make custom touch screen interface GUIs, all open-source, and Python-powered using tinyJSON / APIs to get news, stock, weather, cat photos, and more – all over Wi-Fi with the latest technologies. Create little pocket universes of joy that connect to something good. Rotate it 90 degrees, it’s a web-connected conference badge #badgelife.</p>

<p>The PyPortal uses an ATMEL (Microchip) ATSAMD51J20, and an Espressif ESP32 Wi-Fi coprocessor with TLS/SSL support built-in. PyPortal has a <strong>2.4″ diagonal 320 x 240 color TFT</strong> with resistive touch screen. PyPortal includes: speaker, light sensor, temperature sensor, NeoPixel, microSD card slot, 8MB flash, plug-in ports for I2C and 2 analog/digital pins, 3D files for custom enclosures / lanyard fastening. Open-source hardware, and Open-Source software, CircuitPython and Arduino. The device shows up as a USB drive and the code (Python) can be edited in any IDE, text editor, etc.</p>

<p><strong>Compared to the original PyPortal, the Pynt does not include a ADT7410 temperature sensor. Other than the ADT7410, the Pynt’s display, processor, STEMMA conectors and WiFi have the exact same wiring as the original 3.2” PyPortal so all Arduino/CircuitPython code will run exactly the same - just smaller!</strong></p>

<p>The M4 and ESP32 are a great couple - and each bring their own strengths to this board. The SAMD51 M4 has native USB so it can show up like a disk drive, act as a MIDI or HID keyboard/mouse, and of course bootload and debug over a serial port. It also has DACs, ADC, PWM, and tons of GPIO. Meanwhile, the ESP32 has secure WiFi capabilities, and plenty of Flash and RAM to buffer sockets. By letting the ESP32 focus on the complex TLS/SSL computation and socket buffering, it frees up the SAMD51 to act as the user interface. You get a great programming experience thanks to the native USB with files available for drag-n-drop, and you don’t have to spend a ton of processor time and memory to do SSL encryption/decryption and certificate management. It’s the best of both worlds!</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-pyportal">PyPortal Pynt Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4465">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/pyportal_pynt.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 10 Dec 2019 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/pyportal_pynt/</guid>
  </item><item>
    <title>PyPortal Titano</title>
    <link>https://circuitpython.org/board/pyportal_titano/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pyportal_titano.jpg 300w,
               /assets/images/boards/large/pyportal_titano.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pyportal_titano.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The <strong>PyPortal Titano</strong> is the big sister to our <a href="https://www.adafruit.com/product/4116">popular PyPortal</a> now with <em>twice as many pixels!</em> The PyPortal is our easy-to-use IoT device that allows you to create all the things for the “Internet of Things” in minutes. Make custom touch screen interface GUIs, all open-source, and Python-powered using tinyJSON / APIs to get news, stock, weather, cat photos, and more – all over Wi-Fi with the latest technologies. Create little pocket universes of joy that connect to something good. Rotate it 90 degrees, it’s a web-connected conference badge #badgelife.</p>

<p>The Titano uses an ATMEL (Microchip) ATSAMD51J20, and an Espressif ESP32 Wi-Fi coprocessor with TLS/SSL support built-in. PyPortal has a bigger <strong>3.5″ diagonal 320 x 480 color TFT</strong> with resistive touch screen. Compare that to the original PyPortal’s 3.2” 240x320, we have twice as many pixels! Also, we’ve updated the connector to be a reverse-friendly <strong>USB C</strong> connector.</p>

<p><strong>Compared to the original PyPortal, the Titano does not include a ADT7410 temperature sensor. It also has a higher-resolution screen with a different controller chip. The Processor, STEMMA conectors and WiFi have the exact same wiring as the original 3.2” PyPortal so if you are running Arduino/CircuitPython code, you’ll just have to adjust your graphics and fonts for the larger resolution screen!</strong></p>

<p>The PyPortal Titano includes: speaker, light sensor, temperature sensor, NeoPixel, microSD card slot, 8MB flash, plug-in ports for I2C and 2 analog/digital pins. Open-source hardware, and Open-Source software, CircuitPython and Arduino. The device shows up as a USB drive and the code (Python) can be edited in any IDE, text editor, etc.</p>

<p>The M4 and ESP32 are a great couple - and each bring their own strengths to this board. The SAMD51 M4 has native USB so it can show up like a disk drive, act as a MIDI or HID keyboard/mouse, and of course bootload and debug over a serial port. It also has DACs, ADC, PWM, and tons of GPIO. Meanwhile, the ESP32 has secure WiFi capabilities, and plenty of Flash and RAM to buffer sockets. By letting the ESP32 focus on the complex TLS/SSL computation and socket buffering, it frees up the SAMD51 to act as the user interface. You get a great programming experience thanks to the native USB with files available for drag-n-drop, and you don’t have to spend a ton of processor time and memory to do SSL encryption/decryption and certificate management. It’s the best of both worlds!</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-pyportal-titano">PyPortal Titano Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4444">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/pyportal_titano.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 30 Aug 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pyportal_titano/</guid>
  </item><item>
    <title>PyRuler</title>
    <link>https://circuitpython.org/board/pyruler/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pyruler.jpg 300w,
               /assets/images/boards/large/pyruler.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pyruler.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>CircuitPython rules! The PyRuler is the first ruler to be able to run CircuitPython. It features an embedded Adafruit Trinket M0, which is a tiny microcontroller board, built around the Atmel ATSAMD21E18 powerhouse.</p>

<p>The first time you soldered up a surface mount component you may have been surprised “these are really small parts!” and there’s dozens of different names too! QFN, TDFN, SOIC, SOP, J-Lead, what do they mean and how can you tell how big they are? On the reverse side of the PyRuler, just like with our PCB ruler, you have a reference board right at your fingertips.</p>

<p>While you can use the PyRuler with the Arduino IDE, it ships with CircuitPython on board. When you plug it in, it will show up as a very small disk drive with code.py on it. Edit code.py with your favorite text editor to build your project using Python, the most popular programming language. No installs, IDE or compiler needed, so you can use it on any computer, even ChromeBooks or computers you can’t install software on. When you’re done, unplug the Trinket M0 and your code will go with you. CircuitPython is easier to code but not as low-level and complete as Arduino.</p>

<h2 id="tutorial">Tutorial</h2>

<ul>
  <li><a href="https://learn.adafruit.com/adafruit-pyruler">PyRuler Overview</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/pyruler.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 15 Jul 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/pyruler/</guid>
  </item><item>
    <title>QT Py</title>
    <link>https://circuitpython.org/board/qtpy_m0/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/qtpy_m0.jpg 300w,
               /assets/images/boards/large/qtpy_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/qtpy_m0.jpg" alt="Image of Board">

<p>By Adafruit</p> <blockquote>
  <p><strong>Note:</strong> If you soldered the <a href="https://www.adafruit.com/product/4763">optional SOIC-8 SPI Flash chip</a> on to your QT Py, see the <a href="../qtpy_m0_haxpress/">“QT Py Haxpress”</a> page to make use of the extra space!</p>
</blockquote>

<p>What a cutie pie! Or is it… a QT Py? This diminutive dev board comes with our favorite lil chip, the SAMD21 (as made famous in our GEMMA M0 and Trinket M0 boards).</p>

<p>This time it comes with <a href="http://adafruit.com/stemma">our favorite connector - the STEMMA QT</a>, a chainable I2C port that can be used with <a href="https://www.adafruit.com/category/620">any of our STEMMA QT sensors and accessories</a>.</p>

<p><a href="https://www.adafruit.com/?q=qt+oled&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">OLEDs</a>! <a href="https://www.adafruit.com/?q=qt+imu&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">Inertial Measurment Units</a>! <a href="https://www.adafruit.com/?q=qt+sensor&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">Sensors a-plenty</a>. All plug-and-play thanks to the innovative chainable design: <a href="https://www.sparkfun.com/qwiic">SparkFun Qwiic</a>-compatible STEMMA QT connectors for the I2C bus so you don’t even need to solder! Just plug in a compatible cable and attach it to your MCU of choice, and you’re ready to load up some software and measure some light.</p>

<p>Use any <a href="http://www.sparkfun.com/qwiic">SparkFun Qwiic</a> boards! <a href="https://www.adafruit.com/product/4528">Seeed Grove I2C boards</a> will also work with this adapter cable.</p>

<p>Pinout and shape is <a href="https://wiki.seeedstudio.com/Seeeduino-XIAO/">Seeed Xiao</a> compatible, with castellated pads so you can solder it flat to a PCB. In addition to the QT connector, we also added an <strong>RGB NeoPixel</strong> (with controllable power pin to allow for ultra-low-power usage), <strong>and a reset button</strong> (great for restarting your program, or entering the bootloader)</p>

<p>Runs Arduino like a dream, and can be used for basic CircuitPython projects. For more advanced usage like datalogging or file storage, solder an SOIC SPI flash chip onto the bottom pads,</p>

<ul>
  <li>Same size, form-factor, and pin-out as Seeed Xiao</li>
  <li><strong>ATSAMD21E18</strong> 32-bit Cortex M0+ - 48 MHz 32 bit processor with <strong>256KB Flash</strong> and <strong>32 KB RAM</strong></li>
  <li>Native USB supported by every OS - can be used in Arduino or CircuitPython as USB serial console, MIDI, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with <strong>Arduino IDE</strong> or <strong>CircuitPython</strong></li>
  <li><strong>Built in RGB NeoPixel LED</strong></li>
  <li><strong>11 GPIO pins</strong>:
    <ul>
      <li>True analog output on one I/O pin - can be used to play 10-bit quality audio clips in Arduino (CircuitPython does not have storage for audio clips)</li>
      <li>9 x 12-bit analog inputs (SDA/SCL do not have analog inputs)</li>
      <li>1 x Optional AREF on A1</li>
      <li>9 x PWM outputs (A0 is analog out, A1 is not PWM capable)</li>
      <li>Hardware I2C port with STEMMA QT plug-n-play connector</li>
      <li>Hardware UART</li>
      <li>Hardware SPI</li>
      <li>Hardware I2S</li>
      <li>6 x Capacitive Touch with no additional components required</li>
    </ul>
  </li>
  <li>3.3V regulator with <a href="https://www.diodes.com/assets/Datasheets/AP2112.pdf">600mA peak output</a></li>
  <li><a href="https://www.adafruit.com/product/4763">Optional SOIC-8 SPI Flash chip on bottom</a></li>
  <li><strong>Reset switch</strong> for starting your project code over or entering bootloader mode</li>
  <li><strong>USB Type C connector</strong></li>
  <li><strong>Really really small</strong></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4600">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/qtpy_m0.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 28 Sep 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/qtpy_m0/</guid>
  </item><item>
    <title>QT Py Haxpress</title>
    <link>https://circuitpython.org/board/qtpy_m0_haxpress/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/qtpy_m0_haxpress.jpg 300w,
               /assets/images/boards/large/qtpy_m0_haxpress.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/qtpy_m0_haxpress.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>This is the <a href="https://www.adafruit.com/product/4600">QT Py board</a> with <a href="https://www.adafruit.com/product/4763">the SOIC-8 2MB Flash chip</a> soldered on. Both are in the <a href="https://adafruit.com">Adafruit shop</a>.</p>

<p>What a cutie pie! Or is it… a QT Py? This diminutive dev board comes with our favorite lil chip, the SAMD21 (as made famous in our GEMMA M0 and Trinket M0 boards).</p>

<p>This time it comes with <a href="http://adafruit.com/stemma">our favorite connector - the STEMMA QT</a>, a chainable I2C port that can be used with <a href="https://www.adafruit.com/category/620">any of our STEMMA QT sensors and accessories</a>.</p>

<p><a href="https://www.adafruit.com/?q=qt+oled&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">OLEDs</a>! <a href="https://www.adafruit.com/?q=qt+imu&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">Inertial Measurment Units</a>! <a href="https://www.adafruit.com/?q=qt+sensor&amp;main_page=category&amp;cPath=1005&amp;sort=BestMatch">Sensors a-plenty</a>. All plug-and-play thanks to the innovative chainable design: <a href="https://www.sparkfun.com/qwiic">SparkFun Qwiic</a>-compatible STEMMA QT connectors for the I2C bus so you don’t even need to solder! Just plug in a compatible cable and attach it to your MCU of choice, and you’re ready to load up some software and measure some light.</p>

<p>Use any <a href="http://www.sparkfun.com/qwiic">SparkFun Qwiic</a> boards! <a href="https://www.adafruit.com/product/4528">Seeed Grove I2C boards</a> will also work with this adapter cable.</p>

<p>Pinout and shape is <a href="https://wiki.seeedstudio.com/Seeeduino-XIAO/">Seeed Xiao</a> compatible, with castellated pads so you can solder it flat to a PCB. In addition to the QT connector, we also added an <strong>RGB NeoPixel</strong> (with controllable power pin to allow for ultra-low-power usage), <strong>and a reset button</strong> (great for restarting your program, or entering the bootloader)</p>

<p>Runs Arduino like a dream, and can be used for basic CircuitPython projects. For more advanced usage like datalogging or file storage, solder an SOIC SPI flash chip onto the bottom pads,</p>

<ul>
  <li>Same size, form-factor, and pin-out as Seeed Xiao</li>
  <li><strong>ATSAMD21E18</strong> 32-bit Cortex M0+ - 48 MHz 32 bit processor with <strong>256KB Flash</strong> and <strong>32 KB RAM</strong></li>
  <li>Native USB supported by every OS - can be used in Arduino or CircuitPython as USB serial console, MIDI, Keyboard/Mouse HID, even a little disk drive for storing Python scripts.</li>
  <li>Can be used with <strong>Arduino IDE</strong> or <strong>CircuitPython</strong></li>
  <li><strong>Built in RGB NeoPixel LED</strong></li>
  <li><strong>11 GPIO pins</strong>:
    <ul>
      <li>True analog output on one I/O pin - can be used to play 10-bit quality audio clips in Arduino (CircuitPython does not have storage for audio clips)</li>
      <li>9 x 12-bit analog inputs (SDA/SCL do not have analog inputs)</li>
      <li>1 x Optional AREF on A1</li>
      <li>9 x PWM outputs (A0 is analog out, A1 is not PWM capable)</li>
      <li>Hardware I2C port with STEMMA QT plug-n-play connector</li>
      <li>Hardware UART</li>
      <li>Hardware SPI</li>
      <li>Hardware I2S</li>
      <li>6 x Capacitive Touch with no additional components required</li>
    </ul>
  </li>
  <li>3.3V regulator with <a href="https://www.diodes.com/assets/Datasheets/AP2112.pdf">600mA peak output</a></li>
  <li><strong>Reset switch</strong> for starting your project code over or entering bootloader mode</li>
  <li><strong>USB Type C connector</strong></li>
  <li><strong>Really really small</strong></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/4600">Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/4763">Flash Chip</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/qtpy_m0_haxpress.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 28 Sep 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/qtpy_m0_haxpress/</guid>
  </item><item>
    <title>Pico</title>
    <link>https://circuitpython.org/board/raspberry_pi_pico/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_pico.jpg 300w,
               /assets/images/boards/large/raspberry_pi_pico.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_pico.jpg" alt="Image of Board">

<p>By Raspberry Pi</p> <p>The Raspberry Pi foundation changed single-board computing when they released the Raspberry Pi computer, now they’re ready to do the same for microcontrollers with the release of the brand new <strong>Raspberry Pi Pico</strong>. This low-cost microcontroller board features a powerful new chip, the <strong>RP2040</strong>, and all the fixin’s to get started with embedded electronics projects at a stress-free price.</p>

<p>The Pico is 0.825” x 2” and can have headers soldered in for use in a breadboard or perfboard, or can be soldered directly onto a PCB with the castellated pads. There’s 20 pads on each side, with groups of general purpose input-and-output (GPIO) pins interleaved with plenty of ground pins. All of the GPIO pins are 3.3V logic, and are not 5V-safe so stick to 3V! You get a total of 25 GPIO pins (technically there are 26 but IO #15 has a special purpose and should not be used by projects), 3 of those can be analog inputs (the chip has 4 ADC but one is not broken out). There are no true analog output (DAC) pins.</p>

<p>On the slim green board is minimal circuitry to get you going: A 5V to 3.3V power supply converter, single green LED on GP25, boot select button, RP2040 chip with dual-core Cortex M0, 2 MegaBytes of QSPI flash storage, and crystal.</p>

<p><strong>Inside the RP2040 is a ‘permanent ROM’ USB UF2 bootloader.</strong> What that means is when you want to program new firmware, you can hold down the BOOTSEL button while plugging it into USB (or pulling down the RUN/Reset pin to ground) and it will appear as a USB disk drive you can drag the firmware onto. Folks who have been using Adafruit products will find this very familiar - we use the technique all our native-USB boards. Just note you don’t double-click reset, instead hold down BOOTSEL during boot to enter the bootloader!</p>

<p>The RP2040 is a powerful chip, which has the clock speed of our M4 (SAMD51), and two cores that are equivalent to our M0 (SAMD21). Since it is an M0 chip, it does not have a floating point unit, or DSP hardware support - so if you’re doing something with heavy floating point math, it will be done in software and thus not as fast as an M4. For many other computational tasks, you’ll get close-to-M4 speeds!</p>

<p>For peripherals, there are two I2C controllers, two SPI controllers, and two UARTs that are multiplexed across the GPIO - check the pinout for what pins can be set to which. There are 16 PWM channels, each pin has a channel it can be set to (ditto on the pinout).</p>

<p>You’ll note there’s no I2S peripheral, or SDIO, or camera, what’s up with that? Well instead of having specific hardware support for serial-data-like peripherals like these, the RP2040 comes with the PIO state machine system which is a unique and powerful way to create custom hardware logic and data processing blocks that run on their own without taking up a CPU. For example, NeoPixels - often we bitbang the timing-specific protocol for these LEDs. For the RP2040, we instead use a PIO object that reads in the data buffer and clocks out the right bitstream with perfect accuracy. Same with I2S audio in or out, LED matrix displays, 8-bit or SPI based TFTs, even VGA! In MicroPython and CircuitPython you can create PIO control commands to script the peripheral and load it in at runtime. There are 2 PIO peripherals with 4 state machines each.</p>

<p><strong>At the time of launch, there is no Arduino core support for this board. There is <a href="https://github.com/raspberrypi/pico-sdk">great C/C++ support</a>, an official <a href="https://github.com/raspberrypi/micropython">MicroPython port</a>, and a CircuitPython port!</strong> We of course <a href="https://learn.adafruit.com/welcome-to-circuitpython">recommend CircuitPython because we think its the easiest way to get started</a> and it has support with most our drivers, displays, sensors, and more, supported out of the box so you can follow along with our CircuitPython projects and tutorials.</p>

<p>While the RP2040 has lots of onboard RAM (264KB), it does not have built in FLASH memory. Instead that is provided by the external QSPI flash chip. On this board there is 2MB, which is shared between the program its running and any file storage used by MicroPython or CircuitPython. When using C/C++ you get the whole flash memory, if using Python you will have about 1 MB remaining for code, files, images, fonts, etc.</p>

<p><strong>RP2040 Chip features:</strong></p>
<ul>
  <li>Dual ARM Cortex-M0+ @ 133MHz</li>
  <li>264kB on-chip SRAM in six independent banks</li>
  <li>Support for up to 16MB of off-chip Flash memory via dedicated QSPI bus</li>
  <li>DMA controller</li>
  <li>Fully-connected AHB crossbar</li>
  <li>Interpolator and integer divider peripherals</li>
  <li>On-chip programmable LDO to generate core voltage</li>
  <li>2 on-chip PLLs to generate USB and core clocks</li>
  <li>30 GPIO pins, 4 of which can be used as analog inputs</li>
  <li>Peripherals</li>
  <li>2 UARTs</li>
  <li>2 SPI controllers</li>
  <li>2 I2C controllers</li>
  <li>16 PWM channels</li>
  <li>USB 1.1 controller and PHY, with host and device support</li>
  <li>8 PIO state machines</li>
</ul>

<p><a href="https://raspberrypi.org/documentation/pico/getting-started/">Click here for the Raspberry Pi documentation.</a>
<a href="https://learn.adafruit.com/getting-started-with-raspberry-pi-pico-circuitpython">Click here for Getting Started with Raspberry Pi Pico and CircuitPython.</a></p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4883">Adafruit</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 21 Jan 2021 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/raspberry_pi_pico/</guid>
  </item><item>
    <title>MDBT50Q-DB-40</title>
    <link>https://circuitpython.org/board/raytac_mdbt50q-db-40/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raytac_mdbt50q-db-40.jpg 300w,
               /assets/images/boards/large/raytac_mdbt50q-db-40.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raytac_mdbt50q-db-40.jpg" alt="Image of Board">

<p>By Raytac Corporation</p> <p>MDBT50Q-DB demo board is designed for quick testing and debugging without building your own board. The board is only available with MDBT50Q-1MV2 (Chip Antenna) module.</p>

<p>Raytac nRF52840 module spectrum covers MDBT50Q-1MV2, MDBT50Q-P1MV2 and MDBT50Q-U1MV2 series with Chip Antenna, PCB Antenna and u.FL connector for External Antenna option for selection.</p>

<ul>
  <li>Module Demo Board built by MDBT50Q-1MV2</li>
  <li>Nordic nRF52840 SoC Solution Version: 2</li>
  <li>A recommended 3rd-party module by Nordic Semiconductor.</li>
  <li>BT5.1 &amp; BT5 Bluetooth Specification Certified</li>
  <li>Supports BT5 Long Range Feature</li>
  <li>Certifications: FCC, IC, CE, Telec (MIC), KC, SRRC, NCC, RCM, WPC</li>
  <li>32-bit ARM® Cortex™ M4F CPU</li>
  <li>1MB Flash Memory / 256kB RAM</li>
  <li>RoHS &amp; Reach Compliant.</li>
  <li>48 GPIO</li>
  <li>Chip Antenna</li>
  <li>Interfaces: SPI, UART, I2C, I2S, PWM, ADC, NFC, and USB</li>
  <li>Highly flexible multiprotocol SoC ideally suited for Bluetooth® Low Energy, ANT+, Zigbee, Thread (802.15.4) ultra low-power wireless applications.</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.raytac.com/product/ins.php?index_id=81">Raytac Corporation</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/raytac_mdbt50q-db-40.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 26 Jul 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/raytac_mdbt50q-db-40/</guid>
  </item><item>
    <title>Robo HAT MM1 M4</title>
    <link>https://circuitpython.org/board/robohatmm1_m4/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/robohatmm1.jpg 300w,
               /assets/images/boards/large/robohatmm1.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/robohatmm1.jpg" alt="Image of Board">

<p>By Robotics Masters</p> <p>The Robotics Masters Robo HAT MM1 is an open source robotics controller board for Raspberry Pi. It is education focused but works in many applications. The Robo HAT provides all the hardware you need in one simple, easy-to-use form factor. It removes the initial barriers to starting any robotics project.</p>

<p>With support for Adafruit CircuitPython and other libraries the Robo HAT is able to act as a single solution for all projects great and small.</p>

<p>The Robo HAT MM1 removes the need for buying lots of individual components by including them on the board. It can act as a PWM driver, provide on-board power through voltage regulators, and measure movement with the on-board IMU - all at the same time.</p>

<p>The wide compatibility with many open source software platforms such as CircuitPython means you can use all existing software for sensors while creating your project in the way that works best for you. The hardware schematics and software are fully open source.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.crowdsupply.com/robotics-masters/robo-hat-mm1">Robo HAT MM1 - Crowd Supply</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/robohatmm1_m4.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 27 Jul 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/robohatmm1_m4/</guid>
  </item><item>
    <title>SAM32</title>
    <link>https://circuitpython.org/board/sam32/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/sam32.jpg 300w,
               /assets/images/boards/large/sam32.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/sam32.jpg" alt="Image of Board">

<p>By Max Holliday</p> <p>An open source “swiss army knife” for hardware and IoT applications. This board is designed for quickly prototyping a wide range of makerspace, university, and science-related projects.</p>

<p>The SAM32 features a 120 MHz SAMD51 main processer, an ESP32 WROOM co-processor, native USB handling via CircuitPython, micro SD card socket, LiPo battery charging, 42 available I/O pins, a NeoPixel, and pin compatibility with Adafruit Feather Wings.</p>

<h2 id="resources">Resources</h2>
<p>SAM32 - <a href="https://github.com/maholli/SAM32">GitHub</a>.</p>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/sam32.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 05 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/sam32/</guid>
  </item><item>
    <title>SAM E54 Xplained Pro</title>
    <link>https://circuitpython.org/board/same54_xplained/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/same54_xplained.jpg 300w,
               /assets/images/boards/large/same54_xplained.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/same54_xplained.jpg" alt="Image of Board">

<p>By Microchip</p> <p>The SAM E54 Xplained Pro evaluation kit is a hardware platform for evaluating the ATSAME54P20A microcontroller (MCU). Supported by the Studio integrated development platform, the kit provides easy access to the features of the ATSAME54P20A and explains how to integrate the device into a custom design.</p>

<p>In addition to ATSAME54P20A, the SAM E54 Xplained Pro Evaluation kit can also be used for evaluating the ATSAMD51P20A microcontroller as both MCUs are identical in pin count and peripherals except that ATSAMD51P20A does not have Ethernet and CAN FD.</p>

<p>The Xplained Pro MCU series evaluation kits include an on-board Embedded Debugger, eliminating the need for external tools to program or debug the ATSAME54P20A. The kits offers additional peripherals to extend the features of the board and ease the development of custom designs.</p>

<p>Note: Not all peripherals are supported by CircuitPython.  The Ethernet, CAN, and Q-Touch button are not supported by CircuitPython at this time.  Only 16MB (128MiB) of the QSPI flash is accessible via the CIRCUITPY drive.</p>

<p>CircuitPython requires that the board be flashed with the UF2 bootloader.  This can be done using the second USB connector, which provides a debug interface.  After this has been done once, CircuitPython can be installed and updated in the usual way using the UF2 bootloader, or by using the debug USB connector.</p>

<ul>
  <li>ATSAME54P20A microcontroller</li>
  <li>Embedded Debugger</li>
  <li>Digital I/O - Two mechanical buttons (user and reset button). One Atmel QTouch button. One yellow user LED. Three Xplained Pro extension headers.</li>
  <li>256Mb QSPI Flash</li>
  <li>ATECC508 CryptoAuthentication™ device</li>
  <li>AT24MAC402 serial EEPROM with EUI-48™ MAC address</li>
  <li>Ethernet - RJ45 connector with built-in magnetics, KSZ8091RNA PHY, 10Base-T/100Base-TX IEEE 802.3 compliant Ethernet tranceiver</li>
  <li>SD/SDIO card connector</li>
  <li>Parallell Capture Controller header (ArduCAM compatible)</li>
  <li>ATA6561 CAN transceiver</li>
  <li>Backup SuperCapacitor</li>
  <li>32.768kHz &amp; 12MHz crystal</li>
  <li>Debug connectors - 10-pin Cortex Debug Connector with SWD, 20-pin Cortex Debug + ETM Connector with four bit trace.</li>
  <li>Supported with application examples in Atmel START</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.microchipdirect.com/product/search/all/ATSAME54-XPRO">Microchip</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/same54_xplained.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 28 Jun 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/same54_xplained/</guid>
  </item><item>
    <title>Seeeduino Wio Terminal</title>
    <link>https://circuitpython.org/board/seeeduino_wio_terminal/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/seeeduino_wio_terminal.jpg 300w,
               /assets/images/boards/large/seeeduino_wio_terminal.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/seeeduino_wio_terminal.jpg" alt="Image of Board">

<p>By SEEED</p> <p>Instead of being a single embedded functional module, <strong>Wio Terminal</strong> is more of a complete system equipped with Screen + Development Board + Input/Output Interface + Enclosure. Because it uses the SAMD51, it is compatible with Arduino and CircuitPython - using the same Arduino &amp; CircuitPython core we have developed here at Adafruit!</p>

<p><strong>Wio Terminal</strong> is an <strong>ATSAMD51-based</strong> microcontroller with wireless connectivity supported by <strong>Realtek RTL8720DN</strong>. Its CPU speed runs at <strong>120MHz (boost up to 200MHz)</strong>. Realtek RTL8720DN chip supports both Bluetooth and Wi-Fi providing the backbone for IoT projects. The Wio Terminal itself is equipped with a <strong>2.4” LCD Screen, onboard accelerometer (LIS3DHTR), microphone, buzzer, microSD card slot, light sensor, and infrared emitter (IR 940nm)</strong>. On top of that, it also has two x JST PH 4-pin STEMMA / Grove ports for Grove Ecosystem and 40-pin compatible GPIO for more Raspberry Pi add-ons.</p>

<p><strong>Highly Integrated Design</strong></p>
<ul>
  <li>MCU, LCD, WIFI, BT, IMU, Microphone, Buzzer, microSD Card, Configurable Buttons, Light Sensor, 5-Way Switch, Infrared Emitter (IR 940nm), Crypto-authentication Ready</li>
  <li>Well-designed enclosure with built-in magnets and two mounting holes, allowing you to set up your IoT project without hassle</li>
</ul>

<p><strong>Powerful MCU - Microchip ATSAMD51P19</strong></p>
<ul>
  <li>ARM Cortex-M4F core running at <strong>120MHz</strong> using Adafruit core support for Arduino and CircuitPython</li>
  <li><strong>4 MB</strong> External Flash, <strong>192 KB</strong> RAM</li>
  <li>Comprehensive Protocol Support</li>
  <li>SPI, I2C, I2S, ADC, DAC, PWM, UART(Serial)</li>
</ul>

<p><strong>Reliable Wireless Connectivity</strong></p>
<ul>
  <li>Powered by <strong>Realtek RTL8720DN</strong></li>
  <li>Dual Band 2.4Ghz / 5Ghz Wi-Fi (802.11 a/b/g/n)</li>
  <li>BLE / BLE 5.0</li>
</ul>

<p><strong>USB OTG Support</strong></p>
<ul>
  <li>Accessible Devices (as USB-Host): read data or signals from a mouse, keyboard, MIDI devices, Xbox/PS gaming controllers, 3D printers</li>
  <li>Simulated Devices (as USB-Client): emulate a mouse, keyboard or MIDI devices to Host PC</li>
  <li>When using USB Host/Client function, you can use the 40-pin on the back of Wio Terminal for power supply. Check <a href="https://www.seeedstudio.com/blog/2020/05/19/community-project-collection-how-to-input-data-from-a-keyboard-to-wio-terminal-using-the-usb-host-function-and-tips-about-how-to-use-the-40-pin-header-for-power-supply-and-usb-serial/">here</a> for detailed instructions.</li>
</ul>

<p><strong>External Sensor Ports</strong></p>
<ul>
  <li>Two onboard multi-functional Grove ports can be used for Digital, Analog, I2C, and PWM</li>
  <li>To connect STEMMA QT sensors with Wio Terminal, please use a <a href="https://www.adafruit.com/?q=jst%20ph%204-pin">JST PH 4-pin STEMMA / Grove cable</a>.</li>
</ul>

<p><strong>Raspberry Pi 40-pin Compatible</strong></p>
<ul>
  <li>Can be mounted to a Raspberry Pi as a slave device</li>
  <li>Raspberry Pi’s HAT can be used with an adapter cable</li>
</ul>

<p><strong>Software Support</strong></p>
<ul>
  <li>Arduino based on Adafruit SAMD51 core</li>
  <li>Adafruit CircuitPython (How to <a href="https://wiki.seeedstudio.com/Wio-Terminal-CircuitPython/">run CircuitPython on Wio Terminal</a>?)</li>
  <li><a href="http://wiki.seeedstudio.com/Wio-Terminal-ArduPy/">ArduPy</a></li>
  <li>AT Firmware</li>
  <li>Visual Studio Code</li>
</ul>

<p><strong>NOTE:</strong> The RTL8720DN isn’t supported from CircuitPython. Therefore, Wifi and Bluetooth will not work.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4707">Adafruit</a></li>
  <li><a href="https://www.seeedstudio.com/Wio-Terminal-p-4509.html">Seeed’s Wio Terminal</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/seeeduino_wio_terminal.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 03 Jul 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/seeeduino_wio_terminal/</guid>
  </item><item>
    <title>Seeeduino XIAO</title>
    <link>https://circuitpython.org/board/seeeduino_xiao/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/seeeduino_xiao.jpg 300w,
               /assets/images/boards/large/seeeduino_xiao.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/seeeduino_xiao.jpg" alt="Image of Board">

<p>By SEEED</p> <h1 id="seeduino-xiao">Seeduino XIAO:</h1>
<p>SEEED Studio’s Seeeduino XIAO is a minimal, low-cost board that uses the Atmel ATSAMD21G18, a powerful 32-bit ARM Cortex®-M0+ processor running at 48MHz with 256KB Flash and 32KB SRAM.  The board is 20 x 17.5mm in size which is perfect for wearable devices and small projects. It has multiple interfaces including DAC output, SWD Bonding pad interface, I2C, UART and SPI interfaces. It’s compatible with both Arduino IDE and CircuitPython and uses a USB-C connector.</p>

<p>Specifications:</p>
<ul>
  <li>CPU: ARM Cortex-M0+ CPU (SAMD21G18) running at up to 48MHz</li>
  <li>Flash Memory: 256KB</li>
  <li>SRAM: 32KB</li>
  <li>Digital I/O pins: 11</li>
  <li>Analog I/O pins: 11</li>
  <li>I2C interfaces: 1</li>
  <li>SPI interfaces: 1</li>
  <li>UART interfaces: 1</li>
  <li>USB Type-C connector for transferring code and power</li>
  <li>Power requirements: 3.3V/5V DC</li>
  <li>Dimensions  20 × 17.5 × 3.5 mm</li>
</ul>

<p>Note: This microcontroller runs at 3.3V logic. Using a 5V device may damage the chip or device.</p>

<p>For power supply pins: The built-in DC-DC converter circuit is able to change 5V voltage into 3.3V, which allows you to power the device with a 5V supply via the VIN pin or 5V pin.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.seeedstudio.com/Seeeduino-XIAO-Arduino-Microcontroller-SAMD21-Cortex-M0+-p-4426.html">Seeed</a></li>
  <li><a href="https://www.digikey.com/en/product-highlight/s/seeed/seeeduino-xiao-arduino-microcontroller-samd21-cortex-m0">Digi-Key</a></li>
  <li><a href="https://www.mouser.com/ProductDetail/Seeed-Studio/102010328?qs=GBLSl2AkirtQWO8CTzEK9g%3D%3D">Mouser</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/seeeduino_xiao.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 17 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/seeeduino_xiao/</guid>
  </item><item>
    <title>Serpente</title>
    <link>https://circuitpython.org/board/serpente/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/serpente.jpg 300w,
               /assets/images/boards/large/serpente.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/serpente.jpg" alt="Image of Board">

<p>By arturo182</p> <p>There are two Serpente boards, they are both virtually the same, except for the USB connector. The standard Serpente board contains a USB Type-C connector, and the Serpente Plug uses the board itself as a Type-A USB plug.</p>

<p>If you are familiar with the Digispark boards, you may notice some similarities. This fact is of course not incidental, the Serpente boards are inspired by the Digispark, both in form-factor as well as use-cases. The Serpente boards are meant to be used as quick and dirty, yet flexible, prototyping tools.</p>

<h2 id="technical-details">Technical details</h2>

<p>Here are some of the technical details regarding the boards:</p>

<ul>
  <li>ATSAMD21E18A 32-bit Cortex-M0+ running at 48MHz</li>
  <li>256KB flash and 32KB RAM</li>
  <li>4MB Flash for storing files and CircuitPython code</li>
  <li>6 highly customizable GPIOs</li>
  <li>250mA LDO</li>
  <li>3.3V logic and power</li>
  <li>Powered either from USB or external source</li>
  <li>User-controlled RGB LED</li>
  <li>
    <p>Mounting holes on the Serpente Type-C board</p>
  </li>
  <li><a href="https://serpente.solder.party/">Documentation</a></li>
  <li><a href="https://hackaday.io/project/167192-serpente">Hackaday.io Project</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.tindie.com/products/arturo182/serpente-a-tiny-circuitpython-prototyping-board/">Tindie</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/serpente.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 17 Sep 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/serpente/</guid>
  </item><item>
    <title>shIRtty Board</title>
    <link>https://circuitpython.org/board/shirtty/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/shirtty.jpg 300w,
               /assets/images/boards/large/shirtty.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/shirtty.jpg" alt="Image of Board">

<p>By Sarfata</p> <p>A CircuitPython compatible, SAMD21 shitty addon with IR transmit/receive and RGB LED.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/sarfata/shirtty-addon">Github</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/shirtty.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 10 Dec 2019 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/shirtty/</guid>
  </item><item>
    <title>Simmel Board</title>
    <link>https://circuitpython.org/board/simmel/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/simmel.jpg 300w,
               /assets/images/boards/large/simmel.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/simmel.jpg" alt="Image of Board">

<p>By Simmel Project</p> <p>Simmel is a platform that enables COVID-19 contact tracing while preserving user privacy. It is a wearable hardware beacon and scanner which can broadcast and record randomized user IDs. Contacts are stored within the wearable device, so you retain full control of your trace history until you choose to share it.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/simmel-project/frontpage">Github</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/simmel.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 28 Apr 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/simmel/</guid>
  </item><item>
    <title>Snekboard</title>
    <link>https://circuitpython.org/board/snekboard/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/snekboard.jpg 300w,
               /assets/images/boards/large/snekboard.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/snekboard.jpg" alt="Image of Board">

<p>By keithp.com</p> <p>Snekboard is designed to hook up to Lego Power Functions motors and
switches, allowing you to build robots out of Lego and control them
with CircuitPython or the simpler
<a href="https://keithp.com/snek">snek programming language</a>.</p>

<p>Snekboard is 48mm × 48mm, which is the same size as 6 x 6 Lego studs
allowing you to build a box out of Lego to hold it attached to your
Lego design. It uses a single cell lithium polymer battery that fits
under the board and charges over USB while snekboard is being
programmed from the host.</p>

<h2 id="learn-more">Learn More</h2>

<ul>
  <li><a href="https://keithp.com/snek/snekboard">keithp.com</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/snekboard.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 30 Jul 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/snekboard/</guid>
  </item><item>
    <title>LumiDrive</title>
    <link>https://circuitpython.org/board/sparkfun_lumidrive/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/sparkfun_lumidrive_01.jpg 300w,
               /assets/images/boards/large/sparkfun_lumidrive_01.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/sparkfun_lumidrive_01.jpg" alt="Image of Board">

<p>By SparkFun</p> <p>The LumiDrive LED Driver is SparkFun’s foray into all things Python on micro-controllers. With the SparkFun LumiDrive you will be able to control and personalize a whole strand of APA102s directly from the board itself. We’ve broken out a number of analog and digital pins from the on board SAMD21G-AU microcontroller to incorporate your own external buttons, switches, and other interfaces to interact with your addressable LED strip.</p>

<p>It feels like Arduino, but without the need to upload and compile code. Because the LumiDrive opens up like a USB drive on your computer when you plug it in and the code you write lives directly inside the drive it feels very much like an Arduino-device. The fact that you don’t need to upload and compile code makes it a great transitionary LED driver from your traditional Arduino!</p>

<p>The SparkFun LumiDrive has been equipped with a USB-C connector which is capable enough to supply up to 1.5 Amps from a 3.1 USB port, a LiPo connector and charge circuit for portable power, as well as two poke-home connectors to allow you to plug in wires without the need for solder.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/14779">SparkFun</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/sparkfun_lumidrive.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_lumidrive/</guid>
  </item><item>
    <title>Pro nRF52840 Mini</title>
    <link>https://circuitpython.org/board/sparkfun_nrf52840_mini/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/sparkfun_nrf52840_mini-01.jpg 300w,
               /assets/images/boards/large/sparkfun_nrf52840_mini-01.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/sparkfun_nrf52840_mini-01.jpg" alt="Image of Board">

<p>By SparkFun</p> <p>The SparkFun Pro nRF52840 Mini is a breakout and development board for Nordic Semiconductor’s nRF52840 – a powerful combination of ARM Cortex-M4 CPU and 2.4GHz Bluetooth radio. With the nRF52840 at the heart of your project, you’ll be presented with a seemingly endless list of project-possibilities in an incredibly small package.</p>

<p>SparkFun’s mini development board for the nRF52840 breaks out most of the critical I/O pins including GPIO and those needed for power while maintaining a small footprint that nearly matches that of the Arduino Pro Mini (except those covered by the Qwiic Connector). It features a USB interface (using the nRF52840’s native USB support), which can be used to program, power, and communicate with the chip making it able to be used for any purpose (UART, I2C, SPI) that those of the Arduino Pro Mini could. The Pro nRF52840 Mini features a Raytac MDBT50Q-P1M module. This module connects the nRF52840 to a trace antenna, fits the IC into an FCC-approved footprint, and also includes a lot of the decoupling and timing mechanisms that would otherwise be required for a bare nRF52840 design. Also included onboard is a LiPo battery charger, a Qwiic connector, an on/off switch, a reset switch, and a user LED/button.</p>

<p>The board comes pre-programmed with a USB bootloader. You can develop programs for the nRF52840’s Cortex-M4 using either Arduino, CircuitPython, or C (using Nordic’s nRF5 SDK), and load that compiled code using a USB serial or mass-storage interface.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/15025">SparkFun</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/sparkfun_nrf52840_mini.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_nrf52840_mini/</guid>
  </item><item>
    <title>SparkFun Qwiic Micro without Flash</title>
    <link>https://circuitpython.org/board/sparkfun_qwiic_micro_no_flash/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/sparkfun_qwiic_micro.jpg 300w,
               /assets/images/boards/large/sparkfun_qwiic_micro.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/sparkfun_qwiic_micro.jpg" alt="Image of Board">

<p>By SparkFun</p> <p>The <strong>SparkFun Qwiic Micro</strong> is an <em>1 x 1 inch</em> microcontroller made for the <a href="https://sparkfun.com/qwiic">Qwiic Eco-system</a>. 
It’s SparkFun’s smallest microcontroller to date that’s made for integrating into small projects.
Onboard is the Atmel ATSAMD21E18 32-bit ARM Cortex-M0+ processor with 256KB flash, 32KB SRAM, and an operating speed of up to 48MHz.</p>

<ul>
  <li><strong>13 GPIO Pins</strong> - The SparkFun Qwiic Micro <em>still</em> has 13 GPIO pins, 5 of which are analog.</li>
  <li><strong>UF2 Bootloader</strong> - The SparkFun Qwiic Micro comes with the <a href="https://learn.sparkfun.com/tutorials/sparkfun-qwiic-micro-samd21e-hookup-guide/all#uf2-bootloader-and-drivers">UF2 Bootloader</a> 
which does not require the board to have drivers installed on modern operating systems. It also allows for easy drag and drop programming.</li>
  <li><strong>SWD Programming Header</strong> - On board is a four pin header for reprogramming the microcontroller for advanced users who want to modify 
the chip to their liking.</li>
  <li><strong>Optional Circuitry</strong> - There are pads for an extra flash memory chip in an SOIC 8-Pin Package. Check out SparkFun’s site for the specific chip
used for the circuity python build that includes this chip!</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/15423">SparkFun</a></li>
</ul>

<h2 id="contribute">Contribute</h2>
<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/sparkfun_qwiic_micro_no_flash.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 04 Nov 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_qwiic_micro_no_flash/</guid>
  </item><item>
    <title>SparkFun Qwiic Micro with Flash</title>
    <link>https://circuitpython.org/board/sparkfun_qwiic_micro_with_flash/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/sparkfun_qwiic_micro.jpg 300w,
               /assets/images/boards/large/sparkfun_qwiic_micro.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/sparkfun_qwiic_micro.jpg" alt="Image of Board">

<p>By SparkFun</p> <p>The <strong>SparkFun Qwiic Micro</strong> is an <em>1 x 1 inch</em> microcontroller made for the <a href="https://sparkfun.com/qwiic">Qwiic Eco-system</a>. 
It’s SparkFun’s smallest microcontroller to date that’s made for integrating into small projects.
Onboard is the Atmel ATSAMD21E18 32-bit ARM Cortex-M0+ processor with 256KB flash, 32KB SRAM, and an operating speed of up to 48MHz.</p>

<ul>
  <li><strong>13 GPIO Pins</strong> - The SparkFun Qwiic Micro <em>still</em> has 13 GPIO pins, 5 of which are analog.</li>
  <li><strong>UF2 Bootloader</strong> - The SparkFun Qwiic Micro comes with the <a href="https://learn.sparkfun.com/tutorials/sparkfun-qwiic-micro-samd21e-hookup-guide/all#uf2-bootloader-and-drivers">UF2 Bootloader</a> 
which does not require the board to have drivers installed on modern operating systems. It also allows for easy drag and drop programming.</li>
  <li><strong>SWD Programming Header</strong> - On board is a four pin header for reprogramming the microcontroller for advanced users who want to modify 
the chip to their liking.</li>
  <li><strong>Optional Circuitry</strong> - There are pads for an extra flash memory chip in an SOIC 8-Pin Package. Check out SparkFun’s site for the specific chip
used for the circuity python build that includes this chip!</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/15423">SparkFun</a></li>
</ul>

<h2 id="contribute">Contribute</h2>
<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/sparkfun_qwiic_micro_with_flash.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 04 Nov 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_qwiic_micro_with_flash/</guid>
  </item><item>
    <title>RedBoard Turbo</title>
    <link>https://circuitpython.org/board/sparkfun_redboard_turbo/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/sparkfun_redboard_turbo.jpg 300w,
               /assets/images/boards/large/sparkfun_redboard_turbo.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/sparkfun_redboard_turbo.jpg" alt="Image of Board">

<p>By SparkFun</p> <p>The RedBoard Turbo uses the ATSAMD21G18, which is an ARM Cortex M0+, 32-bit microcontroller that can run at up to 48MHz. With 4MB of external flash memory and a UF2 (USB Flashing Format) bootloader, the RedBoard Turbo provides an economical and easy to use development platform.</p>

<p>The RedBoard Turbo can be flashed over the Mass Storage Class (MSC) just like a removable flash drive, thanks the the UF2 bootloader. With this bootloader, the RedBoard Turbo shows up on your computer as a USB storage device without having to install drivers and can be used with CircuitPython.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/14812">SparkFun</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/sparkfun_redboard_turbo.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_redboard_turbo/</guid>
  </item><item>
    <title>SAMD21 Dev</title>
    <link>https://circuitpython.org/board/sparkfun_samd21_dev/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/sparkfun_samd21_dev.jpg 300w,
               /assets/images/boards/large/sparkfun_samd21_dev.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/sparkfun_samd21_dev.jpg" alt="Image of Board">

<p>By SparkFun</p> <p>The SparkFun SAMD21 Dev Breakout is an Arduino-sized breakout for the Atmel ATSAMD21G18, a 32-bit ARM Cortex-M0+ processor with 256KB flash, 32KB SRAM, and an operating speed of up to 48MHz.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/13672">SparkFun</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/sparkfun_samd21_dev.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_samd21_dev/</guid>
  </item><item>
    <title>SAMD21 Mini</title>
    <link>https://circuitpython.org/board/sparkfun_samd21_mini/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/sparkfun_samd21_mini.jpg 300w,
               /assets/images/boards/large/sparkfun_samd21_mini.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/sparkfun_samd21_mini.jpg" alt="Image of Board">

<p>By SparkFun</p> <p>The SAMD21 Mini Breakout is a Pro Mini-sized breakout for the Atmel ATSAMD21G18, a 32-bit ARM Cortex-M0+ processor with 256KB flash, 32KB SRAM, and an operating speed of up to 48MHz.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/13664">SparkFun</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/sparkfun_samd21_mini.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_samd21_mini/</guid>
  </item><item>
    <title>SAMD51 Thing Plus</title>
    <link>https://circuitpython.org/board/sparkfun_samd51_thing_plus/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/sparkfun_samd51_thing_plus.jpg 300w,
               /assets/images/boards/large/sparkfun_samd51_thing_plus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/sparkfun_samd51_thing_plus.jpg" alt="Image of Board">

<p>By SparkFun</p> <p>Is it power you seek? With a 32-bit ARM Cortex-M4F MCU, the SparkFun SAMD51 Thing Plus is one of our most powerful microcontroller boards yet! The SAMD51 Thing Plus provides you with an economical and easy to use development platform if you’re needing more power with minimal working space. This Thing even comes flashed with the same convenient UF2 bootloader as the RedBoard Turbo. To make the Thing Plus even easier to use, we’ve moved a few pins around to make the board Feather compatible and it utilizes our handy Qwiic Connect System which means no soldering or shields are required to connect it to the rest of your system!</p>

<p>The ATSAMD51J20 utilizes a 32-bit ARM Cortex-M4 processor with Floating Point Unit (FPU), running up to 120MHz, up to 1MB of flash memory, up to 256KB of SRAM with ECC, up to 6 SERCOM interfaces, and other features. In addition to the USB interface and Qwiic connection, a The SAMD51 Thing Plus provides a 600mA 3.3V regulator and LiPo charger.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.sparkfun.com/products/14713">SparkFun</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/sparkfun_samd51_thing_plus.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 26 Feb 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/sparkfun_samd51_thing_plus/</guid>
  </item><item>
    <title>Spresense</title>
    <link>https://circuitpython.org/board/spresense/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/spresense.jpg 300w,
               /assets/images/boards/large/spresense.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/spresense.jpg" alt="Image of Board">

<p>By Sony</p> <p>The Spresense project consists of a Arduino compatible board with Sony’s high performance CXD5602 micro-controller. The CXD5602 has built-in GPS and high-resolution audio capabilities.</p>

<p>The main board uses a processor developed by Sony for IoT and sensing applications. The main board can be operated alone or with the extension board.</p>

<p>The Spresense uses Sony’s new chipset on the main board: * The CXD5602 System on Chip (SoC) multi core processor with GNSS * The CXD5247 power management and audio analog interface chip</p>

<p>The Spresense extension board is a board which extends the interfaces compared to the Spresense main board. The Spresense main board and the Spresense extension board are connected by a Board-to-Board (B-2-B) connector. The Spresense extension board has Arduino Uno pin compatible shape and pin socket locations. However, there are some differences compared to the Arduino Uno.</p>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://developer.sony.com/develop/spresense/">Sony</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/spresense.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 22 Oct 2019 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/spresense/</guid>
  </item><item>
    <title>STM32F411CE Black Pill</title>
    <link>https://circuitpython.org/board/stm32f411ce_blackpill/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/stm32f411ce_blackpill.jpg 300w,
               /assets/images/boards/large/stm32f411ce_blackpill.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/stm32f411ce_blackpill.jpg" alt="Image of Board">

<p>By WeAct Studio</p> <p>In the F401 series, the chip is the cheapest, even cheaper than some F1, and crushed F1 on the main frequency, and has a floating-point arithmetic module, the IO port contains all the basic functions. Therefore, it is possible to provide a learning platform with a very high cost performance for beginners. In practical applications, it is not because the computing power is insufficient, and the IO port is incomplete and hinders development.</p>

<h2 id="product-details">Product details</h2>
<ol>
  <li>STM32F411CEU6 100Mhz, 128KB RAM, 512KB ROM</li>
  <li>25MHZ high speed crystal oscillator &amp; 32.768khz 6PF low speed crystal oscillator</li>
  <li>Gold sinking process is adopted, lead-free process is used, and the needle arrangement is gold-plated, which is more environmentally friendly</li>
  <li>Flash pads are reserved to provide USBDisk&amp;&amp;FATFFS routines</li>
  <li>Support for MicroPython programming with available MicroPython firmware</li>
  <li>Support for Arduino programming development</li>
  <li>Support C language programming development</li>
  <li>Version V3.0, there are 3 buttons, reset key, BOOT0 key, user key</li>
  <li>CMSIS-DAP firmware is available</li>
  <li>The use of the latest original ST chip, high quality crystal vibration</li>
</ol>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/WeActTC/MiniF4-STM32F4x1">Github Docs</a></li>
  <li><a href="https://www.aliexpress.com/item/1005001456186625.html">Aliexpress</a></li>
  <li><a href="https://github.com/stm32duino/Arduino_Core_STM32">stm32duino - Offical Arduino Support</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/stm32f411ce_blackpill.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 19 Dec 2019 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/stm32f411ce_blackpill/</guid>
  </item><item>
    <title>Discovery kit for STM32F411</title>
    <link>https://circuitpython.org/board/stm32f411ve_discovery/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/stm32f411.jpg 300w,
               /assets/images/boards/large/stm32f411.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/stm32f411.jpg" alt="Image of Board">

<p>By ST</p> <p>The Discovery kit for STM32F411 line helps you to discover the entry level microcontrollers of the STM32 F4 series and to develop your applications easily. It offers everything required for beginners and experienced users to get started quickly.</p>

<p>Based on the STM32F411VET6, it includes an ST-LINK/V2 embedded debug tool, a gyroscope, an e-compass and digital microphone ST MEMs, an audio DAC with an integrated class D speaker driver, an OTG micro-AB connector, LEDs and push-buttons.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.st.com/en/evaluation-tools/32f411ediscovery.html">ST</a></li>
  <li><a href="http://www.anglia-live.com/productinfo.aspx?kw=stm32f411edisco&amp;catref=1202869001_discovery-kit-f-stm32-f4-mcus">Anglia Live</a></li>
  <li><a href="https://nz.element14.com/stmicroelectronics/stm32f411e-disco/dev-board-stm32-discovery/dp/2456732?ost=STM32F411E-DISCO&amp;CMP=GRHS-1000962&amp;ddkey=https%3ASearch">element14</a></li>
  <li><a href="https://www.mouser.com/ProductDetail/STMicroelectronics/STM32F411E-DISCO?qs=%2Fha2pyFadujxcn39gZUbxdSs8n9LApYvKgpZqT2TnktXGF15xh8T5A%3D%3D">Mouser</a></li>
  <li><a href="https://www.newark.com/webapp/wcs/stores/servlet/Search?storeId=10194&amp;catalogId=15003&amp;langId=-1&amp;mf=100050&amp;st=STM32F411E-DISCO&amp;showResults=true&amp;CMP=AFC-STMICRO">Newark</a></li>
  <li><a href="https://nz.rs-online.com/web/p/processor-microcontroller-development-kits/8463503/?relevancy-data=636F3D3126696E3D4931384E53656172636847656E65726963266C753D656E266D6D3D6D61746368616C6C7061727469616C26706D3D5E5B5C707B4C7D5C707B4E647D2D2C2F255C2E5D2B2426706F3D31313326736E3D592673723D2673743D4B4559574F52445F53494E474C455F414C5048415F4E554D455249432673633D592677633D4E4F4E45267573743D53544D333246343131452D444953434F267374613D53544D333246343131452D444953434F26&amp;searchHistory=%7B%22enabled%22%3Afalse%7D">RS Components</a></li>
  <li><a href="https://www.electronshik.ru/item/ST/STM32F411E-DISCO">Electronshik(site is in Russian)</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/stm32f411ve_discovery.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 16 Sep 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/stm32f411ve_discovery/</guid>
  </item><item>
    <title>STM32F412 Discovery kit</title>
    <link>https://circuitpython.org/board/stm32f412zg_discovery/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/stm32f412.jpg 300w,
               /assets/images/boards/large/stm32f412.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/stm32f412.jpg" alt="Image of Board">

<p>By ST</p> <p>The STM32F412 Discovery kit (32F412GDISCOVERY) allows users to easily develop applications with the STM32F412 high performance MCUs with ARM® Cortex®-M4 core.</p>

<p>The Discovery kit combines STM32F412 features with 1.54 inch 240x240 pixel TFT color LCD with touchscreen, LEDs, Wakeup button, I2S Audio Codec, MEMS microphones, USB OTG FS, Quad-SPI NOR Flash memory, MicroSD™ card connector.</p>

<p>An embedded ST-LINK/V2-1 debugger/programmer is included; specialized add-on boards can be connected thanks to the Arduino™ Uno or to the expansion connectors.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.st.com/en/evaluation-tools/32f412gdiscovery.html">ST</a></li>
  <li><a href="https://www.digikey.com/products/en?WT.z_cid=sp_497_0928_buynow&amp;Enterprise=44&amp;lang=en&amp;Vendor=497&amp;mpart=STM32F412G-DISCO">Digi-Key</a></li>
  <li><a href="https://nz.element14.com/stmicroelectronics/stm32f412g-disco/dev-board-arm-cortex-m4-mcu/dp/2664593?ost=STM32F412G-DISCO&amp;CMP=GRHS-1000962&amp;ddkey=https%3ASearch">element14</a></li>
  <li><a href="https://www.mouser.com/ProductDetail/STMicroelectronics/STM32F412G-DISCO?qs=%2Fha2pyFadujxcn39gZUbxVHiujvGbqjGwP%2F30QlZCd4Sdl12itu%2FNA%3D%3D">Mouser</a></li>
  <li><a href="https://nz.rs-online.com/web/p/processor-microcontroller-development-kits/1231065/?relevancy-data=636F3D3126696E3D4931384E53656172636847656E65726963266C753D656E266D6D3D6D61746368616C6C7061727469616C26706D3D5E5B5C707B4C7D5C707B4E647D2D2C2F255C2E5D2B2426706F3D31313326736E3D592673723D2673743D4B4559574F52445F53494E474C455F414C5048415F4E554D455249432673633D592677633D4E4F4E45267573743D53544D333246343132472D444953434F267374613D53544D333246343132472D444953434F26&amp;searchHistory=%7B%22enabled%22%3Atrue%7D">RS Components</a></li>
  <li><a href="https://www.electronshik.ru/item/ST/STM32F412G-DISCO">Electronshik(site is in Russian)</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/stm32f412zg_discovery.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 16 Sep 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/stm32f412zg_discovery/</guid>
  </item><item>
    <title>STM32F407 Discovery kit</title>
    <link>https://circuitpython.org/board/stm32f4_discovery/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/stm32f407.jpg 300w,
               /assets/images/boards/large/stm32f407.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/stm32f407.jpg" alt="Image of Board">

<p>By ST</p> <p>The STM32F4DISCOVERY kit leverages the capabilities of the STM32F407 high performance microcontrollers, to allow users to easily develop applications featuring audio.</p>

<p>It includes an ST-LINK embedded debug tool, one ST-MEMS digital accelerometer, a digital microphone, one audio DAC with integrated class D speaker driver, LEDs, push-buttons and an USB OTG micro-AB connector.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.st.com/en/evaluation-tools/stm32f4discovery.html">ST</a></li>
  <li><a href="https://www.digikey.com/products/en?WT.z_cid=sp_497_0928_buynow&amp;Enterprise=44&amp;lang=en&amp;Vendor=497&amp;mpart=STM32F407G-DISC1">Digi-Key</a></li>
  <li><a href="https://nz.element14.com/stmicroelectronics/stm32f407g-disc1/dev-board-foundation-line-mcu/dp/2506840?ost=STM32F407G-DISC1&amp;CMP=GRHS-1000962&amp;ddkey=https%3ASearch">element14</a></li>
  <li><a href="https://www.futureelectronics.com/search/?selectedTab=products&amp;q=STM32F407G-DISC1%3AmanufacturerName%3ASTMicroelectronics">Future Electronics</a></li>
  <li><a href="https://www.mouser.com/ProductDetail/STMicroelectronics/STM32F407G-DISC1?qs=sGAEpiMZZMu3sxpa5v1qrvO%2FQjIESWxJTP5oj%252Bcqf3k%3D">Mouser</a></li>
  <li><a href="https://www.newark.com/stmicroelectronics/stm32f407g-disc1/dev-board-foundation-line-mcu/dp/72Y1168?st=STM32F407G-DISC1">Newark</a></li>
  <li><a href="https://nz.rs-online.com/web/p/processor-microcontroller-development-kits/9107951/?relevancy-data=636F3D3126696E3D4931384E53656172636847656E65726963266C753D656E266D6D3D6D61746368616C6C7061727469616C26706D3D5E5B5C707B4C7D5C707B4E647D2D2C2F255C2E5D2B2426706F3D31313326736E3D592673723D2673743D4B4559574F52445F53494E474C455F414C5048415F4E554D455249432673633D592677633D4E4F4E45267573743D53544D333246343037472D4449534331267374613D53544D333246343037472D444953433126&amp;searchHistory=%7B%22enabled%22%3Afalse%7D">RS Components</a></li>
  <li><a href="https://www.electronshik.ru/item/ST/STM32F407G-DISC1">Electronshik(website is in Russian)</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/stm32f4_discovery.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 18 Sep 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/stm32f4_discovery/</guid>
  </item><item>
    <title>STM32F746 Discovery kit</title>
    <link>https://circuitpython.org/board/stm32f746g_discovery/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/stm32f746g_discovery.jpg 300w,
               /assets/images/boards/large/stm32f746g_discovery.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/stm32f746g_discovery.jpg" alt="Image of Board">

<p>By ST</p> <p>The STM32F746 Discovery kit from ST.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.st.com/content/st_com/en/products/evaluation-tools/product-evaluation-tools/mcu-mpu-eval-tools/stm32-mcu-mpu-eval-tools/stm32-discovery-kits/32f746gdiscovery.html">ST</a></li>
  <li><a href="https://www.digikey.com/product-detail/en/stmicroelectronics/STM32F746G-DISCO/497-15680-5-ND/5267791">Digi-Key</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/stm32f746g_discovery.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 26 Apr 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/stm32f746g_discovery/</guid>
  </item><item>
    <title>StringCar M0 Express</title>
    <link>https://circuitpython.org/board/stringcar_m0_express/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/stringcar_m0_express.jpg 300w,
               /assets/images/boards/large/stringcar_m0_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/stringcar_m0_express.jpg" alt="Image of Board">

<p>By Cedar Grove Studios</p> <p>The Cedar Grove StringCar M0 Express is an ATSAMD21-based CircuitPython compatible board used to control a simple string car racer robot. The board is architecturally similar to the Adafruit Trinket M0 and ItsyBitsy M0 Express microcontroller boards with the addition of battery management and a DC motor controller. This board features JST connectors for the racer’s battery, motor output, and sensor input. LiPo battery management charge rate is 500mA. For sensor experimentation, a 3.3-volt Stemma-QT connection is available on-board. The micro-USB connector used for REPL operation, operational status data output, and battery charging. On-board flash memory size is 2MB.</p>

<p>The StringCar M0 Express board will not be sold. The GitHub repository will contain all design files and links for the BOM and the shared OSH Park project.</p>

<p>The string car racer is a simple one-motor robot that is suspended from a string using a pulley attached to the motor shaft. Its challenge is to race back and forth from one end of a taut string to the other. The fastest car wins. The controller board uses sensor switches to detect the ends of the string, calculate the string length, then control motor speed and braking to avoid string-end collisions.</p>

<p>The objective is to create a string car racer that can autonomously learn about its environment and adjust tradeoffs for speed and battery longevity. CircuitPython is used to easily add and interactively adjust performance features such as motor and battery efficiency, end-of-string collision avoidance, string length calculation, and predictive braking. Also, being able to watch its own battery status means that it’ll always return to the home end of the string when battery capacity begins to wane. Circuit Python also supports libraries that abstract string car functions, simplifying the primary code module to make it easier for novice programmers to get involved in customizing  string car racer operation.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 13 Oct 2019 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/stringcar_m0_express/</guid>
  </item><item>
    <title>Targett ESP32-S2 Module Clip (WROOM)</title>
    <link>https://circuitpython.org/board/targett_module_clip_wroom/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/targett_module_clip_wroom.jpg 300w,
               /assets/images/boards/large/targett_module_clip_wroom.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/targett_module_clip_wroom.jpg" alt="Image of Board">

<p>By Targett</p> <p>This board will allow you to clip in an ESP32-S2 WROOM or WROVER module for programming, prototyping and testing. Slot the module into the pins where it will be held securely while you upload your code.</p>

<p>The Board has two USB micro sockets: The first is connected to a CP2104 USB to UART to upload of your firmware and receive serial messages. The second is directly connected to GPIO19 &amp; 20 that are the onboard USB - &amp; + pins.</p>

<p>The board can be powered from either of the USB sockets, the UART USB has a power switch and the S2 USB will directly power the board. These sockets are separated by diodes so neither can reverse power the other. The S2 USB has bridgeable solder pads so that it can be used to supply USB power if acting as OTG Host.</p>

<p>The CP2104 handles the USB to UART conversion as well as putting the module into “programming mode”.</p>

<p>Where Espressif have enabled programming via the S2 USB and the module can be put in “programming mode” using the IO_0 and Reset buttons.</p>

<p>All GPIO pins are broken out to 2.54mm header pins. Caution should be taken as some pins are used by the WROVER module for PSRAM.</p>

<p>##Purchace</p>

<p>You can purchace the S2-MCB from <a href="https://www.tindie.com/products/targett/esp32-s2-module-protoprogrammer/">Tindie</a></p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 06 Dec 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/targett_module_clip_wroom/</guid>
  </item><item>
    <title>Targett ESP32-S2 Module Clip (WROVER)</title>
    <link>https://circuitpython.org/board/targett_module_clip_wrover/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/targett_module_clip_wrover.jpg 300w,
               /assets/images/boards/large/targett_module_clip_wrover.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/targett_module_clip_wrover.jpg" alt="Image of Board">

<p>By Targett</p> <p>This board will allow you to clip in an ESP32-S2 WROOM or WROVER module for programming, prototyping and testing. Slot the module into the pins where it will be held securely while you upload your code.</p>

<p>The Board has two USB micro sockets: The first is connected to a CP2104 USB to UART to upload of your firmware and receive serial messages. The second is directly connected to GPIO19 &amp; 20 that are the onboard USB - &amp; + pins.</p>

<p>The board can be powered from either of the USB sockets, the UART USB has a power switch and the S2 USB will directly power the board. These sockets are separated by diodes so neither can reverse power the other. The S2 USB has bridgeable solder pads so that it can be used to supply USB power if acting as OTG Host.</p>

<p>The CP2104 handles the USB to UART conversion as well as putting the module into “programming mode”.</p>

<p>Where Espressif have enabled programming via the S2 USB and the module can be put in “programming mode” using the IO_0 and Reset buttons.</p>

<p>All GPIO pins are broken out to 2.54mm header pins. Caution should be taken as some pins are used by the WROVER module for PSRAM.</p>

<p>##Purchace</p>

<p>You can purchace the S2-MCB from <a href="https://www.tindie.com/products/targett/esp32-s2-module-protoprogrammer/">Tindie</a></p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 06 Dec 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/targett_module_clip_wrover/</guid>
  </item><item>
    <title>Teensy 4.0</title>
    <link>https://circuitpython.org/board/teensy40/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/teensy40.jpg 300w,
               /assets/images/boards/large/teensy40.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/teensy40.jpg" alt="Image of Board">

<p>By PJRC</p> <p>Who else could pack a 600 MHz microcontroller into such a Teensy little board? The Teensy 4.0 features an ARM Cortex-M7 processor at 600 MHz, with a NXP iMXRT1062 chip, the fastest microcontroller available today - <a href="https://github.com/PaulStoffregen/CoreMark">ten times faster than the Teensy 3.2</a>! The NXP iMXRT1062 is a ‘cross-over’ processor, which has the functionality of a microcontroller, at the speeds of a microcomputer. It’s perfect for when you need tons of flash, RAM and, to crunch lots of data, or when you need two full speed USB ports. It even has a graphics processor! All this for two sawbucks.</p>

<p>Teensy 4.0 can be programmed using the Arduino IDE with <a href="https://www.pjrc.com/teensy/td_download.html">Teensyduino add-on</a>.</p>

<p><strong>Power Consumption &amp; Management</strong>
When running at 600 MHz, Teensy 4.0 consumes approximately 100 mA current, considerably more than most microcontrollers. To help reduce power, Teensy 4.0 provides support for dynamic clock scaling. Unlike traditional microcontrollers, where changing the clock speed causes wrong baud rates and other issues, Teensy 4.0 hardware and Teensyduino’s software support for Arduino timing functions are designed to allow dynamically speed changes. Serial baud rates, audio streaming sample rates, and Arduino functions like delay() and millis(), and Teensyduino’s extensions like IntervalTimer and elapsedMillis, continue to work properly while the CPU changes speed.</p>

<p>Teensy 4.0 also provides a power shut off feature. By connecting a pushbutton to the On/Off pin, the 3.3V power supply can be completely disabled by holding the button for 5 seconds, and turned back on by a brief button press. If a coin cell is connected to VBAT, Teensy 4.0’s RTC also continues to keep track of date &amp; time while the power is off.</p>

<p>Teensy 4.0 also can also be overclocked, well beyond 600 MHz!</p>

<p><strong>Technical Specifications</strong></p>
<ul>
  <li>ARM Cortex-M7 at 600 MHz</li>
  <li>1024K RAM (512K is tightly coupled)</li>
  <li>2048K Flash (64K reserved for recovery &amp; EEPROM emulation)</li>
  <li>2 USB ports, both 480 MBit/sec</li>
  <li>3 CAN Bus (1 with CAN FD)</li>
  <li>2 I2S Digital Audio</li>
  <li>1 S/PDIF Digital Audio</li>
  <li>1 SDIO (4 bit) native SD</li>
  <li>3 SPI, all with 16 word FIFO</li>
  <li>3 I2C, all with 4 byte FIFO</li>
  <li>7 Serial, all with 4 byte FIFO</li>
  <li>32 general purpose DMA channels</li>
  <li>31 PWM pins</li>
  <li>40 digital pins, all interrrupt capable</li>
  <li>14 analog pins, 2 ADCs on chip</li>
  <li>Cryptographic Acceleration</li>
  <li>Random Number Generator</li>
  <li>RTC for date/time</li>
  <li>Programmable FlexIO</li>
  <li>Pixel Processing Pipeline</li>
  <li>Peripheral cross triggering</li>
  <li>Power On/Off management</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4323">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/teensy40.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Fri, 31 Jan 2020 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/teensy40/</guid>
  </item><item>
    <title>Teensy 4.1</title>
    <link>https://circuitpython.org/board/teensy41/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/teensy41.jpg 300w,
               /assets/images/boards/large/teensy41.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/teensy41.jpg" alt="Image of Board">

<p>By PJRC</p> <p>The <a href="http://www.pjrc.com/teensy/index.html">Teensy</a> 4.1, like the <a href="http://www.adafruit.com/product/4323">4.0</a>, also features an ARM Cortex-M7 processor at 600 MHz, with an NXP iMXRT1062 chip, the fastest microcontroller available today - <a href="https://github.com/PaulStoffregen/CoreMark">ten times faster than the Teensy 3.2</a>! The NXP iMXRT1062 is a ‘cross-over’ processor, which has the functionality of a microcontroller, at the speeds of a microcomputer. It’s perfect for when you need tons of flash, RAM and, to crunch lots of data, or when you need two full-speed USB ports.</p>

<p>Teensy 4.1 comes with <strong>four times larger flash memory than the 4.0</strong>, and two new locations to optionally add more memory. The Teensy 4.1 has the same form factor as the <a href="http://www.adafruit.com/product/3266">Teensy 3.6</a> (2.4” by 0.7”), but provides a <strong>ton more I/O capability</strong>, including an 100MB Ethernet PHY, SD card socket (SDIO connected), and USB host port. Please check out the <a href="https://www.pjrc.com/store/teensy40.html">Teensy 4.0 page for common specifications and features</a>.</p>

<p><strong>Memory</strong></p>

<p>The bottom side of Teensy 4.1 has locations to solder 2 memory chips. The smaller location is meant for a PSRAM SOIC-8 chip. The larger location is intended for QSPI flash memory.</p>

<p><strong>USB Host</strong></p>

<p>Teensy 4.1’s USB Host port allows you to connect USB devices, like keyboards and MIDI musical instruments. A 5 pin header and a USB Host cable are needed to be able to plug in a USB device. <a href="https://www.adafruit.com/?q=usb%20breakout%20cable">You can also use one of these cables to connect to the USB pins</a>.</p>

<p><strong>Power Consumption &amp; Management</strong></p>

<p>When running at 600 MHz, the Teensy 4.1 consumes approximately 100mA current and provides support for dynamic clock scaling. Unlike traditional microcontrollers, where changing the clock speed causes wrong baud rates and other issues, Teensy 4.1 hardware and Teensyduino’s software support for Arduino timing functions are designed to allow dynamically speed changes. Serial baud rates, audio streaming sample rates, and Arduino functions like delay() and millis(), and Teensyduino’s extensions like IntervalTimer and elapsedMillis, continue to work properly while the CPU changes speed. Teensy 4.1 also provides a power shut off feature. By connecting a pushbutton to the On/Off pin, the 3.3V power supply can be completely disabled by holding the button for five seconds, and turned back on by a brief button press. If a coin cell is connected to VBAT, Teensy 4.1’s RTC also continues to keep track of date &amp; time while the power is off. Teensy 4.1 also can also be overclocked, well beyond 600MHz!</p>

<p>The ARM Cortex-M7 brings many powerful CPU features to a true real-time microcontroller platform. The Cortex-M7 is a dual-issue superscaler processor, meaning the M7 can execute two instructions per clock cycle, at 600MHz! Of course, executing two simultaneously depends upon the compiler ordering instructions and registers. Initial benchmarks have shown C++ code compiled by Arduino tends to achieve two instructions about 40% to 50% of the time while performing numerically intensive work using integers and pointers. The Cortex-M7 is the first ARM microcontroller to use branch prediction. On M4, loops and other code which much branch take three clock cycles. With M7, after a loop has executed a few times, the branch prediction removes that overhead, allowing the branch instruction to run in only a single clock cycle.</p>

<p>Tightly Coupled Memory is a special feature which allows Cortex-M7 fast single cycle access to memory using a pair of 64 bit wide buses. The ITCM bus provides a 64 bit path to fetch instructions. The DTCM bus is actually a pair of 32 bit paths, allowing M7 to perform up to two separate memory accesses in the same cycle. These extremely high speed buses are separate from M7’s main AXI bus, which accesses other memory and peripherals. 512 of memory can be accessed as tightly coupled memory. Teensyduino automatically allocates your Arduino sketch code into ITCM and all non-malloc memory use to the fast DTCM, unless you add extra keywords to override the optimized default. Memory not accessed on the tightly coupled buses is optimized for DMA access by peripherals. Because the bulk of M7’s memory access is done on the two tightly coupled buses, powerful DMA-based peripherals have excellent access to the non-TCM memory for highly efficient I/O.</p>

<p>Teensy 4.1’s Cortex-M7 processor includes a floating point unit (FPU) which supports both 64 bit “double” and 32 bit “float”. With M4’s FPU on Teensy 3.5 &amp; 3.6, and also Atmel SAMD51 chips, only 32 bit float is hardware accelerated. Any use of double, double functions like log(), sin(), cos() means slow software implemented math. Teensy 4.1 executes all of these with FPU hardware.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4622">Adafruit</a></li>
  <li><a href="https://www.pjrc.com/store/teensy41.html">PJRC</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/teensy41.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 10 May 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/teensy41/</guid>
  </item><item>
    <title>Bluebird</title>
    <link>https://circuitpython.org/board/teknikio_bluebird/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/teknikio_bluebird.jpg 300w,
               /assets/images/boards/large/teknikio_bluebird.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/teknikio_bluebird.jpg" alt="Image of Board">

<p>By Teknikio</p> <p>A plug-n-play circuit board that can be programmed to send and receive information over Bluetooth and the Internet.</p>

<p>Bluebirds can form a network to send and receive data to one another.</p>

<p>The Flock.io App provides a plug-n-play entry for users to get up and running with Bluebird with an intuitive and engaging block based visual coding interface.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://www.teknikio.com/pages/bluebird">Teknikio</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/teknikio_bluebird.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 19 Dec 2019 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/teknikio_bluebird/</guid>
  </item><item>
    <title>Thunderpack</title>
    <link>https://circuitpython.org/board/thunderpack/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/thunderpack.jpg 300w,
               /assets/images/boards/large/thunderpack.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/thunderpack.jpg" alt="Image of Board">

<p>By Jeremy Gillick</p> <p>A kick-ass microcontroller board with everything you need in a compact package that fits in your pocket. Integrated battery, power management system, Arm microcontroller, USB bootloader, 4 high-power PWM outputs, and 12 GPIOs.</p>

<p>Why? After years of wiring together portable LED controllers that all consisted of a lithum batter, charge controller, power switch, and an arduino nano (or similar), I wanted something better. I always found those versions to be janky and fragile – not to mention concerned that damaging the pouch cell battery might make it explode! This board has everything I need with room to expand.</p>

<p>Features</p>
<ul>
  <li>Ultra-low-power 32-bit microcontroller (STM32L072xx)</li>
  <li>Integrated high-capacity 18650 lithium battery</li>
  <li>4 high-current PWM outputs (2.3A per channel!) with an LED on each for debugging.</li>
  <li>12 GPIOs, USART, I2C, SPI, USB</li>
  <li>6k EEPROM</li>
  <li>USB bootloader</li>
  <li>Tactile on/off switch</li>
  <li>Tactile user button with built-in debounce circuit</li>
  <li>Breadboard friendly</li>
  <li>Durable AF! (Put a tube of heat shrink around it for a super easy case, if you’d like.)</li>
</ul>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://github.com/jgillick/ThunderPack">Github</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/thunderpack.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 16 Apr 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/thunderpack/</guid>
  </item><item>
    <title>ScoutMakes Azul</title>
    <link>https://circuitpython.org/board/tinkeringtech_scoutmakes_azul/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/scoutmakes_azul.jpg 300w,
               /assets/images/boards/large/scoutmakes_azul.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/scoutmakes_azul.jpg" alt="Image of Board">

<p>By TinkeringTech</p> <p>The <strong>ScoutMakes Azul</strong> is an open source Bluetooth (BLE) development platform featuring the nRF52840 (32bit ARM Cortex-M4 processor) from Nordic semiconductors enabling excellent Bluetooth development capabilities for your project. It conforms to the Adafruit feather format, runs CircuitPython, Arduino. The platform also has native USB support.</p>

<p>To enable even more integration, a 128×32 OLED is also built in along with USB type-C support and a power switch for ease of use.</p>

<p>The platform come pre-programmed with a UF2 bootloader and CircuitPython ready to go out of box. You can pair the Azul with Adafruit bluefruit application in iOS or Android to get going. The application includes a color picker, quaternion/accelerometer/gyro/magnetometer or location (GPS), and an 8-button control game pad. This data can be read over BLE and processed directly by the nRF52 microcontroller.</p>

<p><strong>Features:</strong></p>

<ul>
  <li>ARM Cortex M4F (with HW floating point acceleration) running at 64MHz</li>
  <li>1MB flash and 256KB SRAM</li>
  <li><strong>Native Open Source USB stack</strong> - pre-programmed with UF2 bootloader</li>
  <li>Bluetooth Low Energy compatible 2.4GHz radio (Details available in the <a href="https://www.nordicsemi.com/Products/Low-power-short-range-wireless/nRF52840">nRF52840</a> product specification)</li>
  <li><strong>FCC / IC / TELEC certified module</strong></li>
  <li>Up to +8dBm output power</li>
  <li>Built-in 128-32 OLED display</li>
  <li>USB type-C connector</li>
  <li>ON/OFF power switch</li>
  <li>1.7v to 3.3v operation with internal linear and DC/DC voltage regulators</li>
  <li>21 GPIO, 6 x 12-bit ADC pins, up to 12 PWM outputs (3 PWM modules with 4 outputs each)</li>
  <li>Pin #3 red LED for general purpose blinking, NeoPixel for colorful feedback</li>
  <li>4 mounting holes</li>
  <li>Reset button</li>
  <li>Open source design</li>
  <li>Works out of the box with Adafruit’s feather wings
    <h2 id="tutorial">Tutorial</h2>
  </li>
  <li><a href="https://tinkeringtech.com/blog/scoutmakes-azul/">ScoutMakes Azul Overview</a></li>
  <li><a href="https://www.youtube.com/channel/UCYcssarGk-M_4w-jmb3To0Q/featured/">ScoutMakes Youtube Channel</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://tinkeringtech.com/blog/scoutmakes-azul/">TinkeringTech</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/tinkeringtech_scoutmakes_azul.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 26 Jul 2020 20:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/tinkeringtech_scoutmakes_azul/</guid>
  </item><item>
    <title>NeoTrellis M4</title>
    <link>https://circuitpython.org/board/trellis_m4_express/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/trellis_m4_express.jpg 300w,
               /assets/images/boards/large/trellis_m4_express.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/trellis_m4_express.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The <strong>NeoTrellis M4</strong> is an all-in-one <strong>USB + NeoPixel + Elastomer + Audio</strong> board. It’s powered by the SAMD51, a Cortex M4 core running at 120 MHz. This chip has a speedy core with CircuitPython support, hardware DSP/floating point, dual DACs and all the goodies you expect from normal chips like I2C, ADC, DMA, etc. It has a roomy 512KB of flash and 192KB of SRAM so it’s great for CircuitPython, includes a full 8MB flash chip so tons of space for files and audio clips.</p>

<p>The native USB port can turn it into a MIDI USB device if you like - currently that’s only supported in Arduino. Tether it to a computer or tablet, if you like. Or use it in standalone mode, as long as its powered from a USB power plug, it’ll run whatever firmware is burned into it.</p>

<p>OK so you’ve got this big brain, but now you need inputs and outputs! There’s a 4x8 grid of elastomer button pads with a NeoPixel nestled in the center of each one. You can read any/all button presses simultaneously thanks to the fully diode’d matrix, and also set each button color to any of 24-bit colors. The elastomer buttons are translucent so they glow beautifully when lit.</p>

<p>Time to make some noise! Adafruit picked the SAMD51 mostly because it has dual DACs - that’s two 12-bit, 500KSPS ‘true analog’ outputs connected them to left and right on a standard headphone jack. Since the DAC pins are also ADC pins you could also use the left/right for audio line level <em>input</em> if you so choose. You’re not going to get audiophile-quality outputs from two 12-bit DACs but you can certainly play audio clips and make beeps and bloops.</p>

<p>To add more interactivity, a precision triple-axis accelerometer from Analog Devices, the ADXL343, is included as well, and provides sensor information on tilt, motion, or tapping. Great for adding another dimension of data input in addition to the button pads.</p>

<p>Finally, a 4 pin JST hacking port is available for extra add-ons. It’s STEMMA and Grove compatible, and provides GND, 3.3V power, and two pins that can be used for I2C, ADC, or a UART. So connect some other sensor, or read stereo audio in, or maybe hack together a MIDI port. Whatever you like!</p>

<p>Features:</p>

<ul>
  <li><strong>ATSAMD51 32-bit Cortex M4</strong> core running at <strong>120 MHz</strong> (32-bit, 3.3V logic and power)</li>
  <li>Hardware DSP and floating point support</li>
  <li><strong>512 KB</strong> flash, <strong>192 KB</strong> RAM</li>
  <li>Native USB that can act as a true USB MIDI device if you like.</li>
  <li><strong>8 MB SPI FLASH chip</strong> for storing files and CircuitPython code storage.</li>
  <li>4x8 elastomer pads with fully diode’d matrix - no ghosting!</li>
  <li>4x8 NeoPixels for each pad, glows through the elastomer buttons</li>
  <li>TRRS Headphone jack with stereo DAC outputs on Left/Right, can also be stereo ADC inputs.</li>
  <li>Built in <a href="https://www.adafruit.com/product/1063">MAX4466 electret mic amplifier</a> for mobile phone headsets. ‘Raw’ DC level reading also available on a separate ADC</li>
  <li>4-JST hacking port with 3.3V power, ground, and two GPIO that can be I2C/ADC/UART</li>
  <li><a href="https://www.analog.com/en/products/adxl343.html">Analog Devices ADXL343 triple-axis accelerometer</a></li>
  <li>Really fun to press buttons and have sounds come out!</li>
</ul>

<h2 id="tutorials">Tutorials</h2>
<ul>
  <li><a href="https://learn.adafruit.com/adafruit-neotrellis-m4">NeoTrellis M4 Overview</a></li>
  <li><a href="https://learn.adafruit.com/products/4020/guides">Projects and Guides</a></li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4020">Full Kit - Adafruit</a></li>
  <li><a href="https://www.adafruit.com/product/3938">Mainboard - Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/trellis_m4_express.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/trellis_m4_express/</guid>
  </item><item>
    <title>Trinket M0</title>
    <link>https://circuitpython.org/board/trinket_m0/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/trinket_m0.jpg 300w,
               /assets/images/boards/large/trinket_m0.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/trinket_m0.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>The Adafruit Trinket M0 may be small, but do not be fooled by its size! It’s a tiny microcontroller board, built around the Atmel ATSAMD21, a little chip with <em>a lot</em> of power. Adafruit designed a microcontroller board that was small enough to fit into any project, and low cost enough to use without hesitation. Perfect for when you don’t want to give up your expensive dev-board and you aren’t willing to take apart the project you worked so hard to design. It’s one of the lowest-cost CircuitPython programmable boards!</p>

<p>Adafruit used the same form factor for <a href="https://www.adafruit.com/product/1500">the original ATtiny85-based Trinket</a> and gave it an upgrade. The Trinket M0 has swapped out the lightweight ATtiny85 for a ATSAMD21E18 powerhouse. It’s just as small, and it’s easier to use, so you can do more.</p>

<p>The most exciting part of the Trinket M0 is that while you can use it with the Arduino IDE, it ships with CircuitPython on board. When you plug it in, it will show up as a very small disk drive with code.py on it. Edit code.py with your favorite text editor to build your project using Python, the most popular programming language. No installs, IDE or compiler needed, so you can use it on any computer, even ChromeBooks or computers you can’t install software on. When you’re done, unplug the Trinket M0 and your code will go with you. <a href="https://learn.adafruit.com/adafruit-trinket-m0-circuitpython-arduino/circuitpython">Please check out the Trinket M0 CircuitPython guide for a list of capabilities and quick-start code examples</a> - CircuitPython is easier to code but not as low-level and complete as Arduino.</p>

<p>Here are some of the updates you can look forward to when using Trinket M0:</p>

<ul>
  <li>Same size, form-factor, and pinout as classic Trinket</li>
  <li>Updating ATtiny85 8-bit AVR for ATSAMD21E18 32-bit Cortex M0+</li>
  <li>256KB Flash - 32x as much as 8 KB on ATtiny85</li>
  <li>32 KB RAM - 64x as much as 512 bytes on ATtiny85</li>
  <li>48 MHz 32 bit processor - 6x as fast as ATtiny85 (not even taking into account 32-bit speedups)</li>
  <li>Native USB supported by every OS - can be used in Arduino or CircuitPython as USB serial console, Keyboard/Mouse HID, even a little disk drive for storing Python scripts. (ATtiny85 does not have native USB)</li>
  <li>Can be used with Arduino IDE or CircuitPython</li>
  <li>Built in green ON LED</li>
  <li>Built in red pin #13 LED</li>
  <li>Built in RGB DotStar LED</li>
  <li>All 5 GPIO pins are available and are not shared with USB - so you can use them for whatever you like!
    <ul>
      <li>Five GPIO pins with digital input/output with internally connected pullups or pulldowns</li>
      <li>Three of the I/O pins can be used for 12-bit analog input</li>
      <li>True analog output on one I/O pin - can be used to play 10-bit quality audio clips in Arduino (CircuitPython does not have storage for audio clips)</li>
      <li>We gave the M0 pads the exact same names as the original Trinket so all your existing Arduino code will work exactly the same as-is without changes</li>
      <li>Two high speed PWM outputs - for servos, LEDs, etc</li>
      <li>Three pins can also be used as hardware capacitive touch sensors with no additional components required</li>
      <li>Can drive NeoPixels or DotStars on any pins, with enough memory to drive 8000+ pixels. <a href="https://learn.adafruit.com/dma-driven-neopixels">DMA-NeoPixel support on one pin </a>so you can drive pixels without having to spend any processor time on it.</li>
      <li>Native hardware SPI, I2C and Serial available on two pads so you can connect to any I2C or Serial device with true hardware support (no annoying bit-banging). You can have either one SPI device or both I2C and Serial.</li>
    </ul>
  </li>
  <li>Same Reset switch for starting your project code over</li>
  <li>Power with either USB or external output (such as a battery) - it’ll automatically switch over</li>
  <li>Mounting holes! Yeah!</li>
  <li>Really really small</li>
</ul>

<p>Each is fully assembled and tested Trinket M0 with CircuitPython &amp; example code programmed in.</p>

<p>So what are you waiting for? Pick up a Trinket M0 today and be amazed at how easy and fast it is to get started with Trinket and CircuitPython!</p>

<h2 id="tutorials">Tutorials</h2>
<ul>
  <li><a href="https://learn.adafruit.com/adafruit-trinket-m0-circuitpython-arduino">Trinket M0 Overview</a></li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://www.adafruit.com/product/3500">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/trinket_m0.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sat, 09 Mar 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/trinket_m0/</guid>
  </item><item>
    <title>Trinket M0 Haxpress</title>
    <link>https://circuitpython.org/board/trinket_m0_haxpress/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/trinket_m0_haxpress.jpg 300w,
               /assets/images/boards/large/trinket_m0_haxpress.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/trinket_m0_haxpress.jpg" alt="Image of Board">

<p>By Dave Astels</p> <p>This is a <a href="/board/trinket_m0/">Trinket M0</a> that has been had a SPI flash
chip bodged on by Dave Astels. It is not available for purchase.</p>

<p>It was documented as a DIY project <a href="http://daveastels.com/trinket-m0-express-hack.html">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 19 Mar 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/trinket_m0_haxpress/</guid>
  </item><item>
    <title>uChip M0</title>
    <link>https://circuitpython.org/board/uchip/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/uchip.jpg 300w,
               /assets/images/boards/large/uchip.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/uchip.jpg" alt="Image of Board">

<p>By Itaca Innovation</p> <p><strong>Small. Yet powerful!</strong></p>

<p>Despite a size smaller than the ATMEGA328 which powers Arduino Uno, <strong>uChip</strong> mounts the same ATSAMD21 series of Arduino Zero! Everything that runs on Arduino Zero runs also on uChip, at the same speed! However, unlike Arduino Zero, it <strong>fits a 16-pin DIP socket</strong> and it leaves a lot of space on your breadboard. No more bulky shields or flying wires all around your breadboard!</p>

<p>And now uChip runs CircuitPython too!</p>

<p>Unlike many Arduino Zero compatible board, uChip also mounts a high efficiency buck converter, which converts the USB voltage down to 3.3V at up to 1A, which is provided on pin 16, for the external circuitry. A software-selected pass-through mode also allows to output 5V instead of 3.3V. 
uChip can operate also as an USB host. For this purpose, a built-in boost converter can provide up to 500mA to the external USB device, even when the input voltage is as low as 3.3V. The built-in automatic power-path management prevents external power from being fed into an USB port, when uChip is connected to a PC/Mac, and a voltage is provided also externally on pin 16.</p>

<p>You can program uChip using virtually any IDE, in many languages (CircuitPython too!) and you can choose of using either the USB port or an external SWD programmer.</p>

<p><strong>uChip Features:</strong></p>

<ul>
  <li>CPU: 32-bit Cortex M0+ ATSAMD21-series running at 48 MHz (Arduino Zero Compatible)</li>
  <li>FLASH: 256 kB (248 kB due to integrated bootloader).</li>
  <li>RAM: 32 kB, zero wait states.</li>
  <li>Powered via USB or externally (3.3V to 5V).</li>
  <li>Integrated 500-mA boost and 1-A buck converters and automatic power switching circuitry.</li>
  <li>Each converter can also be individually turned off, e.g. if you want to force power draw exclusively from external pins (self-powered device), or if you want to turn off an external USB device connected with a micro A cable.</li>
  <li>When powered through the USB port, the output voltage on the power pins can be selected via software to be either 3.3V or the USB voltage (typically 5V +/- 10%).</li>
  <li>Pin 15 can be configured (via SMD jumper) as an additional 3.3V auxiliary output @100mA when pin 16 is 5V (either as input or output). By default pin 15 is a regular I/O. If this feature is not used, 5/3.3V (at up to 1A) are still available on pin 16.</li>
  <li>14 I/O pins (2 of them can be used to connect an external SWD programmer/debugger) and 2 power pins (VCC and GND).</li>
  <li>Status LED (it can be turned on/off via software using a single instruction).</li>
  <li>Multi function push button for reset/program.</li>
  <li>8 12-bit ADC inputs.</li>
  <li>10-bit DAC output.</li>
  <li>14 external interrupt input pins.</li>
  <li>Up to 5 serials between SPI, I2C and UART.</li>
  <li>I2S port for audio decoders such as  UDA1334A.</li>
  <li>13 PWM pins.</li>
  <li>Size: 28.5 mm x 10.16 mm (1.1 “ x 0.40 “), including USB port protrusions (27.23 mm x 10.16 mm excluding USB)</li>
  <li>4-layer board for improved noise performance.</li>
  <li>Standards narrow-DIP footprint: 0.3” (7.62 mm) row spacing, 0.1” (2.54) pin spacing.</li>
  <li>Pinout standard logic CMOS compatible: power and GND are on pin 16 and 8, so you can also emulate some 16 pin CMOS ICs (4000 and 74HC series)!</li>
</ul>

<h2 id="purchase">Purchase</h2>

<ul>
  <li><a href="https://shop.itaca-innovation.com">Itaca Innovation Store</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/uchip.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 25 Mar 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/uchip/</guid>
  </item><item>
    <title>µGame</title>
    <link>https://circuitpython.org/board/ugame10/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/ugame_10.jpg 300w,
               /assets/images/boards/large/ugame_10.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/ugame_10.jpg" alt="Image of Board">

<p>By Radomir Dopieralski</p> <p>A tiny game console programmable with Python, which lets you easily re-create
the classic titles. Just draw your sprites in 16-color BMP files, generate
sounds as mono WAV files, and write code in CircuitPython, using the Stage
library which gives you graphic primitives such as tiled grids and sprites.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.tindie.com/products/11372/">Tindie</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/ugame10.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Tue, 12 Mar 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/ugame10/</guid>
  </item><item>
    <title>Unexpected Maker FeatherS2</title>
    <link>https://circuitpython.org/board/unexpectedmaker_feathers2/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/unexpectedmaker_feathers2.jpg 300w,
               /assets/images/boards/large/unexpectedmaker_feathers2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/unexpectedmaker_feathers2.jpg" alt="Image of Board">

<p>By Unexpected Maker</p> <p>Introducing the FeatherS2 - The PRO ESP32-S2 based development board in a Feather format!</p>

<p><strong>Features &amp; Specifications</strong></p>
<ul>
  <li>32-bit 240 MHz single-core processor</li>
  <li>16 MB SPI Flash</li>
  <li>8 MB extra PSRAM</li>
  <li>2.4 GHz Wi-Fi - 802.11b/g/n</li>
  <li>3D Antenna</li>
  <li>2x 700 mA 3.3 V LDO regulator</li>
  <li>Optimised power path for low-power battery usage</li>
  <li>LiPo battery management</li>
  <li>Power (red), Charge (orange) &amp; IO13 (blue) LEDs</li>
  <li>21x GPIO</li>
  <li>USB-C</li>
  <li>USB backfeed protection</li>
  <li>APA102 RGB LED (CLK IO45, DATA IO40)</li>
  <li>ALS-PT19 Ambient Light Sensor (IO14)</li>
  <li>QWIIC/STEMMA connector</li>
  <li>Feather format</li>
</ul>

<p><strong>2x LDO Voltage Regulators?</strong>
Yup! The first one is for the general operation of the board and the ESP32-S2, RAM and Flash.</p>

<p>The second LDO is for you to use to connect external 3V3 modules, sensors and peripherals, and it has programmable EN control tied to GPIO21 + it’s connected to the deep sleep capabilities of the S2, so if the S2 goes into deep sleep, the 2nd LDO is automatically shut down for you!</p>

<p>You can find out more about the FeatherS2 at <a href="https://feathers2.io">feathers2.io</a></p>

<h2 id="purchase">Purchase</h2>
<p>You can purchase your very own FeatherS2 from:</p>
<ul>
  <li><a href="https://unexpectedmaker.com/shop/feathers2-esp32-s2">Unexpected Maker</a></li>
  <li><a href="https://www.adafruit.com/product/4769">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/unexpectedmaker_feathers2.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 01 Oct 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/unexpectedmaker_feathers2/</guid>
  </item><item>
    <title> Unexpected Maker FeatherS2 Prerelease</title>
    <link>https://circuitpython.org/board/unexpectedmaker_feathers2_prerelease/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/unexpectedmaker_feathers2_prerelease.jpg 300w,
               /assets/images/boards/large/unexpectedmaker_feathers2_prerelease.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/unexpectedmaker_feathers2_prerelease.jpg" alt="Image of Board">

<p>By Unexpected Maker</p> <p>Pre-Release version of the FeatherS2
For those that purchased the pre-release version and would like to run CircuitPython on it without having to compile from source.</p>

<p><strong>Features &amp; Specifications</strong></p>
<ul>
  <li>32-bit 240 MHz single-core processor</li>
  <li>16 MB SPI Flash</li>
  <li>8 MB extra PSRAM</li>
  <li>2.4 GHz Wi-Fi - 802.11b/g/n</li>
  <li>3D Antenna</li>
  <li>2x 700 mA 3.3 V LDO regulator</li>
  <li>Optimised power path for low-power battery usage</li>
  <li>LiPo battery management</li>
  <li>Power (red), Charge (orange) &amp; IO13 (blue) LEDs</li>
  <li>21x GPIO</li>
  <li>USB-C</li>
  <li>USB backfeed protection</li>
  <li>APA102 RGB LED (CLK IO45, DATA IO40)</li>
  <li>ALS-PT19 Ambient Light Sensor (IO14)</li>
  <li>QWIIC/STEMMA connector</li>
  <li>Feather format</li>
</ul>

<p><strong>2x LDO Voltage Regulators?</strong>
Yup! The first one is for the general operation of the board and the ESP32-S2, RAM and Flash.</p>

<p>The second LDO is for you to use to connect external 3V3 modules, sensors and peripherals, and it has programmable EN control tied to GPIO21 + it’s connected to the deep sleep capabilities of the S2, so if the S2 goes into deep sleep, the 2nd LDO is automatically shut down for you!</p>

<p>You can find out more about the FeatherS2 at <a href="https://feathers2.io">feathers2.io</a></p>

<h2 id="purchase">Purchase</h2>
<p>The FeatherS2 pre-release boards are no longer available for purchase now that the final release version is out, which you can grab from these locations:</p>

<ul>
  <li><a href="https://unexpectedmaker.com/shop/feathers2-esp32-s2">Unexpected Maker</a></li>
  <li><a href="https://www.adafruit.com/product/4769">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/unexpectedmaker_feathers2_prerelease.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Sun, 14 Jun 2020 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/unexpectedmaker_feathers2_prerelease/</guid>
  </item><item>
    <title>Winterbloom Big Honking Button</title>
    <link>https://circuitpython.org/board/winterbloom_big_honking_button/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/honk.jpg 300w,
               /assets/images/boards/large/honk.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/honk.jpg" alt="Image of Board">

<p>By Alethea Flowers</p> <p>Winterbloom Big Honking Button is a modular synthesizer (Eurorack) module. It is very simple sampler in a very silly package. It makes a nice goose honk when you press its large orange button, and you can use CircuitPython to customize its behavior and samples.</p>

<h2 id="purchase">Purchase</h2>

<p>Sol is available for purchase on <a href="https://winterbloom.com">Winterbloom.com</a> and several modular synthesizer distributors.</p>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/winterbloom_big_honking_button.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Wed, 10 Apr 2019 00:00:00 -0400</pubDate>
    <guid>https://circuitpython.org/board/winterbloom_big_honking_button/</guid>
  </item><item>
    <title>Winterbloom Sol</title>
    <link>https://circuitpython.org/board/winterbloom_sol/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/sol.jpg 300w,
               /assets/images/boards/large/sol.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/sol.jpg" alt="Image of Board">

<p>By Alethea Flowers</p> <p>Winterbloom Sol is a modular synthesizer (Eurorack) module. It is a multi-purpose, scriptable USB MIDI to CV/gate converter. Its code can be modified while in use to change how it processes MIDI data into CV and gate outputs.</p>

<h2 id="purchase">Purchase</h2>

<p>Sol is available for purchase on <a href="https://winterbloom.com">Winterbloom.com</a> and several modular synthesizer distributors.</p>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_board/winterbloom_sol.md">here</a>.</p>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Thu, 07 Nov 2019 00:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/winterbloom_sol/</guid>
  </item><item>
    <title>XinaBox CC03</title>
    <link>https://circuitpython.org/board/xinabox_cc03/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/xinabox_cc03.jpg 300w,
               /assets/images/boards/large/xinabox_cc03.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/xinabox_cc03.jpg" alt="Image of Board">

<p>By XinaBox</p> <p>This xCHIP forms part of the core modules. The SAM D21 is a series of low-power micro controllers using the 32-bit ARM® Cortex® -M0+ processor, with 256 KB Flash and 32KB of SRAM. Compatible with Arduino platform due to the shared architecture with the Arduino M0.</p>

<h3 id="product-highlights">Product Highlights</h3>

<ul>
  <li>ARM Cortex-M0+ Architecture</li>
  <li>48 MHz</li>
  <li>256 kB Flash</li>
  <li>32 kB SRAM Memory</li>
  <li>SWD Debugging with IP03 Interface and Capable Programmer</li>
  <li>Low Power Idle and Standby Modes</li>
</ul>

<h3 id="specifications">Specifications</h3>

<ul>
  <li>ARM Cortex-M0+ Architecture</li>
  <li>48 MHz</li>
  <li>256 kB Flash</li>
  <li>32 kB SRAM Memory</li>
  <li>SWD Debugging with IP03 Interface and Capable Programmer</li>
  <li>Low Power Idle and Standby Modes</li>
  <li>Five 16-Bit Configurable Timers</li>
  <li>Three 24-Bit Timers/Counters</li>
  <li>32-Bit Real Time Counter with Clock/Calendar Function</li>
  <li>Watchdog Timer</li>
  <li>CRC-32 Generator</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://xinabox.cc/products/cc03?_pos=1&amp;_sid=ecd354e4d&amp;_ss=r">XinaBox CC03</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 16 Dec 2019 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/xinabox_cc03/</guid>
  </item><item>
    <title>XinaBox CS11</title>
    <link>https://circuitpython.org/board/xinabox_cs11/</link>
    <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/xinabox_cs11.jpg 300w,
               /assets/images/boards/large/xinabox_cs11.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/xinabox_cs11.jpg" alt="Image of Board">

<p>By XinaBox</p> <p>This xCHIP forms part of the core modules. The SAM D21 is a series of low-power micro controllers using the 32-bit ARM® Cortex® -M0+ processor, with 256 KB Flash and 32KB of SRAM. Compatible with Arduino platform due to the shared architecture with the Arduino M0.</p>

<h3 id="product-highlights">Product Highlights</h3>

<ul>
  <li>ARM Cortex-M0+ Architecture</li>
  <li>48 MHz</li>
  <li>256 kB Flash</li>
  <li>32 kB SRAM Memory</li>
  <li>SWD Debugging with IP03 Interface and Capable Programmer</li>
  <li>Low Power Idle and Standby Modes</li>
</ul>

<h3 id="specifications">Specifications</h3>

<ul>
  <li>ARM Cortex-M0+ Architecture</li>
  <li>48 MHz</li>
  <li>256 kB Flash</li>
  <li>32 kB SRAM Memory</li>
  <li>SWD Debugging with IP03 Interface and Capable Programmer</li>
  <li>Low Power Idle and Standby Modes</li>
  <li>Five 16-Bit Configurable Timers</li>
  <li>Three 24-Bit Timers/Counters</li>
  <li>32-Bit Real Time Counter with Clock/Calendar Function</li>
  <li>Watchdog Timer</li>
  <li>CRC-32 Generator</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://xinabox.cc/products/cs11?_pos=1&amp;_sid=8a988d61c&amp;_ss=r">XinaBox CS11</a></li>
</ul>
 ]]></description>
    <category>CircuitPython</category>
    <pubDate>Mon, 16 Dec 2019 19:00:00 -0500</pubDate>
    <guid>https://circuitpython.org/board/xinabox_cs11/</guid>
  </item>

    <item>
      <title>SmartEdge Industrial IOT Gateway</title>
      <link>https://circuitpython.org/blinka/avnet_iiot_gateway/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/avnet_iiot_gateway.jpg 300w,
               /assets/images/boards/large/avnet_iiot_gateway.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/avnet_iiot_gateway.jpg" alt="Image of Board">

<p>By Avnet, Inc.</p> <p>Gateways can be as varied as the devices they help connect, with each gateway needing different protocols, connection methodologies and energy requirements to bring together the myriad of distributed parts that make up the IoT whole. Gateways serve critical functions such as data filtering and security and up to application code. Whether an app on a mobile device, a demo board, or even a connected sensor, gateways are critical to the functioning of the IoT—and Avnet’s deep hardware experience help connect your solutions to the cloud smartly and with security in mind.</p>

<p>SmartEdge Industrial IoT Gateway, powered by Raspberry Pi, helps simplify and accelerate adoption of IIoT applications. The gateway provides versatile connectivity with data intelligence for a wide range of industrial 4.0 applications.</p>

<p>Empower analytics at the edge of your IoT network with the intelligent Dell Edge Gateway for richer business insights. An edge gateway connects varied wired and wireless devices and systems, aggregates and analyzes the input, and sends it on. Because the gateway sits close to your devices and sensors, it sends only meaningful data to the cloud or control center, saving you expensive bandwidth.</p>

<ul>
  <li>Broadcom BCM2837 SoC, 64-bit, Quad-core ARM Cortex-A53 processor running up to 900 MHz + 1GB LPDDR2 SDRAM for data</li>
  <li>Robust program storage with 8GB eMMC Flash pre-programmed with a secure boot version of the Raspbian Linux OS</li>
  <li>On-Board Trusted Platform Module TPM 2.0 module for comprehensive end-to-end security</li>
  <li>HDMI output for driving a display with outstanding 1080p video processing</li>
  <li>Same Raspberry Pi 40-pin GPIO header compatible with your favorite for HATs</li>
  <li>WiFi 2.4GHz and Bluetooth (BLE) 4.2 wireless connectivity with internal antennas</li>
  <li>Dual USB 2.0 Ports, Dual 10/100 Ethernet ports and mPCIe slot for a cellular card</li>
  <li>Terminal blocks for Isolated RS-232/485/Modbus, CAN, Digital I/O and 12 to 24VDC power</li>
  <li>On-Board battery backed real-time clock (RTC) and watchdog timer</li>
  <li>Can be mounted on DIN rail, direct on wall/panel, or free standing</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.newark.com/avnet/avtse-rpi-iiotg/smartedge-industrial-iot-gateway/dp/02AH6799">Newark</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/avnet_iiot_gateway.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Fri, 15 May 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/avnet_iiot_gateway/</guid>
    </item>

    <item>
      <title>Banana Pi M2 Zero</title>
      <link>https://circuitpython.org/blinka/banana_pi_m2_zero/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/banana_pi_m2_zero.jpg 300w,
               /assets/images/boards/large/banana_pi_m2_zero.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/banana_pi_m2_zero.jpg" alt="Image of Board">

<p>By Sinovoip</p> <p>The Banana Pi M2 Zero is an ultra compact single board computer which measures only 60mm*30mm. Its external interfaces are the same as the Raspberry Pi Zero W, and it will fit almost all cases and accessories for the Zero W. It uses the quad-core Cortex A7 Allwinner H2+ processor, with 512MB RAM. It’s ideal for light-weight systems and space-limited applications. Like other members of the Banana Pi family, it supports both Linux and Android operating systems.</p>

<ul>
  <li>H2+ Quad-core Cortex-A7</li>
  <li>Mali 400 MP2</li>
  <li>512M DDR3</li>
  <li>MicroSD slot</li>
  <li>Wi-Fi 802.11 b/g/n</li>
  <li>Bluetooth 4.0</li>
  <li>Mini HDMI</li>
  <li>1 x USB 2.0 OTG</li>
  <li>GPIO (x28)</li>
  <li>Power (+5V, +3.3V and GND)</li>
  <li>UART, I2C, SPI or PWM</li>
  <li>65mm × 30mm, 15g</li>
  <li>Android and Linux</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/item/33038926185.html">Aliexpress</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/banana_pi_m2_zero.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Fri, 30 Oct 2020 20:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/banana_pi_m2_zero/</guid>
    </item>

    <item>
      <title>BeagleBone AI</title>
      <link>https://circuitpython.org/blinka/beaglebone_ai/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/beaglebone_ai.jpg 300w,
               /assets/images/boards/large/beaglebone_ai.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/beaglebone_ai.jpg" alt="Image of Board">

<p>By BeagleBoard</p> <p>Built on the proven BeagleBoard.org® open source Linux approach, BeagleBone® AI fills the gap between small SBCs and more powerful industrial computers. Based on the Texas Instruments AM5729, developers have access to the powerful SoC with the ease of BeagleBone® Black header and mechanical compatibility. BeagleBone® AI makes it easy to explore how artificial intelligence (AI) can be used in everyday life via the TI C66x digital-signal-processor (DSP) cores and embedded-vision-engine (EVE) cores supported through an optimized TIDL machine learning OpenCL API with pre-installed tools. Focused on everyday automation in industrial, commercial and home applications.</p>

<ul>
  <li>Processor: Sitara AM5729</li>
  <li>Dual Arm® Cortex®-A15 microprocessor subsystem</li>
  <li>2 C66x floating-point VLIW DSPs</li>
  <li>2.5MB of on-chip L3 RAM</li>
  <li>2x dual Arm® Cortex®-M4 co-processors</li>
  <li>4x Embedded Vision Engines (EVEs)</li>
  <li>2x dual-core Programmable Real-Time Unit and Industrial Communication SubSystem (PRU-ICSS)</li>
  <li>2D-graphics accelerator (BB2D) subsystem</li>
  <li>Dual-core PowerVR® SGX544™ 3D GPU</li>
  <li>IVA-HD subsystem (4K @ 15fps encode and decode support for H.264, 1080p60 for others)</li>
  <li>BeagleBone Black mechanical and header compatibility</li>
  <li>1GB RAM and 16GB on-board eMMC flash with high-speed interface</li>
  <li>USB type-C for power and superspeed dual-role controller; and USB type-A host</li>
  <li>Gigabit Ethernet, 2.4/5GHz WiFi, and Bluetooth</li>
  <li>microHDMI</li>
  <li>Zero-download out-of-box software experience with Debian GNU/Linux</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.digikey.com/en/products/detail/beagleboard-org/BBONE-AI/10671097">DigiKey</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/beaglebone_ai.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 20 Jan 2021 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/beaglebone_ai/</guid>
    </item>

    <item>
      <title>BeagleBone Black</title>
      <link>https://circuitpython.org/blinka/beaglebone_black/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/beaglebone_black.jpg 300w,
               /assets/images/boards/large/beaglebone_black.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/beaglebone_black.jpg" alt="Image of Board">

<p>By BeagleBoard</p> <p>If you liked the BeagleBone Black Rev B, you will love the Rev C! The Rev C has a blistering 1GHz AM3358 processor and 512MB onboard DDR3 RAM, two 46-pin headers, micro HDMI for audio/video output, USB ports, 10/100 Ethernet and other I/O features. The Rev C is an ultra-powered embedded computer that can fit in a mint tin.</p>

<p>This model includes 4GB of eMMC built-in storage instead of the Rev B’s 2GB. With the doubled storage and faster eMMC, the developers were able to make the Rev C’s most significant change: shipping the BeagleBone Black with Debian Linux pre-loaded on the board’s flash instead of Angstrom Linux. Debian Linux is a more user-friendly operating system than Angstrom and the switch to Debian is partly the result of consumer demand (especially from Adafruit users, thanks!)</p>

<p>Of course the BeagleBone Black Rev C is an open board so if you want to load it back up with Angstrom or other Linux-based distributions like Ubuntu or Android, you can.</p>

<p>The rev C comes with a mini-B cable for powering it up ASAP. No microSD card is included as the BBB has onboard flash storage - and no SD card loading is required to get started. Please note the PCB may say rev B, that’s normal! The rev C has more memory which did not affect the PCB revision code.</p>

<ul>
  <li>Processor: Sitara AM3358BZCZ100 1GHz, 2000 MIPS</li>
  <li>Graphics Engine: SGX530 3D, 20M Polygons/S</li>
  <li>SDRAM Memory: 512MB DDR3L 606MHZ</li>
  <li>Onboard Flash: 4GB, 8bit Embedded MMC</li>
  <li>PMIC: TPS65217C PMIC regulator and one additional LDO.</li>
  <li>Debug Support: Optional Onboard 20-pin CTI JTAG, Serial Header</li>
  <li>Power Source: miniUSB USB or DC Jack, 5VDC External Via Expansion Header</li>
  <li>PCB: 86.44mm x 54.54mm / 3.4” x 2.15” 6 layers</li>
  <li>88.98mm x 54.54mm x 15.41mm / 3.5” x 2.15” x 0.6”</li>
  <li>Indicators 1-Power, 2-Ethernet, 4-User Controllable LEDs</li>
  <li>HiSpeed USB 2.0 Client Port: Access to USB0, Client mode via miniUSB</li>
  <li>HiSpeed USB 2.0 Host Port Access to USB1, Type A Socket, 500mA LS/FS/HS</li>
  <li>Serial Port UART0 access via 6 pin 3.3V TTL Header. Header is populated</li>
  <li>Ethernet 10/100, RJ45</li>
  <li>SD/MMC Connector microSD , 3.3V</li>
  <li>User Input: Reset Button, Boot Button, Power Button</li>
  <li>Video Out: 16b HDMI, 1280x1024 (MAX), 1024x768,1280x720,1440x900 w/EDID Support</li>
  <li>Audio Via HDMI Interface, Stereo</li>
  <li>Expansion Connectors:</li>
  <li>Power 5V, 3.3V , VDD_ADC(1.8V)</li>
  <li>3.3V I/O on all signals</li>
  <li>McASP0, SPI1, I2C, GPIO(65), LCD, GPMC, MMC1, MMC2, 7 AIN(1.8V MAX), 4 Timers, 3 Serial Ports, CAN0, EHRPWM(0,2),XDMA Interrupt, Power button, Expansion Board ID (Up to 4 can be stacked)</li>
  <li>Weight 40.55g / 1.43oz</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/1996">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/beaglebone_black.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/beaglebone_black/</guid>
    </item>

    <item>
      <title>BeagleBone Black Industrial</title>
      <link>https://circuitpython.org/blinka/beaglebone_black_industrial/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/beaglebone_black_industrial.jpg 300w,
               /assets/images/boards/large/beaglebone_black_industrial.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/beaglebone_black_industrial.jpg" alt="Image of Board">

<p>By Element14</p> <p>The element14 BeagleBone Black Industrial (BBONE-BLACK-IND-4G) is a low cost, high-expansion focused BeagleBoard using a low cost industrial temperature grade Sitara™ AM3358 ARM® Cortex™-A8 processor from Texas Instruments. BBONE-BLACK-IND-4G ships with the Debian Linux distribution preinstalled on the onboard FLASH, ready to start evaluation and development.</p>

<ul>
  <li>Processor: TI Sitara AM3358BZCZA100, 1GHz, 2000 MIPS 1 GHz ARM®Cortex™-A8</li>
  <li>SGX530 Graphics Engine</li>
  <li>Programmable Real-Time Unit Subsystem</li>
  <li>Operating temperature can span from -40C to +85C</li>
  <li>Memory SDRAM: 512MB DDR3L 800MHZ</li>
  <li>Onboard Flash: 4GB, 8bit Embedded MMC (eMMC)</li>
  <li>SD/MMC Connector for microSD</li>
  <li>Power management:TPS65217C PMIC is used along with a separate LDO to provide power to the system</li>
  <li>Debug Support: Optional Onboard 20-pin CTI JTAG, Serial Header</li>
  <li>Power Source miniUSB USB or DC Jack</li>
  <li>5VDC External Via Expansion Header</li>
  <li>Connectivity High speed USB 2.0 Client port: Access to USB0, Client mode via miniUSB</li>
  <li>User Input / Output Reset Button</li>
  <li>Video/Audio Interfaces HDMI D type interface</li>
  <li>Expansion Interfaces LCD, UART, eMMC</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.newark.com/element14/bbone-black-ind-4g/beaglebone-black-industrial/dp/76Y2810">Newark</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/beaglebone_black_industrial.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/beaglebone_black_industrial/</guid>
    </item>

    <item>
      <title>BeagleBone Black Wireless</title>
      <link>https://circuitpython.org/blinka/beaglebone_black_wireless/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/beaglebone_black_wireless.jpg 300w,
               /assets/images/boards/large/beaglebone_black_wireless.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/beaglebone_black_wireless.jpg" alt="Image of Board">

<p>By BeagleBoard</p> <p>Replacing the 10/100 Ethernet port with onboard 802.11 b/g/n 2.4GHz WiFi and Bluetooth, the popular open source BeagleBone® Black computer now comes with built-in wireless networking capability. Leveraging a partnership with Octavo Systems and designed in CadSoft Eagle, BeagleBone® Black Wireless is the easiest to use and modify credit-card sized IoT Linux computer available.</p>

<ul>
  <li>Processor: Octavo Systems OSD3358 1GHz ARM Cortex-A8</li>
  <li>512MB DDR3 RAM</li>
  <li>4GB 8-bit eMMC on-board flash storage</li>
  <li>3D graphics accelerator</li>
  <li>NEON floating-point accelerator</li>
  <li>2x PRU 32-bit microcontrollers</li>
  <li>USB client for power &amp; communications</li>
  <li>USB host</li>
  <li>802.11b/g/n and Bluetooth 4.1 plus BLE</li>
  <li>HDMI</li>
  <li>2x 46 pin headers</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.digikey.com/products/en?lang=en&amp;site=us&amp;KeyWords=BBBWL-SC-562-ND">Digi-Key</a></li>
  <li><a href="https://www.arrow.com/en/products/bbwireless/beagleboardorg">Arrow</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/beaglebone_black_wireless.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 25 Mar 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/beaglebone_black_wireless/</guid>
    </item>

    <item>
      <title>BeagleBone Green Gateway</title>
      <link>https://circuitpython.org/blinka/beaglebone_green_gateway/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/beaglebone_green_gateway.jpg 300w,
               /assets/images/boards/large/beaglebone_green_gateway.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/beaglebone_green_gateway.jpg" alt="Image of Board">

<p>By SeeedStudio</p> <p>Seeed Studio BeagleBone® Green Gateway is a low cost, open-source, community supported development platform for developers and hobbyists. It is a joint effort by BeagleBoard.org and Seeed Studio. It is based on the classical open-source hardware design of BeagleBone® Black and developed into this differentiated version. The Seeed Studio BeagleBone® Green Gateway includes two Grove connectors, making it easier to connect to the large family of Grove sensors. The on-board HDMI and Ethernet are removed to make room for these wireless features and Grove connectors.</p>

<p>The Seeed Studio BeagleBone® Green Gateway is a combination of Seeed Studio BeagleBone® Green and Seeed Studio BeagleBone® Green Wireless, equipped with both Ethernet and Wireless connectivity.</p>

<p>Boot Linux in less 10 seconds and get started on development in less than 5 minutes with just a single USB cable.</p>

<ul>
  <li>Fully Compatible with BeagleBone® Black and Seeed Studio BeagleBone® Green</li>
  <li>Processor: AM3358 1GHz ARM® Cortex-A8</li>
  <li>2×32-bit 200-MHz programmable real-time units (PRUs)</li>
  <li>512MB DDR3 RAM</li>
  <li>4KB EEPROM</li>
  <li>4GB 8-bit eMMC on-board flash storage</li>
  <li>3D graphics accelerator</li>
  <li>NEON floating-point accelerator</li>
  <li>Ethernet 10/100M bit</li>
  <li>WiFi 802.11 b/g/n 2.4GHz</li>
  <li>USB client for power &amp; communications</li>
  <li>USB host</li>
  <li>SD/MMC Connector for microSD</li>
  <li>Bluetooth 4.1 with BLE</li>
  <li>2x 46 pin headers</li>
  <li>2x Grove connectors (I2C and UART)</li>
  <li>DC Jack for power, 12V</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.seeedstudio.com/SeeedStudio-BeagleBone-Green-Gateway-p-4586.html">SeeedStudio</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/beaglebone_green_gateway.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Sun, 01 Nov 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/beaglebone_green_gateway/</guid>
    </item>

    <item>
      <title>BeagleBone Green Wireless</title>
      <link>https://circuitpython.org/blinka/beaglebone_green_wireless/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/beaglebone_green_wireless.jpg 300w,
               /assets/images/boards/large/beaglebone_green_wireless.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/beaglebone_green_wireless.jpg" alt="Image of Board">

<p>By SeeedStudio</p> <p>SeeedStudio BeagleBone Green Wireless (BBGW) is a joint effort by BeagleBoard.org and Seeed Studio. It is based on the open-source hardware design of BeagleBone Black and developed into this differentiated version. SeeedStudio BeagleBone Green Wireless has included a high-performance flexible WiFi/Bluetooth interface and two Grove connectors, making it easier to connect to the large family of Grove sensors. The on-board HDMI and Ethernet are removed to make room for these wireless features and Grove connectors.</p>

<ul>
  <li>Processor: Sitara AM3358BZCZ100 1GHz, 2000 MIPS</li>
  <li>Graphics Engine: SGX530 3D, 20M Polygons/S</li>
  <li>SDRAM Memory: 512MB DDR3L 606MHZ</li>
  <li>Onboard Flash: 4GB, 8bit Embedded MMC</li>
  <li>PMIC: TPS65217C PMIC regulator and one additional LDO.</li>
  <li>Debug Support: Optional Onboard 20-pin CTI JTAG, Serial Header</li>
  <li>Power Source: miniUSB USB or DC Jack, 5VDC External Via Expansion Header</li>
  <li>PCB: 86.44mm x 54.54mm / 3.4” x 2.15” 6 layers</li>
  <li>88.98mm x 54.54mm x 15.41mm / 3.5” x 2.15” x 0.6”</li>
  <li>Indicators 1-Power, 2-Ethernet, 4-User Controllable LEDs</li>
  <li>4x USB2.0 host</li>
  <li>Serial Port UART0 access via 6 pin 3.3V TTL Header. Header is populated</li>
  <li>Wi-Fi 802.11b/g/n 2.4GHz and Bluetooth 4.1 LE</li>
  <li>SD/MMC Connector microSD , 3.3V</li>
  <li>User Input: Reset Button, Boot Button, Power Button</li>
  <li>Video Out: 16b HDMI, 1280x1024 (MAX), 1024x768,1280x720,1440x900 w/EDID Support</li>
  <li>Audio Via HDMI Interface, Stereo</li>
  <li>Expansion Connectors:</li>
  <li>Power 5V, 3.3V , VDD_ADC(1.8V)</li>
  <li>3.3V I/O on all signals</li>
  <li>McASP0, SPI1, I2C, GPIO(65), LCD, GPMC, MMC1, MMC2, 7 AIN(1.8V MAX), 4 Timers, 3 Serial Ports, CAN0, EHRPWM(0,2),XDMA Interrupt, Power button, Expansion Board ID (Up to 4 can be stacked)</li>
  <li>Weight 40.55g / 1.43oz</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.seeedstudio.com/BeagleBone-Green-Wireless-Development-Board-TI-AM335x-WiFi-BT.html">SeeedStudio</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/beaglebone_green_wireless.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/beaglebone_green_wireless/</guid>
    </item>

    <item>
      <title>Nova</title>
      <link>https://circuitpython.org/blinka/binho_nova/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/binho_nova.jpg 300w,
               /assets/images/boards/large/binho_nova.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/binho_nova.jpg" alt="Image of Board">

<p>By Binho</p> <p>The Binho Nova brings Multi-Protocol USB Host Adapters into the 21st Century. No more fumbling through development with cumbersome, clunky, out-dated adapters. Let your productivity soar to new heights!</p>

<p>With support for I2C, SPI, UART, 1-WIRE, SWI protocols all in one slim, robust package, it may even be the last adapter you’ll ever need…</p>

<p>With an intuitive user interface, our software is the quickest, simplest way to get up and running with your new Binho Nova. Whether you’re working in a Windows, Linux, or macOS environment, our cross-platform solution has you covered. Alpha build available now with I2C, SPI, and IO functionality.</p>

<ul>
  <li>Support for SPI @ 12MHz max clock</li>
  <li>Support for I2C @ 3.4MHz max clock</li>
  <li>Support for UART @ 1000000 max baud</li>
  <li>Support for Dallas 1-Wire</li>
  <li>Support for Atmel Single-Wire Interface</li>
  <li>Provides 3v3 and VUSB power rails</li>
  <li>1 x DAC Output, 5 x ADC Inputs</li>
  <li>GPIO / Interrupt / PWM Support</li>
  <li>Programmable RGB Status LED</li>
  <li>Field-Upgradeable Device Firmware</li>
  <li>Cross-platform Support for Windows,
Mac, Linux</li>
  <li>Robust, low-profile Aluminum
Enclosure</li>
  <li>USB Type-C Connector</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4459">Adafruit</a></li>
  <li><a href="https://binho.io/">Binho</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/binho_nova.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/binho_nova/</guid>
    </item>

    <item>
      <title>Clara AGX Xavier</title>
      <link>https://circuitpython.org/blinka/clara_agx_xavier/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/clara_agx_xavier.jpg 300w,
               /assets/images/boards/large/clara_agx_xavier.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/clara_agx_xavier.jpg" alt="Image of Board">

<p>By NVIDIA</p> <p>The NVIDIA Clara AGX™ developer kit delivers real-time AI and imaging for medical devices. By combining low-powered, NVIDIA Xavier SOC (system on a chip) and RTX GPUs with the NVIDIA Clara AGX SDK and the NVIDIA EGX stack, it’s easy to securely provision and remotely manage fleets of distributed medical instruments.</p>

<p>The NVIDIA Clara AGX™ developer kit is an embedded AI computer and software development framework for medical devices that need the ability to perform real-time AI and advanced image, video, and signal processing. Powered by ARM-based NVIDIA Xavier™ along with RTX GPUs and running the NVIDIA EGX software stack, Clara AGX securely manages and orchestrates AI application deployments to fleets of medical devices or edge nodes.</p>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://developer.nvidia.com/clara-agx-devkit">NVIDIA</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/clara_agx_xavier.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 06 Oct 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/clara_agx_xavier/</guid>
    </item>

    <item>
      <title>ClockworkPi</title>
      <link>https://circuitpython.org/blinka/clockworkpi/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/clockworkpi.jpg 300w,
               /assets/images/boards/large/clockworkpi.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/clockworkpi.jpg" alt="Image of Board">

<p>By Clockwork Tech LLC</p> <p>New clockworkPi v3.1 development board:</p>
<ul>
  <li>Allwinner R16-J Quad-core Cortex-A7 CPU @1.2GHz</li>
  <li>Mali-400 MP2 GPU</li>
  <li>1GB DDR3 memory</li>
  <li>WI-FI 802.11b/g/n &amp; Bluetooth v4.0</li>
  <li>Micro HDMI output (720P)</li>
  <li>Micro SD card slot (Support up to 128GB)</li>
  <li>PMU (Power Management Unit)</li>
  <li>USB OTG supported</li>
  <li>Ultra-small size (67.6 * 47.6 * 6.8mm)</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.clockworkpi.com/product-page/cpi-v3-1">ClockworkPi</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/clockworkpi.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Thu, 16 Apr 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/clockworkpi/</guid>
    </item>

    <item>
      <title>Dragonboard 410c</title>
      <link>https://circuitpython.org/blinka/dragonboard_410c/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/dragonboard_410c.jpg 300w,
               /assets/images/boards/large/dragonboard_410c.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/dragonboard_410c.jpg" alt="Image of Board">

<p>By Arrow Electronics</p> <p>The DragonBoard 410c, a product of Arrow Electronics, is the development board based on the mid-tier Qualcomm® APQ8016E processor. It features advanced processing power, Wi-Fi, Bluetooth connectivity, and GPS, all packed into a board the size of a credit card.</p>

<p>This DragonBoard™ 410c based on 96Boards™ specification features the Qualcomm® Snapdragon™ 410 processor, a Quad-core ARM® Cortex™ A53 at up to 1.2GHz clock speed per core, capable of 32-bit and 64-bit operation.96Boards is a 32-bit and 64-bit ARM® Open Platform hosted by Linaro™ with the intension to serve the software/ maker and embedded OEM communities.DragonBoard 410c supports Android 5.1, Linux based on Debian and Win10 IoT Core advanced processing power, WLAN, Bluetooth, and GPS, all packed into a board the size of a credit card. It is designed to support feature-rich functionality, including multimedia, with the Qualcomm® Adreno™ 306 GPU, integrated ISP with up to 13 MP camera support, and 1080p HD video playback and capture with H.264 (AVC).</p>

<ul>
  <li>Qualcomm APQ8016E</li>
  <li>ARM Cortex-A53 Quad-core up to 1.2 GHz per core</li>
  <li>Qualcomm Adreno 306 @ 400MHz</li>
  <li>PC-class graphics with support for Advanced APIs</li>
  <li>Supports OpenGL ES 3.0, OpenCL, DirectX, and content security</li>
  <li>1GB LPDDR3 SDRAM @ 533MHz</li>
  <li>8GB eMMC 4.51 on board storage</li>
  <li>MicroSD card slot</li>
  <li>USB 2.0 expansion</li>
  <li>WLAN 802.11 b/g/n 2.4 GHz</li>
  <li>Bluetooth 4.1, GPS</li>
  <li>On board GPS, BT and WLAN antennas</li>
  <li>2 x USB 2.0 Host 1 x USB 2.0 OTG</li>
  <li>1 x HDMI 1.4 (Type A - full)</li>
  <li>1 x MIPI-DSI HDMI output up to FHD 1080P</li>
  <li>1080p@30fps HD video playback and capture with H.264 (AVC)</li>
  <li>720p playback with H.265 (HEVC)</li>
  <li>PCM/AAC+/MP3/WMA, ECNS, Audio+ post-processing</li>
  <li>Integrated ISP with support for image sensors up to 13MP</li>
  <li>40 pin low speed expansion connector</li>
  <li>60 pin high speed expansion connector</li>
  <li>6 x LED: 4xUser controlled, 2xRadio(BT and WLAN activity)</li>
  <li>Power/Reset and Volume Up/down</li>
  <li>8V~18V@3A</li>
  <li>Plug specification is inner diameter 1.7mm and outer diameter 4.8mm</li>
  <li>Ubuntu 16.04 or Android 6.0 Marshmallow based on Kernel 3.14LTS</li>
  <li>Android / Linux / Windows IoT Core Support</li>
  <li>85mm x 54mm</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.arrow.com/en/products/dragonboard410c/arrow-development-tools">Arrow Electronics</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/dragonboard_410c.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Sat, 29 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/dragonboard_410c/</guid>
    </item>

    <item>
      <title>FT232H</title>
      <link>https://circuitpython.org/blinka/ft232h/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/ft232h.jpg 300w,
               /assets/images/boards/large/ft232h.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/ft232h.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>Wouldn’t it be cool to drive a tiny OLED display, read a color sensor, or even just flash some LEDs directly from your computer?  Sure you can program an Arduino or Trinket to talk to these devices and your computer, but why can’t your computer just talk to those devices and sensors itself?  Well, now your computer can talk to devices using the Adafruit FT232H breakout board!</p>

<p>What can the FT232H chip do?  This chip from FTDI is similar to their USB to serial converter chips but adds a ‘multi-protocol synchronous serial engine’ which allows it to speak many common protocols like SPI, I2C, serial UART, JTAG, and more!  There’s even a handful of digital GPIO pins that you can read and write to do things like flash LEDs, read switches or buttons, and more.  The FT232H breakout is like adding a little swiss army knife for serial protocols to your computer!</p>

<p>This chip is powerful and useful to have when you want to use Python (for example) to quickly iterate and test a device that uses I2C, SPI or plain general purpose I/O. There’s no firmware to deal with, so you don’t have to deal with how to “send data to and from an Arduino which is then sent to and from” an electronic sensor or display or part.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/2264">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/ft232h.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 30 Sep 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/ft232h/</guid>
    </item>

    <item>
      <title>Giant Board</title>
      <link>https://circuitpython.org/blinka/giant_board/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/giant_board.jpg 300w,
               /assets/images/boards/large/giant_board.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/giant_board.jpg" alt="Image of Board">

<p>By Groboards</p> <p>The Giant Board is a super tiny single-board computer (SBC) based on the Adafruit Feather form factor. We always want more power in a smaller package, and the Giant Board delivers! It provides a small, powerful platform that is compatible with a wide range of pre-existing accessories. FeatherWing support makes the Giant Board a flexible, drop-in component for most Feather based projects.</p>

<p>We all love our microcontrollers, but in some cases they just don’t have the resources we need to carry out the projects we have in mind. By squeezing the power of an SBC into a package the size of a microcontroller board, the Giant Board relaxes memory, storage, and processing constraints and allows you to take your projects to the next level.</p>

<p>The Giant Board fills the gap between microcontrollers and other single-board computers. It makes a great alternative to a Raspberry Pi or BeagleBone in a space constrained project where you need more power than a typical microcontroller can provide. The Giant Board is based on a form factor that is traditionally used for microcontrollers, so power consumption is important, which is why the Giant Board offers low-power modes.</p>

<p>To leverage all that powerful hardware, the Giant Board runs Linux. Not just any Linux, but full Debian Linux! This gives developers and users access to an endless number of applications and libraries for their projects.</p>

<ul>
  <li>Processor: Microchip SAMA5D2 ARM® Cortex®-A5 Processor 500 MHz</li>
  <li>Memory: 128 MB DDR2 RAM</li>
  <li>Storage: microSD card</li>
  <li>Sensing: 6 x 12-bit ADC with 3.3 V reference and external trigger</li>
  <li>Actuation: 4 x 16-bit PWM with external trigger</li>
  <li>Connectivity: 1 x I²C, 1 x SPI, 1 x UART, more with Flexcom</li>
  <li>Power: via USB, with support for LiPo batteries</li>
  <li>Operating System: mainline Linux kernel</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.crowdsupply.com/groboards/giant-board">Crowd Supply</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/giant_board.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/giant_board/</guid>
    </item>

    <item>
      <title>Google Coral Dev Board</title>
      <link>https://circuitpython.org/blinka/google_coral/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/google_coral.jpg 300w,
               /assets/images/boards/large/google_coral.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/google_coral.jpg" alt="Image of Board">

<p>By Google</p> <p>A development board to quickly prototype on-device ML products. Scale from prototype to production with a removable system-on-module (SOM).</p>

<p>Edge TPU Module</p>
<ul>
  <li>CPU	NXP i.MX 8M SOC (quad Cortex-A53, Cortex-M4F)</li>
  <li>GPU	Integrated GC7000 Lite Graphics</li>
  <li>ML accelerator	Google Edge TPU coprocessor</li>
  <li>RAM	1 GB LPDDR4</li>
  <li>Flash memory	8 GB eMMC</li>
  <li>Wireless	Wi-Fi 2x2 MIMO (802.11b/g/n/ac 2.4/5GHz) Bluetooth 4.1</li>
  <li>Dimensions	48mm x 40mm x 5mm</li>
</ul>

<p>Baseboard</p>
<ul>
  <li>Flash memory	MicroSD slot</li>
  <li>USB	Type-C OTG Type-C power Type-A 3.0 host Micro-B serial console</li>
  <li>LAN	Gigabit Ethernet port</li>
  <li>Audio	3.5mm audio jack (CTIA compliant) Digital PDM microphone (x2) 2.54mm 4-pin terminal for stereo speakers</li>
  <li>Video	HDMI 2.0a (full size) 39-pin FFC connector for MIPI-DSI display (4-lane) 24-pin FFC connector for MIPI-CSI2 camera (4-lane)</li>
  <li>GPIO	3.3V power rail 40 - 255 ohms programmable impedance ~82 mA max current</li>
  <li>Power	5V DC (USB Type-C)</li>
  <li>Dimensions	88 mm x 60 mm x 24mm</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://coral.withgoogle.com/products/dev-board">Google</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/google_coral.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 13 May 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/google_coral/</guid>
    </item>

    <item>
      <title>Google Coral Dev Board Mini</title>
      <link>https://circuitpython.org/blinka/google_coral_mini/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/google_coral_mini.jpg 300w,
               /assets/images/boards/large/google_coral_mini.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/google_coral_mini.jpg" alt="Image of Board">

<p>By Google</p> <p>The Coral Dev Board Mini is a single-board computer that provides fast machine learning (ML) inferencing in a small form factor. It’s primarily designed as an evaluation device for the Accelerator Module (a surface-mounted module that provides the Edge TPU), but it’s also a fully-functional embedded system you can use for various on-device ML projects.</p>

<ul>
  <li>CPU	MediaTek 8167s SoC (Quad-core Arm Cortex-A35)</li>
  <li>GPU	IMG PowerVR GE8300 (integrated in SoC)</li>
  <li>ML accelerator	Google Edge TPU coprocessor</li>
  <li>RAM	2 GB LPDDR3</li>
  <li>Flash memory	8 GB eMMC</li>
  <li>Wireless	Wi-Fi 5 (802.11a/b/g/n/ac); Bluetooth 5.0</li>
  <li>Audio	3.5mm audio jack; digital PDM microphone; 2.54mm 2-pin speaker terminal;</li>
  <li>Video	micro HDMI (1.4); 24-pin FFC connector for MIPI-CSI2 camera (4-lane); 39-pin FFC connector for MIPI-DSI display (4-lane)</li>
  <li>Input/output 	3.5mm audio jack; digital PDM microphone; 2.54mm 2-pin speaker terminal; micro HDMI (1.4); 24-pin FFC connector for MIPI-CSI2 camera (4-lane); 39-pin FFC connector for MIPI-DSI display (4-lane)</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.seeedstudio.com/Coral-Dev-Board-Mini-p-4682.html">Seeed</a></li>
  <li><a href="https://www.mouser.com/new/google-coral/coral-dev-board-mini/">Mouser</a></li>
  <li><a href="https://www.arrow.com/en/products/g650-03324-01/google-corporation">Arrow</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/google_coral_mini.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 07 Dec 2020 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/google_coral_mini/</guid>
    </item>

    <item>
      <title>GreatFET One</title>
      <link>https://circuitpython.org/blinka/greatfet_one/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/greatfet_one.jpg 300w,
               /assets/images/boards/large/greatfet_one.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/greatfet_one.jpg" alt="Image of Board">

<p>By Great Scott Gadgets</p> <p><strong>GreatFET One</strong> from <a href="https://greatscottgadgets.com/">Great Scott Gadgets</a> is a hardware hacker’s best friend. At the center is a powerful NXP LPC4330 (Cortex M4 @ 204MHz) with two USB ports, one host and one peripheral, so it can act as a ‘man in the middle’ for USB interfacing. With an extensible, open source design, two USB ports, and 100 expansion pins, GreatFET One is your essential gadget for hacking, making, and reverse engineering. By adding expansion boards called neighbors, you can turn GreatFET One into a USB peripheral that does almost anything.</p>

<p>Whether you need an interface to an external chip, a logic analyzer, a debugger, or just a whole lot of pins to bit-bang, the versatile GreatFET One is the tool for you. Hi-Speed USB and a Python API allow GreatFET One to become your custom USB interface to the physical world.</p>

<ul>
  <li>programmable digital I/O</li>
  <li>serial protocols including SPI, I2C, UART, and JTAG</li>
  <li>logic analysis</li>
  <li>analog I/O (ADC/DAC)</li>
  <li>data acquisition</li>
  <li>debugging</li>
  <li>versatile USB functions including FaceDancer</li>
  <li>high-throughput hardware-assisted streaming serial engine</li>
  <li>four fabulous LEDs!</li>
</ul>

<p>GreatFET One ships in an ESD bag with a high-speed USB cable and a <a href="https://greatscottgadgets.com/wiggler">wiggler</a> for easy separation of neighbors. Enclosures and neighbors are sold separately.</p>

<p>GreatFET is a next generation <a href="https://www.adafruit.com/product/1279">GoodFET</a> intended to serve as your custom Hi-Speed USB peripheral through the addition of expansion boards called “neighbors”.</p>

<p>GreatFET is designed to provide a significant step up in capabilities from <a href="http://github.com/travisgoodspeed/goodfet">GoodFET</a> while making the design manufacturable at a lower cost than GoodFET. In addition to being designed for automated assembly, it can be hand-assembled with a soldering iron, though it is a more complicated assembly than GoodFET. An important similarity to GoodFET is that GreatFET has a USB bootloader in ROM, so it is possible to build a board by hand and install firmware onto it without the need of any external programming hardware.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4234">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/greatfet_one.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Fri, 15 May 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/greatfet_one/</guid>
    </item>

    <item>
      <title>Hifive Unleashed</title>
      <link>https://circuitpython.org/blinka/hifive_unleashed/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/hifive_unleashed.jpg 300w,
               /assets/images/boards/large/hifive_unleashed.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/hifive_unleashed.jpg" alt="Image of Board">

<p>By Sifive</p> <p>We founded SiFive to bring the power of open source to the semiconductor industry. We do this not only by supporting the RISC-V specification, but also by implementing the specification and getting usable chips into the hands of developers as quickly as we can. We did exactly that just over a year ago when we introduced the open source, Arduino-compatible HiFive1 dev board based on our Freedom Everywhere line of 32-bit microcontrollers. Today, we’re proud to be doing the same thing with our Freedom Unleashed 64-bit, Linux-capable system-on-chip (SoC) platform. Meet the HiFive Unleashed, the world’s first RISC-V-based, Linux-capable development board.</p>

<p>Industry skeptics have previously dismissed RISC-V as an academic project, low performance, and only for microcontrollers. HiFive Unleashed, featuring the SiFive Freedom U540 SoC, ends all of that. Linux and RISC-V were meant for each other, and the HiFive Unleashed dev board brings them together for the first time.</p>

<ul>
  <li>Processor: SiFive Freedom U540 SoC</li>
  <li>Memory: 8 GB DDR4 with ECC</li>
  <li>Connectivity: Gigabit Ethernet port</li>
  <li>Flash: 32 MB quad SPI flash from ISSI</li>
  <li>Storage: microSD card for removable storage</li>
  <li>Expansion: FMC connector for future expansion</li>
</ul>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://www.crowdsupply.com/sifive/hifive-unleashed">Crowd Supply</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/hifive_unleashed.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 25 Mar 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/hifive_unleashed/</guid>
    </item>

    <item>
      <title>Jetson Nano Dev Kit</title>
      <link>https://circuitpython.org/blinka/jetson_nano/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/jetson_nano.jpg 300w,
               /assets/images/boards/large/jetson_nano.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/jetson_nano.jpg" alt="Image of Board">

<p>By NVIDIA</p> <p>The NVIDIA® Jetson Nano™ Developer Kit delivers the compute performance to run modern AI workloads at unprecedented size, power, and cost. Developers, learners, and makers can now run AI frameworks and models for applications like image classification, object detection, segmentation, and speech processing.</p>

<p>The developer kit can be powered by micro-USB and comes with extensive I/Os, ranging from GPIO to CSI. This makes it simple for developers to connect a diverse set of new sensors to enable a variety of AI applications. And it is incredibly power-efficient, consuming as little as 5 watts.</p>

<ul>
  <li>GPU   128-core Maxwell™ GPU</li>
  <li>CPU   4-core ARM A57</li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Memory    4 GB 64 Bit LPDDR4</td>
          <td>25.6 GB/s</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>Storage   microSD (not included)</li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Video Encode  4Kp30</td>
          <td>4x 1080p30</td>
          <td>8x 720p30 (H.264/H.265)</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Video Decoder 4Kp60</td>
          <td>2x 4Kp30</td>
          <td>8x 1080p30</td>
          <td>16x 720p30</td>
          <td>(H.264/H.265)</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>Size  100mm x 80mm x 29mm</li>
  <li>Deployment    Module (Jetson Nano)</li>
  <li>USB   5</li>
  <li>Ethernet  1</li>
  <li>I2C   1</li>
  <li>SPI   1</li>
  <li>UART  1</li>
  <li>GPIO  1</li>
  <li>Display Interface HDMI</li>
  <li>Operating Systems   Linux</li>
  <li>PC Card Interface SD</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.arrow.com/products/945-13450-0000-000/nvidia">Arrow</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/jetson_nano.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 10 Sep 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/jetson_nano/</guid>
    </item>

    <item>
      <title>Jetson TX1</title>
      <link>https://circuitpython.org/blinka/jetson_tx1/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/jetson_tx1.jpg 300w,
               /assets/images/boards/large/jetson_tx1.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/jetson_tx1.jpg" alt="Image of Board">

<p>By NVIDIA</p> <p>The world’s first supercomputer on a module, Jetson TX1 is capable of delivering the performance and power efficiency needed for the latest visual computing applications. It’s built around the revolutionary NVIDIA Maxwell™ architecture with 256 CUDA cores delivering over 1 TeraFLOPs of performance. 64-bit CPUs, 4K video encode and decode capabilities, and a camera interface capable of 1400 MPix/s make this the best system for embedded deep learning, computer vision, graphics, and GPU computing.</p>

<ul>
  <li>GPU    256-core NVIDIA Maxwell™ GPU</li>
  <li>CPU    Quad-Core ARM® Cortex®-A57 MPCore</li>
  <li>Memory    4GB 64-bit LPDDR4 Memory</li>
  <li>Storage    16GB eMMC</li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Video: 4K 60 Hz decode</td>
          <td>4K 30 Hz encode</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>USB   USB 3.0 + USB 2.0</li>
  <li>Ethernet  1</li>
  <li>I2C   4</li>
  <li>CAN  1</li>
  <li>SPI   3</li>
  <li>UART  1</li>
  <li>GPIO  1</li>
  <li>Display Interface HDMI</li>
  <li>Operating Systems  Linux Ubuntu</li>
  <li>PC Card Interface SD</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.arrow.com/en/products/900-82180-0001-000/nvidia">Arrow</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/jetson_tx1.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/jetson_tx1/</guid>
    </item>

    <item>
      <title>Jetson TX2 Dev Kit</title>
      <link>https://circuitpython.org/blinka/jetson_tx2/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/jetson_tx2.jpg 300w,
               /assets/images/boards/large/jetson_tx2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/jetson_tx2.jpg" alt="Image of Board">

<p>By NVIDIA</p> <p>The Jetson TX2 Developer Kit gives you a fast, easy way to develop hardware and software for the Jetson TX2 AI supercomputer on a module. It exposes the hardware capabilities and interfaces of the developer board, comes with design guides and other documentation, and is pre-flashed with a Linux development environment.</p>

<p>It also supports NVIDIA Jetpack—a complete SDK that includes the BSP, libraries for deep learning, computer vision, GPU computing, multimedia processing, and much more.</p>

<ul>
  <li>GPU    NVIDIA Pascal™ Architecture GPU</li>
  <li>CPU    2 Denver 64-bit CPUs + Quad-Core A57 Complex</li>
  <li>Memory    8 GB L128 bit DDR4 Memory</li>
  <li>Storage    32 GB eMMC 5.1 Flash Storage</li>
  <li>Connectivity to 802.11ac Wi-Fi and Bluetooth-Enabled Devices</li>
  <li>10/100/1000BASE-T Ethernet</li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Video: 4K 60 Hz decode</td>
          <td>4K 30 Hz encode</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>USB   USB 3.0 + USB 2.0</li>
  <li>Ethernet  1</li>
  <li>I2C   1</li>
  <li>CAN  1</li>
  <li>SPI   1</li>
  <li>UART  1</li>
  <li>GPIO  1</li>
  <li>Display Interface HDMI</li>
  <li>Operating Systems  Linux Ubuntu 64-bit v14.04</li>
  <li>PC Card Interface SD</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.arrow.com/en/products/945-82771-0000-000/nvidia">Arrow</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/jetson_tx2.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/jetson_tx2/</guid>
    </item>

    <item>
      <title>Jetson AGX Xavier Dev Kit</title>
      <link>https://circuitpython.org/blinka/jetson_xavier/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/jetson_xavier.jpg 300w,
               /assets/images/boards/large/jetson_xavier.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/jetson_xavier.jpg" alt="Image of Board">

<p>By NVIDIA</p> <p>With the NVIDIA Jetson AGX Xavier developer kit, you can easily create and deploy end-to-end AI robotics applications for manufacturing, delivery, retail, agriculture, and more.</p>

<p>Supported by NVIDIA JetPack and DeepStream SDKs, as well as CUDA®, cuDNN, and TensorRT software libraries, the kit provides all the tools you need to get started right away. And because it’s powered by the new NVIDIA Xavier processor, you now have more than 20X the performance and 10X the energy efficiency of its predecessor, the NVIDIA Jetson TX2.</p>

<ul>
  <li>GPU    512-core Volta GPU with Tensor Cores</li>
  <li>CPU    8-core ARM v8.2 64-bit CPU, 8MB L2 + 4MB L3</li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Memory    16GB 256-Bit LPDDR4x</td>
          <td>137GB/s</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>Storage    32 GB eMMC 5.1</li>
  <li>Connectivity to 802.11ac Wi-Fi and Bluetooth-Enabled Devices</li>
  <li>10/100/1000BASE-T Ethernet</li>
  <li>
    <table>
      <tbody>
        <tr>
          <td>Video: (2x) 4Kp60</td>
          <td>HEVC/(2x) 4Kp60</td>
          <td>12-Bit Support</td>
        </tr>
      </tbody>
    </table>
  </li>
  <li>USB-C   2x USB 3.1, DP (Optional), PD (Optional) Close-System Debug and Flashing Support on 1 Port</li>
  <li>Ethernet  1</li>
  <li>I2C   1</li>
  <li>CAN  1</li>
  <li>SPI   1</li>
  <li>UART  1</li>
  <li>GPIO  1</li>
  <li>Display Interface HDMI 2.0, eDP 1.2a, DP 1.4</li>
  <li>Operating Systems  Linux Ubuntu 64-bit v14.04</li>
  <li>PC Card Interface SD/UFS</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.arrow.com/en/products/945-82771-0000-000/nvidia">Arrow</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/jetson_xavier.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/jetson_xavier/</guid>
    </item>

    <item>
      <title>Jetson Xavier NX</title>
      <link>https://circuitpython.org/blinka/jetson_xavier_nx/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/jetson_xavier_nx.jpg 300w,
               /assets/images/boards/large/jetson_xavier_nx.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/jetson_xavier_nx.jpg" alt="Image of Board">

<p>By NVIDIA</p> <p>Jetson Xavier NX delivers up to 21 TOPS for running modern AI workloads, consumes as little as 10 watts of power, and has a compact form factor smaller than a credit card. It can run modern neural networks in parallel and process data from multiple high-resolution sensors, opening the door for embedded and edge computing devices that demand increased performance but are constrained by size, weight, and power budgets.</p>

<ul>
  <li>GPU    384-core NVIDIA Volta™ GPU with 48 Tensor Cores</li>
  <li>CPU    800/1100 MHz 6-core NVIDIA Carmel ARM®v8.2 64-bit CPU 6MB L2 + 4MB L3</li>
  <li>Memory    8 GB 128-bit LPDDR4x @ 1600 MHz 51.2GB/s</li>
  <li>Storage    16 GB eMMC 5.1</li>
  <li>Power    10/15W</li>
  <li>PCIe    1 x1 + 1x4</li>
  <li>CSI Camera    Up to 6 cameras (36 via virtual channels)</li>
  <li>Video Encode    2x 4K @ 30 (HEVC)</li>
  <li>Video Decode    2x 4K @ 60 (HEVC)</li>
  <li>Display    2 multi-mode DP 1.4/eDP 1.4/HDMI 2.0</li>
  <li>DL Accelerator    2x NVDLA Engines</li>
  <li>Networking    10/100/1000 BASE-T Ethernet</li>
</ul>

<h2 id="learn-more">Learn More</h2>
<ul>
  <li><a href="https://developer.nvidia.com/embedded/jetson-xavier-nx">NVIDIA</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/jetson_xavier_nx.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 25 Mar 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/jetson_xavier_nx/</guid>
    </item>

    <item>
      <title>LubanCat I.MX6ULL</title>
      <link>https://circuitpython.org/blinka/lubancat_i.mx6ull/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/unknown.jpg 300w,
               /assets/images/boards/large/unknown.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/unknown.jpg" alt="Image of Board">

<p>By LubanCat</p> <p>Oops! Looks like we don’t know anything about this board. This means it’s likely very new.</p>

<h2 id="purchase">Purchase</h2>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/lubancat_i.mx6ull.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Fri, 15 Jan 2021 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/lubancat_i.mx6ull/</guid>
    </item>

    <item>
      <title>MCP2221</title>
      <link>https://circuitpython.org/blinka/mcp2221/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/mcp2221.jpg 300w,
               /assets/images/boards/large/mcp2221.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/mcp2221.jpg" alt="Image of Board">

<p>By Adafruit</p> <p>Wouldn’t it be cool to drive a <a href="https://www.adafruit.com/categories/98">tiny OLED display</a>, read a <a href="https://www.adafruit.com/products/1334">color sensor</a>, or even just flash some LEDs directly from your computer?  Sure you can program an <a href="https://www.adafruit.com/products/50">Arduino</a> or <a href="https://www.adafruit.com/products/2000">Trinket</a> to talk to these devices and your computer, but why can’t your computer just talk to those devices and sensors itself?  Well, now your computer <em>can</em> talk to devices using the Adafruit MCP2221A breakout board!</p>

<p>What can the MCP2221 chip do?  This chip from <a href="https://www.microchip.com/wwwproducts/en/MCP2221A">Microchip</a> is similar to a USB to serial converter chips but adds a GPIO and I2C interface as well. The analog/digital GPIO pins can act as 10-bit analog inputs (ADC) and there’s even a 5-bit DAC output. The I2C interface is great for talking to OLEDs, sensors, PWM drivers, its the most popular interface for small devices. You can use the GPIO to do things like flash LEDs, read switches or buttons, and more. The MCP2221A breakout is like adding a little swiss army knife for serial protocols to your computer!</p>

<p>This chip is powerful and useful to have when you want to use Python (for example) to quickly iterate and test a device that uses I2C or general purpose digital and analog I/O. There’s no firmware to deal with, so you don’t have to deal with how to “send data to and from an Arduino which is then sent to and from” an electronic sensor or display or part.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4471">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/mcp2221.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 25 Mar 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/mcp2221/</guid>
    </item>

    <item>
      <title>NanoPi NEO Air</title>
      <link>https://circuitpython.org/blinka/nanopi_neo_air/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/nanopi_neo_air.jpg 300w,
               /assets/images/boards/large/nanopi_neo_air.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/nanopi_neo_air.jpg" alt="Image of Board">

<p>By FriendlyElec</p> <p>LTS - long term support, We will not make any changes to this model and will provide support as long as possible</p>

<ul>
  <li>CPU: Allwinner H3, Quad-core Cortex-A7 Up to 1.2GHz</li>
  <li>RAM: 512MB DDR3 RAM</li>
  <li>Storage: 8GB eMMC</li>
  <li>WiFi: 802.11b/g/n</li>
  <li>Bluetooth: 4.0 dual mode</li>
  <li>MicroSD Slot x 1</li>
  <li>GPIO: 2.54mm pitch 24pin. It includes UART, SPI, I2C, IO etc</li>
  <li>PCB Size: 40 x 40mm</li>
  <li>Power Supply: DC 5V/2A</li>
  <li>OS/Software: u-boot, UbuntuCore</li>
  <li>Weight: 7.5g(WITHOUT Pin-headers); 9.7g(WITH Pin-headers)</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.friendlyarm.com/index.php?route=product/product&amp;product_id=151">FriendlyElec</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/nanopi_neo_air.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 20 Jan 2021 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/nanopi_neo_air/</guid>
    </item>

    <item>
      <title>Odroid C2</title>
      <link>https://circuitpython.org/blinka/odroid_c2/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/odroid_c2.jpg 300w,
               /assets/images/boards/large/odroid_c2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/odroid_c2.jpg" alt="Image of Board">

<p>By Hardkernel co., Ltd.</p> <p>The ODROID-C2 is a 64-bit quad-core single board computer(SBC) that is one of the most cost-effective 64bit development boards available in the ARM world. It can function as a home theater set-top box, a general purpose computer for web browsing, gaming and socializing, a compact tool for college or office work, a prototyping device for hardware tinkering, a controller for home automation, a workstation for software development, and much more.</p>

<p>Some of the modern operating systems that run on the ODROID-C2 are Ubuntu, Android, ARCHLinux, Debian, with thousands of free open-source software packages available. The ODROID-C2 is an ARM device — the most advanced architecture for mobile devices and embedded 64-bit computing. The ARM processor’s small size, reduced complexity and low power consumption makes it very suitable for miniaturized devices such as wearables and embedded controllers.</p>

<ul>
  <li>Amlogic S905 ARM Cortex-A53(ARMv8) 1.5Ghz quad core CPUs</li>
  <li>Mali-450 GPU</li>
  <li>Supports OpenGL ES 2.0 / 1.1</li>
  <li>3 Pixel-processors</li>
  <li>2 Vertex shader processors</li>
  <li>2GB DDR3 SDRAM</li>
  <li>Gigabit Ethernet</li>
  <li>HDMI 2.0 4K/60Hz display</li>
  <li>H.265 4K/60FPS and H.264 4K/30FPS capable VPU</li>
  <li>40pin GPIOs + 7pin I2S</li>
  <li>eMMC5.0 HS400 Flash Storage slot</li>
  <li>UHS-1 SDR50 MicroSD Card slot</li>
  <li>USB 2.0 Host x 4</li>
  <li>USB OTG x 1 (power + data capable)</li>
  <li>Infrared(IR) Receiver</li>
  <li>Ubuntu 16.04 or Android 6.0 Marshmallow based on Kernel 3.14LTS</li>
  <li>Armbian Support</li>
  <li>Guaranteed production of C2 to the end of 2019</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.hardkernel.com/shop/odroid-c2/">Hardkernel</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/odroid_c2.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/odroid_c2/</guid>
    </item>

    <item>
      <title>Odroid C4</title>
      <link>https://circuitpython.org/blinka/odroid_c4/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/odroid_c4.jpg 300w,
               /assets/images/boards/large/odroid_c4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/odroid_c4.jpg" alt="Image of Board">

<p>By Hardkernel co., Ltd.</p> <p>ODROID-C4 is a new generation single board computer that is more energy efficient and faster performing than ODROID-C2 which was introduced over four years ago as the world’s first affordable ARM 64bit computer.</p>

<p>The main CPU of the ODROID-C4 is built with a quad-core Cortex-A55 cluster with a new generation Mali-G31 GPU. The A55 cores run at 2.0Ghz without thermal throttling using the stock heat sink allowing a robust and quiet computer. The CPU multi-core performance is around 40% faster, and the system DRAM performance is 50% faster than the ODROID-C2.</p>

<ul>
  <li>Amlogic S905X3 12nm Processor</li>
  <li>Mali-G31 MP2 GPU with 4 x Execution Engines (650Mhz)</li>
  <li>DDR4 4GiB with 32-bit bus width</li>
  <li>1x eMMC connector (8/16/32/64GiB are available)</li>
  <li>1x Micro SD slot (DS/HS mode up to UHS-I SDR104)</li>
  <li>1 x GbE LAN ports (RJ45, supports 10/100/1000 Mbps)</li>
  <li>1 x HDMI digital output</li>
  <li>1 x Optional SPDIF optical output</li>
  <li>40pin GPIOs + 7pin I2S</li>
  <li>1 x Debug serial console (UART)</li>
  <li>4 x USB 3.0 Host ports</li>
  <li>1 x USB 2.0 OTG port for Host or Device mode. (No power input)</li>
  <li>IR receiver for remote controller</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.hardkernel.com/shop/odroid-c4/">Hardkernel</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/odroid_c4.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Fri, 15 May 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/odroid_c4/</guid>
    </item>

    <item>
      <title>Odroid N2</title>
      <link>https://circuitpython.org/blinka/odroid_n2/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/odroid_n2.jpg 300w,
               /assets/images/boards/large/odroid_n2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/odroid_n2.jpg" alt="Image of Board">

<p>By Hardkernel co., Ltd.</p> <p>ODROID-N2 is a new generation single board computer that is more powerful, more stable, and faster performing than N1.
The main CPU of the N2 is based on big.Little architecture which integrates a quad-core ARM Cortex-A73 CPU cluster and a dual core Cortex-A53 cluster with a new generation Mali-G52 GPU.
Thanks to the modern 12nm silicon technology, the A73 cores runs at 1.8Ghz without thermal throttling using the stock metal-housing heatsink allowing a robust and quiet computer.
The CPU multi-core performance is around 20% faster and the GPU is 10% faster than the N1. The N2’s DDR4 RAM is running at 1320Mhz with 1.2volt low power consumption.
The large metal housing heatsink is designed to optimize the CPU and RAM heat dissipation and minimize throttling. The CPU is placed on the bottom side of the PCB to establish great thermal characteristics.</p>

<ul>
  <li>Amlogic S922X ARM Cortex-A73(ARMv8-A) 1.8Ghz quad core CPU</li>
  <li>ARM Cortex-A53(ARMv8) 1.9Ghz dual core CPU</li>
  <li>Mali-G52 GPU</li>
  <li>Supports OpenGL ES 3.2 / 3.1 / 3.0 / 2.0 / 1.1</li>
  <li>2GB or 4GB DDR4 SDRAM</li>
  <li>Gigabit Ethernet</li>
  <li>HDMI 2.0 4K/60Hz display</li>
  <li>Composite Video</li>
  <li>40pin GPIO Port</li>
  <li>eMMC5.0 HS400 Flash Storage slot</li>
  <li>UHS-1 SDR50 MicroSD Card slot</li>
  <li>USB 3.0 Host x 4</li>
  <li>USB 2.0 OTG x 1 (power + data capable)</li>
  <li>Infrared(IR) Receiver</li>
  <li>Armbian Support</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.hardkernel.com/shop/odroid-n2-with-2gbyte-ram/">Hardkernel</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/odroid_n2.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/odroid_n2/</guid>
    </item>

    <item>
      <title>Odroid XU4</title>
      <link>https://circuitpython.org/blinka/odroid_xu4/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/odroid_xu4.jpg 300w,
               /assets/images/boards/large/odroid_xu4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/odroid_xu4.jpg" alt="Image of Board">

<p>By Hardkernel co., Ltd.</p> <p>ODROID-XU4 is powered by ARM® big.LITTLE™ technology, the Heterogeneous Multi-Processing (HMP) solution.</p>

<p>ODROID-XU4 is a new generation of computing device with more powerful, more energy-efficient hardware and a smaller form factor. Offering open source support, the board can run various flavors of Linux, including the latest Ubuntu 16.04 and Android 4.4 KitKat, 5.0 Lollipop and 7.1 Nougat.
By implementing the eMMC 5.0, USB 3.0 and Gigabit Ethernet interfaces, the ODROID-XU4 boasts amazing data transfer speeds, a feature that is increasingly required to support advanced processing power on ARM devices.
This allows users to truly experience an upgrade in computing, especially with faster booting, web browsing, networking, and 3D games.</p>

<ul>
  <li>Samsung Exynos5422 Cortex™-A15 2Ghz and Cortex™-A7 Octa core CPUs</li>
  <li>Mali-T628 MP6(OpenGL ES 3.1/2.0/1.1 and OpenCL 1.2 Full profile)</li>
  <li>2Gbyte LPDDR3 RAM PoP stacked</li>
  <li>eMMC5.0 HS400 Flash Storage</li>
  <li>2 x USB 3.0 Host, 1 x USB 2.0 Host</li>
  <li>Gigabit Ethernet port</li>
  <li>HDMI 1.4a for display</li>
  <li>Size : 83 x 58 x 20 mm approx.(excluding cooler)</li>
  <li>Power: 5V/4A input</li>
  <li>Linux Kernel 4.14 LTS</li>
  <li>We guarantee the production of XU4 to year 2021, but expect to continue production long after.</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.hardkernel.com/shop/odroid-xu4-special-price/">Hardkernel</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/odroid_xu4.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Fri, 29 May 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/odroid_xu4/</guid>
    </item>

    <item>
      <title>Odroid XU4Q</title>
      <link>https://circuitpython.org/blinka/odroid_xu4q/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/odroid_xu4q.jpg 300w,
               /assets/images/boards/large/odroid_xu4q.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/odroid_xu4q.jpg" alt="Image of Board">

<p>By Hardkernel co., Ltd.</p> <p>ODROID-XU4Q
is powered by ARM® big.LITTLE™ technology, the Heterogeneous Multi-Processing (HMP) solution.</p>

<p>The ODROID-XU4Q is the same board as the ODROID-XU4 but with a large heatsink instead of a fan which makes it quiet.</p>

<p>ODROID-XU4 is a new generation of computing device with more powerful, more energy-efficient hardware and a smaller form factor. Offering open source support, the board can run various flavors of Linux, including the latest Ubuntu 16.04 and Android 4.4 KitKat, 5.0 Lollipop and 7.1 Nougat.
By implementing the eMMC 5.0, USB 3.0 and Gigabit Ethernet interfaces, the ODROID-XU4 boasts amazing data transfer speeds, a feature that is increasingly required to support advanced processing power on ARM devices.
This allows users to truly experience an upgrade in computing, especially with faster booting, web browsing, networking, and 3D games.</p>

<ul>
  <li>Samsung Exynos5422 Cortex™-A15 2Ghz and Cortex™-A7 Octa core CPUs</li>
  <li>Mali-T628 MP6(OpenGL ES 3.1/2.0/1.1 and OpenCL 1.2 Full profile)</li>
  <li>2Gbyte LPDDR3 RAM PoP stacked</li>
  <li>eMMC5.0 HS400 Flash Storage</li>
  <li>2 x USB 3.0 Host, 1 x USB 2.0 Host</li>
  <li>Gigabit Ethernet port</li>
  <li>HDMI 1.4a for display</li>
  <li>Size : 83 x 58 x 20 mm approx.(excluding cooler)</li>
  <li>Power: 5V/4A input</li>
  <li>Linux Kernel 4.14 LTS</li>
  <li>We guarantee the production of XU4 to year 2021, but expect to continue production long after.</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.hardkernel.com/shop/odroid-xu4-special-price/">Hardkernel</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/odroid_xu4q.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Fri, 29 May 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/odroid_xu4q/</guid>
    </item>

    <item>
      <title>Onion Omega2+</title>
      <link>https://circuitpython.org/blinka/onion_omega2plus/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/onion_omega2plus.jpg 300w,
               /assets/images/boards/large/onion_omega2plus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/onion_omega2plus.jpg" alt="Image of Board">

<p>By Onion Corporation</p> <p>Ever wanted your own Linux-based IoT computer? A small one, that can be battery powered? The Onion Omega2 is sort of in-between a microcontroller (like an Arduino/CircuitPython/MakeCode running chip) and a full-fledged microcomputer (like Raspbery Pi). What you get is a bite-sized development board that combines the power-efficiency of the Arduino and the flexibility of the Raspberry Pi!</p>

<p>So, for example, it runs Linux, but isn’t going to replace your desktop computer. It’s low power and has a static filesystem, but still requires some time to boot up. It’s based on the MediaTek MT7688, a WiFi SoC that was initially designed for devices like WiFi routers or complex IoT devices. It comes with a variant of OpenWRT (nicknamed Onion OS) that is a slimmed down version of Linux. It’s not going to run node.js or minecraft but it is Linux. So, you get WiFi built in, and a full TCP/IP stack with SSL/TLS with all the scripting/programming language support that you expect.</p>

<p>Unlike a Raspberry Pi, you don’t get a desktop or even a console on HDMI. Instead, you use a serial connection/ssh and the command line, or the simplified webpage interface to program it. So it’s good if you have a bit of experience with those things!</p>

<p>Where it excels is as a physical computing platform, with hardware and WiFi. Wanna know how to blink an LED, or even multiple (!) LEDs? You can do that! You’ll be able to read switches and use shift registers. Blinking text? No problem! A 7-Segment display and an LCD screen are included! The Maker Kit even comes with relay, PWM/servo and OLED add-ons so you can have a display and robotics interfacing. Comes with all the fixins’ to get comfortable with IoT and programming languages, including Python, C++, Node js, php, Bash, Ruby, Perl, Lua, G, and more!</p>

<p>This maker kit has everything you need to fully build and prototype just about any kind of project you can think of with Onion Omega2+. Once you have your project or product well-developed you can then purchase individual Omega2’s and add-on boards from Onion.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/3808">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/onion_omega2plus.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 22 Apr 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/onion_omega2plus/</guid>
    </item>

    <item>
      <title>Orange Pi 2</title>
      <link>https://circuitpython.org/blinka/orange_pi_2/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/orange_pi_2.jpg 300w,
               /assets/images/boards/large/orange_pi_2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/orange_pi_2.jpg" alt="Image of Board">

<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>Orange Pi 2 is for anyone who wants to start creating with technology – not just consuming it. It’s a simple, fun, useful tool that you can use to start taking control of the world around you.</p>

<ul>
  <li>H3 Quad-core Cortex-A7 H.265/HEVC 4K</li>
  <li>Mali400MP2 GPU @600MHz</li>
  <li>Supports OpenGL ES 2.0</li>
  <li>1GB DDR3 (shared with GPU)</li>
  <li>TF card (Max. 32GB) / MMC card slot</li>
  <li>10/100M Ethernet RJ45</li>
  <li>A CSI input connector Camera</li>
  <li>Supports 8-bit YUV422 CMOS sensor interface</li>
  <li>Supports CCIR656 protocol for NTSC and PAL</li>
  <li>Supports SM pixel camera sensor</li>
  <li>Supports video capture solution up to 1080p@30fps</li>
  <li>MIC</li>
  <li>Supports HDMI output with HDCP</li>
  <li>Supports HDMI CEC</li>
  <li>Supports HDMI 30 function</li>
  <li>Integrated CVBS</li>
  <li>Supports simultaneous output of HDMI and CVBS</li>
  <li>v3.5 mm Jack and HDMI</li>
  <li>DC input can supply power, but USB OTG input don’t supply power</li>
  <li>Four USB 2.0 HOST, one USB 2.0 OTG</li>
  <li>Power Button(SW4)</li>
  <li>Recovery Button(SW2)</li>
  <li>UBoot Button(SW3)</li>
  <li>40 Pins Header</li>
  <li>GPIO(1x3) pin</li>
  <li>UART, ground.</li>
  <li>Power led &amp; Status led</li>
  <li>IR input, POWER</li>
  <li>Android Ubuntu, Debian, Rasberry Pi Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/store/1553371">Aliexpress</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/orange_pi_2.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 11 May 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_2/</guid>
    </item>

    <item>
      <title>Orange Pi Lite</title>
      <link>https://circuitpython.org/blinka/orange_pi_lite/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/orange_pi_lite.png 300w,
               /assets/images/boards/large/orange_pi_lite.png 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/orange_pi_lite.png" alt="Image of Board">

<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>What’s Orange Pi Lite？
It’s an open-source single-board computer. It can run Android 4.4, Ubuntu, Debian Image. It uses the AllWinner H3 SoC, and has 512MB DDR3 SDRAM.</p>

<p>What can I do with Orange Pi Lite?
You can use it to build…
A computer
A wireless server
Games
Music and sounds
HD video
A speaker
Android
Scratch
Pretty much anything else, because Orange Pi is open source</p>

<p>Who’s it for?
Orange Pi Lite is for anyone who wants to start creating with technology – not just consuming it. It’s a simple, fun, useful tool that you can use to start taking control of the world around you.</p>

<ul>
  <li>H3 Quad-core Cortex-A7 H.265/HEVC 4K</li>
  <li>Mali400MP2 GPU @600MHz</li>
  <li>Supports OpenGL ES 2.0</li>
  <li>512MB DDR3 (shared with GPU)</li>
  <li>TF card (Max. 32GB) / MMC card slot</li>
  <li>WiFi with external antenna</li>
  <li>A CSI input connector Camera</li>
  <li>Supports 8-bit YUV422 CMOS sensor interface</li>
  <li>Supports CCIR656 protocol for NTSC and PAL</li>
  <li>Supports SM pixel camera sensor</li>
  <li>Supports video capture solution up to 1080p@30fps</li>
  <li>MIC</li>
  <li>Supports HDMI output with HDCP</li>
  <li>Supports HDMI CEC</li>
  <li>Supports HDMI 30 function</li>
  <li>Integrated CVBS</li>
  <li>Supports simultaneous output of HDMI and CVBS</li>
  <li>vDC input can supply power, but USB OTG input don’t supply power</li>
  <li>Two USB 2.0 HOST, one USB 2.0 OTG</li>
  <li>Power Button(SW4)</li>
  <li>40 Pins Header.</li>
  <li>UART, ground.</li>
  <li>Power led &amp; Status led</li>
  <li>IR input, POWER</li>
  <li>Android Ubuntu, Debian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/item/32662738571.html?spm=a2g0o.productlist.0.0.756017c14GjaGI&amp;algo_pvid=eb42f805-f4da-4d5b-8e7d-a95ba887558d&amp;algo_expid=eb42f805-f4da-4d5b-8e7d-a95ba887558d-0&amp;btsid=15fd8f3d-5a4c-41da-9cda-329a4cc9f037&amp;ws_ab_test=searchweb0_0,searchweb201602_5,searchweb201603_53">Aliexpress</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/orange_pi_lite.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Sat, 18 Jan 2020 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_lite/</guid>
    </item>

    <item>
      <title>Orange Pi One</title>
      <link>https://circuitpython.org/blinka/orange_pi_one/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/orange_pi_one.png 300w,
               /assets/images/boards/large/orange_pi_one.png 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/orange_pi_one.png" alt="Image of Board">

<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>What’s Orange Pi One？ It’s an open-source single-board computer. It can run Android 4.4, Ubuntu, Debian Image. It uses the AllWinner H3 SoC, and has 512MB DDR3 SDRAM</p>

<ul>
  <li>H3 Quad-core Cortex-A7 H.265/HEVC 4K</li>
  <li>Mali400MP2 GPU @600MHz</li>
  <li>Supports OpenGL ES 2.0</li>
  <li>512MB DDR3 (shared with GPU)</li>
  <li>TF card (Max. 32GB) / MMC card slot</li>
  <li>10/100M Ethernet RJ45</li>
  <li>A CSI input connector Camera</li>
  <li>Supports 8-bit YUV422 CMOS sensor interface</li>
  <li>Supports CCIR656 protocol for NTSC and PAL</li>
  <li>Supports SM pixel camera sensor</li>
  <li>Supports video capture solution up to 1080p@30fps</li>
  <li>MIC</li>
  <li>Supports HDMI output with HDCP</li>
  <li>Supports HDMI CEC</li>
  <li>Supports HDMI 30 function</li>
  <li>Integrated CVBS</li>
  <li>Supports simultaneous output of HDMI and CVBS</li>
  <li>vDC input can supply power, but USB OTG input don’t supply power</li>
  <li>One USB 2.0 HOST, one USB 2.0 OTG</li>
  <li>Power Button(SW4)</li>
  <li>40 Pins Header</li>
  <li>Power led &amp; Status led</li>
  <li>IR input, POWER</li>
  <li>Android Ubuntu, Debian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/item/32603308880.html?spm=2114.12010612.8148356.1.71126d5axQJcvl">Aliexpress</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/orange_pi_one.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Sat, 18 Jan 2020 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_one/</guid>
    </item>

    <item>
      <title>Orange Pi PC</title>
      <link>https://circuitpython.org/blinka/orange_pi_pc/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/orange_pi_pc.jpg 300w,
               /assets/images/boards/large/orange_pi_pc.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/orange_pi_pc.jpg" alt="Image of Board">

<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>What’s Orange Pi PC？It’s an open-source single-board computer. It can run Android 4.4, Ubuntu, Debian Image. It uses the AllWinner H3 SoC, and has 1GB DDR3 SDRAM.</p>

<ul>
  <li>H3 Quad-core Cortex-A7 H.265/HEVC 4K</li>
  <li>Mali400MP2 GPU @600MHz</li>
  <li>Supports OpenGL ES 2.0</li>
  <li>1GB DDR3 (shared with GPU)</li>
  <li>TF card (Max. 32GB) / MMC card slot</li>
  <li>10/100M Ethernet RJ45</li>
  <li>A CSI input connector Camera</li>
  <li>Supports 8-bit YUV422 CMOS sensor interface</li>
  <li>Supports CCIR656 protocol for NTSC and PAL</li>
  <li>Supports SM pixel camera sensor</li>
  <li>Supports video capture solution up to 1080p@30fps</li>
  <li>MIC</li>
  <li>Supports HDMI output with HDCP</li>
  <li>Supports HDMI CEC</li>
  <li>Supports HDMI 30 function</li>
  <li>Integrated CVBS</li>
  <li>Supports simultaneous output of HDMI and CVBS</li>
  <li>v3.5 mm Jack and HDMI</li>
  <li>vDC input can supply power, but USB OTG input don’t supply power</li>
  <li>Three USB 2.0 HOST, one USB 2.0 OTG</li>
  <li>Power Button(SW4)</li>
  <li>40 Pins Header</li>
  <li>GPIO(1x3) pin</li>
  <li>UART, ground.</li>
  <li>Power led &amp; Status led</li>
  <li>IR input, POWER</li>
  <li>Android Ubuntu, Debian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/store/product/Orange-Pi-PC-linux-and-android-mini-PC-Beyond-Raspberry-Pi-2/1553371_32448079125.html">Aliexpress</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/orange_pi_pc.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 04 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_pc/</guid>
    </item>

    <item>
      <title>Orange Pi PC Plus</title>
      <link>https://circuitpython.org/blinka/orange_pi_pc_plus/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/orange_pi_pc_plus.jpg 300w,
               /assets/images/boards/large/orange_pi_pc_plus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/orange_pi_pc_plus.jpg" alt="Image of Board">

<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>What’s Orange Pi PC Plus？</p>

<p>It’s an open-source single-board computer. It can run Android 4.4, Ubuntu, Debian Image. It uses the AllWinner H3 SoC, and has 1GB DDR3 SDRAM.</p>

<ul>
  <li>H3 Quad-core Cortex-A7 H.265/HEVC 4K</li>
  <li>Mali400MP2 GPU @600MHz</li>
  <li>Supports OpenGL ES 2.0</li>
  <li>1GB DDR3 (shared with GPU)</li>
  <li>TF card (Max. 32GB) / MMC card slot</li>
  <li>8GB EMMC Flash</li>
  <li>10/100M Ethernet RJ45</li>
  <li>A CSI input connector Camera</li>
  <li>Supports 8-bit YUV422 CMOS sensor interface</li>
  <li>Supports CCIR656 protocol for NTSC and PAL</li>
  <li>Supports SM pixel camera sensor</li>
  <li>Supports video capture solution up to 1080p@30fps</li>
  <li>MIC</li>
  <li>Supports HDMI output with HDCP</li>
  <li>Supports HDMI CEC</li>
  <li>Supports HDMI 30 function</li>
  <li>Integrated CVBS</li>
  <li>Supports simultaneous output of HDMI and CVBS</li>
  <li>v3.5 mm Jack and HDMI</li>
  <li>DC input can supply power, but USB OTG input don’t supply power</li>
  <li>Three USB 2.0 HOST, one USB 2.0 OTG</li>
  <li>Power Button(SW4)</li>
  <li>40 Pins Header</li>
  <li>GPIO(1x3) pin</li>
  <li>UART, ground.</li>
  <li>Power led &amp; Status led</li>
  <li>IR input, POWER</li>
  <li>Android Ubuntu, Debian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/item/32670775037.html">Aliexpress</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/orange_pi_pc_plus.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 25 Mar 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_pc_plus/</guid>
    </item>

    <item>
      <title>Orange Pi Plus 2E</title>
      <link>https://circuitpython.org/blinka/orange_pi_plus_2e/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/orange_pi_plus_2e.png 300w,
               /assets/images/boards/large/orange_pi_plus_2e.png 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/orange_pi_plus_2e.png" alt="Image of Board">

<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>What’s Orange Pi Plus 2E？
It’s an open-source single-board computer. It can run Android 4.4 , Ubuntu, Debian Image, it uses the AllWinner H3 SoC, and has 2GB DDR3 SDRAM</p>

<p>What can I do with Orange Pi Plus 2E?
Build…
A computer
A wireless server
Games
Music and sounds
HD video
A speaker
Android
Scratch
Pretty much anything else, because Orange Pi Plus 2E is open source</p>

<p>Who’s it for?
Orange Pi Plus 2E is for anyone who wants to start creating with technology – not just consuming it. It’s a simple, fun, useful tool that you can use to start taking control of the world around you.</p>

<ul>
  <li>H3 Quad-core Cortex-A7 H.265/HEVC 4K</li>
  <li>Mali400MP2 GPU @600MHz</li>
  <li>Supports OpenGL ES 2.0</li>
  <li>2GB DDR3 (shared with GPU)</li>
  <li>16GB EMMC Flash</li>
  <li>TF card (Max. 32GB) / MMC card slot</li>
  <li>10/100M Ethernet RJ45</li>
  <li>WiFi - Realtek RTL8189ETV, IEEE 802.11 b/g/n</li>
  <li>A CSI input connector Camera</li>
  <li>Supports 8-bit YUV422 CMOS sensor interface</li>
  <li>Supports CCIR656 protocol for NTSC and PAL</li>
  <li>Supports SM pixel camera sensor</li>
  <li>Supports video capture solution up to 1080p@30fps</li>
  <li>MIC</li>
  <li>Supports HDMI output with HDCP</li>
  <li>Supports HDMI CEC</li>
  <li>Supports HDMI 30 function</li>
  <li>Integrated CVBS</li>
  <li>Supports simultaneous output of HDMI and CVBS</li>
  <li>v3.5 mm Jack and HDMI</li>
  <li>vDC input can supply power, but USB OTG input don’t supply power</li>
  <li>Three USB 2.0 HOST, one USB 2.0 OTG</li>
  <li>Power Button(SW4), Recovery Button(SW3), Uboot Button(SW2)</li>
  <li>40 Pins Header</li>
  <li>GPIO(1x3) pin</li>
  <li>UART, ground.</li>
  <li>Power led &amp; Status led</li>
  <li>IR input, POWER</li>
  <li>Android Ubuntu, Debian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/item/32665196281.html?spm=2114.12010612.8148356.1.382d5e2771I2wb">Aliexpress</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/orange_pi_plus_2e.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Sat, 18 Jan 2020 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_plus_2e/</guid>
    </item>

    <item>
      <title>Orange Pi R1</title>
      <link>https://circuitpython.org/blinka/orange_pi_r1/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/orange_pi_r1.jpg 300w,
               /assets/images/boards/large/orange_pi_r1.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/orange_pi_r1.jpg" alt="Image of Board">

<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>What’s Orange Pi R1？It’s an open-source single-board computer. It can run Android 4.4, Ubuntu, Debian Image. It uses the AllWinner H2 SoC, and has 256MB DDR3 SDRAM.</p>

<ul>
  <li>H2 Quad-core 32-bit Cortex-A7</li>
  <li>Mali400MP2 GPU @600MHz</li>
  <li>Supports OpenGL ES 2.0</li>
  <li>256MB DDR3 (shared with GPU)</li>
  <li>TF card (Max. 32GB) / Spi flash(16MB)</li>
  <li>100M Ethernet 1 RJ45 (onboard 100Mbps)</li>
  <li>100M Ethernet 2 RJ45 (RTL8152B)</li>
  <li>Onboard Wifi + Bluetooth</li>
  <li>Realtek RTL8189FTV, IEEE 802.11 b/g/n</li>
  <li>Supports external board via 13 pins</li>
  <li>USB OTG can supply power</li>
  <li>GPIO(1x3) pin</li>
  <li>UART, ground.</li>
  <li>Power Button(SW602)</li>
  <li>26 Pin Header</li>
  <li>13 Pin Header, with 2x USB, IR pin, AUDIO(MIC, AV)</li>
  <li>Power led &amp; Status led</li>
  <li>Android4.4, Lubuntu, Debian, Armbian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/item/Orange-Pi-R1-H2-256MB-Quad-Core-Cortex-A7-Open-source-development-board-beyond-Raspberry-Pi/32827494728.html">Aliexpress</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/orange_pi_r1.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 04 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_r1/</guid>
    </item>

    <item>
      <title>Orange Pi Zero</title>
      <link>https://circuitpython.org/blinka/orange_pi_zero/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/orange_pi_zero.jpg 300w,
               /assets/images/boards/large/orange_pi_zero.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/orange_pi_zero.jpg" alt="Image of Board">

<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>Orange Pi Zero is for anyone who wants to start creating with technology – not just consuming it. It’s a simple, fun, useful tool that you can use to start taking control of the world around you.</p>

<ul>
  <li>H2 Quad-core 32-bit Cortex-A7</li>
  <li>Mali400MP2 GPU @600MHz</li>
  <li>Supports OpenGL ES 2.0</li>
  <li>256MB DDR3 (shared with GPU)</li>
  <li>TF card (Max. 32GB) / Spi flash(16MB)</li>
  <li>100M Ethernet RJ45 (onboard 100Mbps)</li>
  <li>Onboard Wifi + Bluetooth</li>
  <li>Realtek RTL8189FTV, IEEE 802.11 b/g/n</li>
  <li>Supports external board via 13 pins</li>
  <li>USB 2.0 HOST and one USB 2.0 OTG</li>
  <li>GPIO(1x3) pin</li>
  <li>UART, ground.</li>
  <li>Power Button(SW602)</li>
  <li>26 Pin Header</li>
  <li>13 Pin Header, with 2x USB, IR pin, AUDIO(MIC, AV)</li>
  <li>Power led &amp; Status led</li>
  <li>Android4.4, Lubuntu, Debian, Armbian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/item/4000049806939.html?spm=2114.12010612.8148356.1.7a5b1debQdbkLe">Aliexpress</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/orange_pi_zero.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_zero/</guid>
    </item>

    <item>
      <title>Orange Pi Zero Plus</title>
      <link>https://circuitpython.org/blinka/orange_pi_zero_plus/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/orange_pi_zero_plus.jpg 300w,
               /assets/images/boards/large/orange_pi_zero_plus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/orange_pi_zero_plus.jpg" alt="Image of Board">

<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>What’s Orange Pi Zero Plus？</p>

<p>It’s an open-source single-board computer. It can run Android 5.1, Ubuntu, Debian image. It uses the AllWinner H5 SoC, and has 512MB DDR3 SDRAM.</p>

<p>What can I do with Orange Pi Zero Plus?</p>

<p>Build…
A computer
A wireless server
Games
Music and sounds
HD video
A speaker
Android
Scratch
Pretty much anything else, because Orange Pi Zero Plus is open source</p>

<p>Who’s it for?</p>

<p>Orange Pi Zero Plus is for anyone who wants to start creating with technology – not just consuming it. It’s a simple, fun, useful tool that you can use to start taking control of the world around you.</p>

<ul>
  <li>H5 Quad-core Cortex-A53</li>
  <li>H5 Mali450 GPU</li>
  <li>512MB DDR3 (shared with GPU)</li>
  <li>TF card (Max. 32GB) / Spi flash(2MB)</li>
  <li>Realtek RTL8189FTV, IEEE 802.11 b/g/n</li>
  <li>1000M/100M/10M Ethernet RJ45</li>
  <li>Supports external board via 13pins</li>
  <li>USB OTG can supply power</li>
  <li>UART, ground</li>
  <li>One USB 2.0 HOST, One USB 2.0 OTG</li>
  <li>Power Button(SW602)</li>
  <li>26 Pins Header, compatible with Raspberry Pi B+</li>
  <li>13 Pins Header, with 2x USB, IR pin, AUDIO(MIC, AV)</li>
  <li>Power led &amp; Status led</li>
  <li>Android5.1, Lubuntu, Debian, Armbian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.aliexpress.com/item/32828347476.html">AliExpress</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/orange_pi_zero_plus.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Thu, 14 Jan 2021 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_zero_plus/</guid>
    </item>

    <item>
      <title>Orange Pi Zero Plus2</title>
      <link>https://circuitpython.org/blinka/orange_pi_zero_plus2/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/orange_pi_zero_plus2.jpg 300w,
               /assets/images/boards/large/orange_pi_zero_plus2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/orange_pi_zero_plus2.jpg" alt="Image of Board">

<p>By Shenzhen Xunlong Software CO.,Limited</p> <p>What’s Orange Pi Zero Plus2？</p>

<p>It’s an open-source single-board computer. It can run Android 4.4(H3 version)/Android 5.1(H5 version) , Ubuntu, Debian, it uses the AllWinner H3/H5 SoC, and has 512MB DDR3 SDRAM.</p>

<p>What can I do with Orange Pi Zero Plus2?</p>

<p>Build…
A computer
A wireless server
Games
Music and sounds
HD video
A speaker
Android
Scratch
Pretty much anything else, because Orange Pi Zero Plus2 is open source</p>

<p>Who’s it for?
Orange Pi Zero Plus2 is for anyone who wants to start creating with technology – not just consuming it. It’s a simple, fun, useful tool that you can use to start taking control of the world around you.</p>

<ul>
  <li>H5 Quad-core Cortex-A53</li>
  <li>H3 Quad-core Cortex-A7</li>
  <li>H5 Mali450 GPU</li>
  <li>H3 Mali400MP2 GPU</li>
  <li>512MB DDR3 (shared with GPU)</li>
  <li>AP6212, IEEE 802.11 b/g/n, BT4.2</li>
  <li>A CSI input connector Camera</li>
  <li>Supports 8-bit YUV422 CMOS sensor interface</li>
  <li>Supports CCIR656 protocol for NTSC and PAL</li>
  <li>Supports SM pixel camera sensor</li>
  <li>Supports video capture solution up to 1080p@30fps</li>
  <li>Supports HDMI output with HDCP</li>
  <li>Supports HDMI CEC</li>
  <li>Supports HDMI 30 function</li>
  <li>USB OTG can supply power</li>
  <li>UART, ground</li>
  <li>Power Button</li>
  <li>26 Pins Header, compatible with Raspberry Pi B+</li>
  <li>13 Pins Header, with 2x USB, IR pin, AUDIO(MIC, AV)</li>
  <li>Power led &amp; Status led</li>
  <li>Android Ubuntu, Debian, Raspbian Image</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.newegg.com/p/285-002U-00005">Newegg</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/orange_pi_zero_plus2.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 02 Nov 2020 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/orange_pi_zero_plus2/</guid>
    </item>

    <item>
      <title>Pine A64+</title>
      <link>https://circuitpython.org/blinka/pine64/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pine64.png 300w,
               /assets/images/boards/large/pine64.png 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pine64.png" alt="Image of Board">

<p>By Pine64</p> <p>The PINE A64 (+) is the first pine64.org Single Board Computer powered by Allwinner’s A64 Quad-Core ARM Cortex A53 64-Bit SOC. There are many Operating Systems available for the PINE A64 (+) created by the open source community and various partner projects. Currently the majority of Linux distributions for the PINE A64 are using mainline Linux but there are a number of BSP-based distribution and / or legacy systems that you can download too.</p>

<p>Apart from Linux, you also have a choice of a selection of *BSDs, Android, Remix OS and Windows IoT.</p>

<ul>
  <li>Allwinner A64 Quad Core SOC with Mali 400 MP2 GPU</li>
  <li>DDR3 RAM (up to 2GB)</li>
  <li>Gigabit Ethernet</li>
  <li>Micro SD</li>
  <li>HD Digital Video Out</li>
  <li>2x USB 2.0 Host</li>
  <li>Euler Bus</li>
  <li>Expansion Bus</li>
  <li>PI-2 Bus</li>
  <li>Touch Panel Port (TP)</li>
  <li>Display Serial Interface (DSI) Port</li>
  <li>IR R/X Port</li>
  <li>Real Time Clock Port (RTC)</li>
  <li>Lithium Battery Port</li>
  <li>CMOS Sensor Interface Port</li>
  <li>Optional 802.11GBN + BT 4.0 module expansion module</li>
  <li>Headphone Jack</li>
  <li>Micro USB Power (5V 2A) Port</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://store.pine64.org/?product=pine-a64-board-2gb">pine64 2GB</a></li>
  <li><a href="https://store.pine64.org/?product=pine-a64-board-1gb">pine64 1GB</a></li>
  <li><a href="https://store.pine64.org/?product=pine-a64-board">pine64 512MB</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/pine64.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Thu, 09 Jan 2020 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/pine64/</guid>
    </item>

    <item>
      <title>PINE H64</title>
      <link>https://circuitpython.org/blinka/pine_h64/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pine_h64.jpg 300w,
               /assets/images/boards/large/pine_h64.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pine_h64.jpg" alt="Image of Board">

<p>By Pine64</p> <p>PINE H64 is latest Single Board Computer by Pine64. Its powered by an Allwinner “H6” Quad-Core ARM Cortex A53 64-Bit Processor with MALI T-722 GPU. The PINE H64 is equipped with up-to 3GB LPDDR3 PC-1600 system memory and 128Mb SPI boot Flash. There is also an optional eMMC module (up to 128GB) and microSD slot for booting. The board is equipped with an onboard build-in 11n Wifi/BT, 1x USB 3.0 Host, 2x USB 2.0 Host, Gigabit Ethernet, PI-2 GPIO Bus, Euler GPIO Bus as well as many other peripheral device interface such as UART, SPI, I2C, for makers to integrate with sensors and other peripherals.</p>

<ul>
  <li>Allwinner H6 Quad-Core SOC with Mali T-722 MP2</li>
  <li>LPDDR3 RAM (up to 3GB)</li>
  <li>Gigabit Ethernet</li>
  <li>Micro SD Slot</li>
  <li>eMMC Module Slot</li>
  <li>SPI Flash 128Mbit</li>
  <li>4K Digital Video Out</li>
  <li>2x USB 2.0 Host</li>
  <li>1x USB 3.0 Host</li>
  <li>PI-2 Bus</li>
  <li>IR R/X Port</li>
  <li>Real Time Clock Port (RTC)</li>
  <li>A/V Jack</li>
  <li>Integrated WiFi 802.11n / BT 4.0</li>
  <li>Power, Reset and Recovery buttons</li>
  <li>3.5mm Barrel Power (5V 3A) Port</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://pine64.com/product/pine-h64-model-b-2gb-single-board-computer">pine64 2GB</a></li>
  <li><a href="https://pine64.com/product/pine-h64-model-b-3gb-single-board-computer/">pine64 3GB</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/pine_h64.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Sun, 01 Nov 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/pine_h64/</guid>
    </item>

    <item>
      <title>PocketBeagle</title>
      <link>https://circuitpython.org/blinka/pocketbeagle/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/pocketbeagle.jpg 300w,
               /assets/images/boards/large/pocketbeagle.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/pocketbeagle.jpg" alt="Image of Board">

<p>By BeagleBoard</p> <p>Want a powerful 1GHz AM3358 powered Linux single board that’s ultra-tiny and open-source? PocketBeagle offers a wealth of computer power in a small footprint (pawprint?). This board is just like the BeagleBone Black but small enough to fit in your wallet. It has a fully-integrated chip that combines the processor and RAM all on one chip, so it’s super small. Despite the compact shape, there are 72 total breakout pads, a microSD card slot for your filesystem and OS, and a native USB connection</p>

<p>Compared to other single board Linux computers, what differentiates the BeagleBone is that it has multiple I2C, SPI and UART peripherals (many boards only have one of each), built in hardware PWMs, analog inputs, and two separate 200MHz microcontroller system called the PRU that can handle real-time tasks like displaying to RGB matrix displays or NeoPixels.</p>

<p>It’s not too much larger than our Feathers, but comes with 72 expansion pin headers, high-speed USB, 8 analog pins, 44 digital I/Os, and plenty of digital interface peripherals.</p>

<p>You can also add a USB host connection by wiring a USB A socket to the broken out USB host connections labeled VI, D+, D-, ID and GND. Then plug in any USB Ethernet, Bluetooth, and Wi-Fi device with available Linux drivers.</p>

<ul>
  <li>Processor: Octavo Systems OSD3358 1GHz ARM® Cortex-A8</li>
  <li>512MB DDR3 RAM integrated</li>
  <li>Integrated power management</li>
  <li>2×32-bit 200-MHz programmable real-time units (PRUs)</li>
  <li>ARM Cortex-M3</li>
  <li>Based on new Octavo Systems OSD3358-SM 21mm x 21mm system-in-package that includes 512MB DDR3 RAM, 1-GHz ARM Cortex-A8 CPU, 2x 200-MHz PRUs, ARM Cortex-M3, 3D accelerator, power/battery management and EEPROM</li>
  <li>72 expansion pin headers with power and battery I/Os, high-speed USB, 8 analog inputs, 44 digital I/Os and numerous digital interface peripherals</li>
  <li>microUSB host/client and microSD connectors</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4179">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/pocketbeagle.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 03 Dec 2019 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/pocketbeagle/</guid>
    </item>

    <item>
      <title>Raspberry Pi 1 Model A</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_1a/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_1a.jpg 300w,
               /assets/images/boards/large/raspberry_pi_1a.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_1a.jpg" alt="Image of Board">

<p>By Raspberry Pi Foundation</p> <p>The Raspberry Pi 1 Model A is the original Model A.  In November 2014 It was superseded by the Raspberry Pi 1 Model A+</p>

<ul>
  <li>Broadcom BCM2835, ARM11 76JZF-S SoC @ 700MHz</li>
  <li>256MB RAM</li>
  <li>26-pin GPIO header</li>
  <li>Separate Composite Video Output</li>
  <li>1 USB 2.0 port</li>
  <li>CSI camera port for connecting a Raspberry Pi camera</li>
  <li>DSI display port for connecting a Raspberry Pi touchscreen display</li>
  <li>Stereo audio output port</li>
  <li>Full-size SD port for loading your operating system and storing data</li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/raspberry_pi_1a.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_1a/</guid>
    </item>

    <item>
      <title>Raspberry Pi 1 Model A+</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_1aplus/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_1aplus.jpg 300w,
               /assets/images/boards/large/raspberry_pi_1aplus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_1aplus.jpg" alt="Image of Board">

<p>By Raspberry Pi Foundation</p> <p>The Model A+ is the low-cost variant of the Raspberry Pi. It replaced the original Model A in November 2014.</p>

<ul>
  <li>Broadcom BCM2835, ARM11 76JZF-S SoC @ 700MHz</li>
  <li>512MB RAM</li>
  <li>Extended 40-pin GPIO header</li>
  <li>Full-size HDMI</li>
  <li>1 USB 2.0 port</li>
  <li>CSI camera port for connecting a Raspberry Pi camera</li>
  <li>DSI display port for connecting a Raspberry Pi touchscreen display</li>
  <li>4-pole stereo output and composite video port</li>
  <li>Micro SD port for loading your operating system and storing data</li>
  <li>5V/2A DC power input</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.raspberrypi.org/products/raspberry-pi-1-model-a-plus/">Raspberry Pi</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/raspberry_pi_1aplus.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_1aplus/</guid>
    </item>

    <item>
      <title>Raspberry Pi 1 Model B</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_1b/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_1b.jpg 300w,
               /assets/images/boards/large/raspberry_pi_1b.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_1b.jpg" alt="Image of Board">

<p>By Raspberry Pi Foundation</p> <p>The Model B was the original Raspberry Pi Model B and consisted of two revisions.  In July 2014 It was superseded by the Raspberry Pi 1 Model B+</p>

<ul>
  <li>Broadcom BCM2835, ARM11 76JZF-S SoC @ 700MHz</li>
  <li>512MB RAM</li>
  <li>26-pin GPIO header</li>
  <li>Separate Composite Video Output</li>
  <li>2 USB 2.0 ports</li>
  <li>CSI camera port for connecting a Raspberry Pi camera</li>
  <li>DSI display port for connecting a Raspberry Pi touchscreen display</li>
  <li>Stereo audio output port</li>
  <li>Full-size SD port for loading your operating system and storing data</li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/raspberry_pi_1b.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_1b/</guid>
    </item>

    <item>
      <title>Raspberry Pi 1 Model B+</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_1bplus/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_1bplus.jpg 300w,
               /assets/images/boards/large/raspberry_pi_1bplus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_1bplus.jpg" alt="Image of Board">

<p>By Raspberry Pi Foundation</p> <p>The Model B+ is the final revision of the original Raspberry Pi. It replaced the Model B in July 2014 and was superseded by the Raspberry Pi 2 Model B</p>

<ul>
  <li>Broadcom BCM2835, ARM11 76JZF-S SoC @ 700MHz</li>
  <li>512MB RAM</li>
  <li>Extended 40-pin GPIO header</li>
  <li>Full-size HDMI</li>
  <li>4 USB 2.0 ports</li>
  <li>CSI camera port for connecting a Raspberry Pi camera</li>
  <li>DSI display port for connecting a Raspberry Pi touchscreen display</li>
  <li>4-pole stereo output and composite video port</li>
  <li>Micro SD port for loading your operating system and storing data</li>
  <li>5V/2A DC power input</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/1914">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/raspberry_pi_1bplus.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_1bplus/</guid>
    </item>

    <item>
      <title>Raspberry Pi 2 Model B</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_2b/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_2b.jpg 300w,
               /assets/images/boards/large/raspberry_pi_2b.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_2b.jpg" alt="Image of Board">

<p>By Raspberry Pi Foundation</p> <p>Didn’t think the Raspberry Pi could get any better? You’re in for a big surprise! The Raspberry Pi 2 Model B is out and it’s amazing! With an upgraded ARM Cortex-A53 quad-core processor, Dual Core VideoCore IV Multimedia coprocessor, and a full Gigabyte of RAM, this pocket computer has moved from being a ‘toy’ to a real desktop PC!</p>

<p>The Raspberry Pi 2 Model B is the second-generation Raspberry Pi. It replaced the original Raspberry Pi 1 Model B+ in February 2015.</p>

<ul>
  <li>A 900MHz quad-core ARM Cortex-A7 CPU</li>
  <li>1GB RAM</li>
  <li>100 Base Ethernet</li>
  <li>4 USB ports</li>
  <li>40 GPIO pins</li>
  <li>Full HDMI port</li>
  <li>Combined 3.5mm audio jack and composite video</li>
  <li>Camera interface (CSI)</li>
  <li>Display interface (DSI)</li>
  <li>Micro SD card slot</li>
  <li>VideoCore IV 3D graphics core</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.raspberrypi.org/products/raspberry-pi-2-model-b/">Raspberry Pi</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/raspberry_pi_2b.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_2b/</guid>
    </item>

    <item>
      <title>Raspberry Pi 3 Model A+</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_3aplus/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_3aplus.jpg 300w,
               /assets/images/boards/large/raspberry_pi_3aplus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_3aplus.jpg" alt="Image of Board">

<p>By Raspberry Pi Foundation</p> <p>The Raspberry Pi 3 Model A+ is the latest board for the minimalist Pi fan. Like the Raspberry Pi 3 Model B+, it boasts a 64-bit quad core processor running at 1.4 GHz, dual-band 2.4 GHz and 5 GHz wireless LAN, and Bluetooth 4.3/BLE. This low-cost Pi uses the same processor as the model 3 B+, but does away with the Ethernet jack and three of the USB ports. It’s still compatible with all Pi operating systems and software, and has the exact same 40 pin GPIO connector and camera/display sockets, so any HATs or Pi Plates or other things that plug into the model B+ will work just the same.</p>

<ul>
  <li>Broadcom BCM2837B0, Cortex-A53 (ARMv8) 64-bit SoC @ 1.4GHz</li>
  <li>512MB LPDDR2 SDRAM</li>
  <li>2.4GHz and 5GHz IEEE 802.11.b/g/n/ac wireless LAN, Bluetooth 4.2/BLE</li>
  <li>Extended 40-pin GPIO header</li>
  <li>Full-size HDMI</li>
  <li>Single USB 2.0 ports</li>
  <li>CSI camera port for connecting a Raspberry Pi Camera Module</li>
  <li>DSI display port for connecting a Raspberry Pi Touch Display</li>
  <li>4-pole stereo output and composite video port</li>
  <li>Micro SD port for loading your operating system and storing data</li>
  <li>5V/2.5A DC power input</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4027">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/raspberry_pi_3aplus.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_3aplus/</guid>
    </item>

    <item>
      <title>Raspberry Pi 3 Model B</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_3b/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_3b.jpg 300w,
               /assets/images/boards/large/raspberry_pi_3b.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_3b.jpg" alt="Image of Board">

<p>By Raspberry Pi Foundation</p> <p>Did you really think the Raspberry Pi would stop getting better? At this point, we sound like a broken record, extolling on the new Pi’s myriad improvements like we’re surprised that the folks at the Raspberry Pi Foundation are continuously making their flagship board better.  Still, we’ll say it again - the Raspberry Pi team have outdone themselves. The Raspberry Pi 3 Model B is out and it is AMAZING.</p>

<ul>
  <li>Quad Core 1.2GHz Broadcom BCM2837 64bit CPU</li>
  <li>1GB RAM</li>
  <li>BCM43438 wireless LAN and Bluetooth Low Energy (BLE) on board</li>
  <li>100 Base Ethernet</li>
  <li>40-pin extended GPIO</li>
  <li>4 USB 2 ports</li>
  <li>4 Pole stereo output and composite video port</li>
  <li>Full size HDMI</li>
  <li>CSI camera port for connecting a Raspberry Pi camera</li>
  <li>DSI display port for connecting a Raspberry Pi touchscreen display</li>
  <li>Micro SD port for loading your operating system and storing data</li>
  <li>Upgraded switched Micro USB power source up to 2.5A</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/3055">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/raspberry_pi_3bplus.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_3b/</guid>
    </item>

    <item>
      <title>Raspberry Pi 3 Model B+</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_3bplus/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_3bplus.jpg 300w,
               /assets/images/boards/large/raspberry_pi_3bplus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_3bplus.jpg" alt="Image of Board">

<p>By Raspberry Pi Foundation</p> <p>The Raspberry Pi 3 Model B+ is the most popular Raspberry Pi computer made, and the Pi Foundation knows you can always make a good thing better! And what could make the Pi 3 better? How about a faster processor, 5 GHz WiFi, and updated Ethernet chip with PoE capability? Good guess - that’s exactly what they did!</p>

<p>The Raspberry Pi 3 Model B+ is the latest product in the Raspberry Pi 3 range, boasting an updated 64-bit quad core processor running at 1.4GHz with built-in metal heatsink, dual-band 2.4GHz and 5GHz wireless LAN, faster (300 mbps) Ethernet, and PoE capability via a separate PoE HAT.</p>

<ul>
  <li>Broadcom BCM2837B0, Cortex-A53 (ARMv8) 64-bit SoC @ 1.4GHz</li>
  <li>1GB LPDDR2 SDRAM</li>
  <li>2.4GHz and 5GHz IEEE 802.11.b/g/n/ac wireless LAN, Bluetooth 4.2, BLE</li>
  <li>Gigabit Ethernet over USB 2.0 (maximum throughput 300 Mbps)</li>
  <li>Extended 40-pin GPIO header</li>
  <li>Full-size HDMI</li>
  <li>4 USB 2.0 ports</li>
  <li>CSI camera port for connecting a Raspberry Pi camera</li>
  <li>DSI display port for connecting a Raspberry Pi touchscreen display</li>
  <li>4-pole stereo output and composite video port</li>
  <li>Micro SD port for loading your operating system and storing data</li>
  <li>5V/2.5A DC power input</li>
  <li>Power-over-Ethernet (PoE) support (requires separate PoE HAT)</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/3775">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/raspberry_pi_3bplus.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_3bplus/</guid>
    </item>

    <item>
      <title>Raspberry Pi 400 Desktop</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_400/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_400.jpg 300w,
               /assets/images/boards/large/raspberry_pi_400.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_400.jpg" alt="Image of Board">

<p>By Raspberry Pi Foundation</p> <p>Raspberry Pi 400 is your complete personal computer, built into a compact keyboard. Featuring a quad-core 64-bit processor, 4GB of RAM, wireless networking, dual-display output, and 4K video playback, as well as a 40-pin GPIO header, it’s the most powerful and easy-to-use Raspberry Pi computer yet.</p>

<ul>
  <li>Broadcom BCM2711 quad-core Cortex-A72 (ARM v8) 64-bit SoC @ 1.8GHz</li>
  <li>4GB LPDDR4-3200</li>
  <li>Dual-band (2.4GHz and 5.0GHz) IEEE 802.11b/g/n/ac wireless LAN</li>
  <li>Bluetooth 5.0, BLE</li>
  <li>Gigabit Ethernet</li>
  <li>2 × USB 3.0 and 1 × USB 2.0 ports</li>
  <li>Horizontal 40-pin GPIO header</li>
  <li>2 × micro HDMI ports (supports up to 4Kp60)</li>
  <li>H.265 (4Kp60 decode); H.264 (1080p60 decode, 1080p30 encode); OpenGL ES 3.0 graphics</li>
  <li>MicroSD card slot for operating system and data storage</li>
  <li>78- or 79-key compact keyboard (depending on regional variant)</li>
  <li>5V DC via USB connector</li>
  <li>Operating temperature: 0°C to +50°C ambient</li>
  <li>Maximum dimensions 286 mm × 122 mm × 23 mm</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4796">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/raspberry_pi_400.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 02 Nov 2020 00:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_400/</guid>
    </item>

    <item>
      <title>Raspberry Pi 4 Model B</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_4b/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_4b.jpg 300w,
               /assets/images/boards/large/raspberry_pi_4b.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_4b.jpg" alt="Image of Board">

<p>By Raspberry Pi Foundation</p> <p>The Raspberry Pi 4 Model B is the newest Raspberry Pi computer made, and the Pi Foundation knows you can always make a good thing better! And what could make the Pi 4 better than the 3? How about a faster processor, USB 3.0 ports, and updated Gigabit Ethernet chip with PoE capability? Good guess - that’s exactly what they did!</p>

<p>The Raspberry Pi 4 is the latest product in the Raspberry Pi range, boasting an updated 64-bit quad core processor running at 1.4GHz with built-in metal heatsink, USB 3 ports, dual-band 2.4GHz and 5GHz wireless LAN, faster (300 mbps) Ethernet, and PoE capability via a separate PoE HAT.</p>

<ul>
  <li>Broadcom BCM2711, Quad core Cortex-A72 (ARM v8) 64-bit SoC @ 1.5GHz</li>
  <li>1GB, 2GB or 4GB LPDDR4-2400 SDRAM (depending on model)</li>
  <li>2.4 GHz and 5.0 GHz IEEE 802.11ac wireless, Bluetooth 5.0, BLE</li>
  <li>Gigabit Ethernet</li>
  <li>2 USB 3.0 ports; 2 USB 2.0 ports.</li>
  <li>Raspberry Pi standard 40 pin GPIO header (fully backwards compatible with previous boards)</li>
  <li>2 × micro-HDMI ports (up to 4kp60 supported)</li>
  <li>2-lane MIPI DSI display port</li>
  <li>2-lane MIPI CSI camera port</li>
  <li>4-pole stereo audio and composite video port</li>
  <li>H.265 (4kp60 decode), H264 (1080p60 decode, 1080p30 encode)</li>
  <li>OpenGL ES 3.0 graphics</li>
  <li>Micro-SD card slot for loading operating system and data storage</li>
  <li>5V DC via USB-C connector (minimum 3A)</li>
  <li>5V DC via GPIO header (minimum 3A)</li>
  <li>Power over Ethernet (PoE) enabled (requires separate PoE HAT)</li>
  <li>Operating temperature: 0 – 50 degrees C ambient</li>
  <li>A good quality 2.5A power supply can be used if downstream USB peripherals consume less than 500mA in total.</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4295">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/raspberry_pi_4b.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 24 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_4b/</guid>
    </item>

    <item>
      <title>Raspberry Pi Compute Module 1</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_cm1/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_cm1.jpg 300w,
               /assets/images/boards/large/raspberry_pi_cm1.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_cm1.jpg" alt="Image of Board">

<p>By Raspberry Pi Foundation</p> <p>The Compute Module is a Raspberry Pi in a more flexible form factor, intended for industrial application.</p>

<p>The Compute Module contains the guts of a Raspberry Pi (the BCM2835 processor and 512MB RAM) as well as a 4GB eMMC Flash device (which is the equivalent of the SD card in the Pi). This is all integrated on to a small 67.6x30mm board which fits into a standard DDR2 SODIMM connector (the same type of connector as used for laptop memory). The Flash memory is connected directly to the processor on the board, but the remaining processor interfaces are available to the user via the connector pins. You get the full flexibility of the BCM2835 SoC (which means that many more GPIOs and interfaces are available as compared to the Raspberry Pi), and designing the Module into a custom system should be relatively straightforward as we’ve put all the tricky bits onto the Module itself.</p>

<p>The Compute Module is available for purchase in single units, or in batches of hundreds or thousands. To get started designing a PCB to use the module, we provide an open-source breakout board with a single module in an affordable development kit.</p>

<p>The original Compute Module was replaced by CM3 in January 2017 but is compatible with the new Compute Module IO Board V3, and remains available for sale.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.raspberrypi.org/products/compute-module-io-board-v3/">Raspberry Pi Foundation</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/raspberry_pi_cm1.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 24 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_cm1/</guid>
    </item>

    <item>
      <title>Raspberry Pi Compute Module 3</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_cm3/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_cm3.jpg 300w,
               /assets/images/boards/large/raspberry_pi_cm3.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_cm3.jpg" alt="Image of Board">

<p>By Raspberry Pi Foundation</p> <p>The Compute Module 3 contains the guts of a Raspberry Pi 3 (the BCM2837 processor and 1GB RAM) as well as an optional 4GB eMMC Flash device (which is the equivalent of the SD card in the Pi). The Pi 3 has a processor speed of 1.2GHz and runs at roughly 10 times the speed of the Pi 1 due to its quad-core CPU. This is all integrated on to a small 67.6mm x 31mm board which fits into a standard DDR2 SODIMM connector (the same type of connector as used for laptop memory). The Flash memory is connected directly to the processor on the board, but the remaining processor interfaces are available to the user via the connector pins. You get the full flexibility of the BCM2837 SoC (which means that many more GPIOs and interfaces are available as compared to the Raspberry Pi), and designing the Module into a custom system should be relatively straightforward as we’ve put all the tricky bits onto the Module itself.</p>

<p>The Compute Module is available for purchase in single units, or in batches of hundreds or thousands. To get started designing a PCB to use the Module, we provide an open-source breakout board with a single Module in an affordable development kit.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.raspberrypi.org/products/compute-module-io-board-v3/">Raspberry Pi Foundation</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/raspberry_pi_cm3.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 24 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_cm3/</guid>
    </item>

    <item>
      <title>Raspberry Pi Compute Module 3 Lite</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_cm3lite/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_cm3lite.jpg 300w,
               /assets/images/boards/large/raspberry_pi_cm3lite.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_cm3lite.jpg" alt="Image of Board">

<p>By Raspberry Pi Foundation</p> <p>The Compute Module 3 contains the guts of a Raspberry Pi 3 (the BCM2837 processor and 1GB RAM) as well as an optional 4GB eMMC Flash device (which is the equivalent of the SD card in the Pi). The Pi 3 has a processor speed of 1.2GHz and runs at roughly 10 times the speed of the Pi 1 due to its quad-core CPU. This is all integrated on to a small 67.6mm x 31mm board which fits into a standard DDR2 SODIMM connector (the same type of connector as used for laptop memory). The Flash memory is connected directly to the processor on the board, but the remaining processor interfaces are available to the user via the connector pins. You get the full flexibility of the BCM2837 SoC (which means that many more GPIOs and interfaces are available as compared to the Raspberry Pi), and designing the Module into a custom system should be relatively straightforward as we’ve put all the tricky bits onto the Module itself.</p>

<p>The Compute Module is available for purchase in single units, or in batches of hundreds or thousands. To get started designing a PCB to use the Module, we provide an open-source breakout board with a single Module in an affordable development kit.</p>

<p>The Compute Modules 3 Lite brings the SD card interface to the Module pins so a user can wire this up to an eMMC or SD card of their choice.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.raspberrypi.org/products/compute-module-io-board-v3/">Raspberry Pi Foundation</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/raspberry_pi_cm3lite.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 24 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_cm3lite/</guid>
    </item>

    <item>
      <title>Raspberry Pi Compute Module 3+</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_cm3plus/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_cm3plus.jpg 300w,
               /assets/images/boards/large/raspberry_pi_cm3plus.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_cm3plus.jpg" alt="Image of Board">

<p>By Raspberry Pi Foundation</p> <p>The Compute Module is a Raspberry Pi in a more flexible form factor, intended for industrial application. CM3+ (Compute Module 3+) is the Raspberry Pi 3 B+-based revision of the original Compute Module. The big update to the CM3+ compared to the CM3 series is more eMMC Flash memory and the new heat spreader on the main processor which will let it run at full speed much faster without overheating.</p>

<p>The Compute Module contains the guts of a Raspberry Pi 3 B+ (the BCM2837B0 processor and 1GB RAM) as well as a 8GB eMMC Flash device (which is the equivalent of the SD card in the Pi). The Pi 3 B+ has a processor speed of 1.2GHz and runs at roughly 10 times the speed of the Pi 1 due to its quad-core CPU. This is all integrated on to a small 67.6mm x 31.1mm board which fits into a standard DDR2 SODIMM connector (the same type of connector as used for laptop memory).</p>

<p>The Flash memory is connected directly to the processor on the board, but the remaining processor interfaces are available to the user via the connector pins. You get the full flexibility of the BCM2837B0 SoC (which means that many more GPIOs and interfaces are available as compared to the Raspberry Pi), and designing the Module into a custom system should be relatively straightforward as the Pi Foundation has put all the tricky bits onto the Module itself.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4094">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/raspberry_pi_cm3plus.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 24 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_cm3plus/</guid>
    </item>

    <item>
      <title>Raspberry Pi Compute Module 3+ Lite</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_cm3pluslite/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_cm3pluslite.jpg 300w,
               /assets/images/boards/large/raspberry_pi_cm3pluslite.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_cm3pluslite.jpg" alt="Image of Board">

<p>By Raspberry Pi Foundation</p> <p>The Compute Module is a Raspberry Pi in a more flexible form factor, intended for industrial application. CM3+ (Compute Module 3+ Lite) is the Raspberry Pi 3 B+-based revision of the original Compute Module. The big update to the CM3+ compared to the CM3 series is the new heat spreader on the main processor which will let it run at full speed much faster without overheating.</p>

<p>The Compute Module contains the guts of a Raspberry Pi 3 B+ (the BCM2837B0 processor and 1GB RAM). The Lite version does not come with on-module eMMC flash found on the Compute Module 3+. It also does not contain the WiFi/Bluetooth chipset that comes with the Pi 3 B+.</p>

<p>The Pi 3 B+ has a processor speed of 1.2GHz and runs at roughly 10 times the speed of the Pi 1 due to its quad-core CPU. This is all integrated on to a small 67.6mm x 31.1mm board which fits into a standard DDR2 SODIMM connector (the same type of connector as used for laptop memory).</p>

<p>This version is intended for users who will be adding and using an SD card interface on the interface board.</p>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4093">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/raspberry_pi_cm3pluslite.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 24 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_cm3pluslite/</guid>
    </item>

    <item>
      <title>Raspberry Pi Compute Module 4</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_cm4/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_cm4.jpg 300w,
               /assets/images/boards/large/raspberry_pi_cm4.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_cm4.jpg" alt="Image of Board">

<p>By Raspberry Pi Foundation</p> <p>Compute Module 4</p>

<p>The power of Raspberry Pi 4 in a compact form factor for deeply embedded applications. Raspberry Pi Compute Module 4 incorporates a quad-core ARM Cortex-A72 processor, dual video output, and a wide selection of other interfaces. Available in 32 variants, with a range of RAM and eMMC Flash options, and with or without wireless connectivity.</p>

<ul>
  <li>Broadcom BCM2711 quad-core Cortex-A72 (ARM v8) 64-bit SoC @ 1.5GHz</li>
  <li>H.265 (HEVC) (up to 4Kp60 decode), H.264 (up to 1080p60 decode, 1080p30 encode)</li>
  <li>OpenGL ES 3.0 graphics</li>
  <li>Options for 1GB, 2GB, 4GB or 8GB LPDDR4-3200 SDRAM (depending on variant)</li>
  <li>Options for 0GB (“Lite”), 8GB, 16GB or 32GB eMMC Flash memory (depending on variant)</li>
  <li>Option for fully certified radio module:</li>
  <li>2.4 GHz, 5.0 GHz IEEE 802.11 b/g/n/ac wireless;</li>
  <li>Bluetooth 5.0, BLE;</li>
  <li>On-board electronic switch to select either external or PCB trace antenna</li>
</ul>

<p>Compute Module 4 IO Board</p>

<p>Exposing every interface from Raspberry Pi Compute Module 4, the Compute Module 4 IO Board provides a development platform and reference base-board design for our most powerful Compute Module yet.</p>

<ul>
  <li>External power connector (+12V, +5V)</li>
  <li>2 x full-size HDMI 2.0 connectors</li>
  <li>2 x USB 2.0 connectors, with header for two additional connectors</li>
  <li>Gigabit Ethernet RJ45 with PoE support</li>
  <li>Micro USB socket for updating Compute Module 4</li>
  <li>MicroSD card socket for Compute Module 4 Lite (without eMMC) variants</li>
  <li>PCIe Gen 2 x1 socket</li>
  <li>Standard fan connector</li>
  <li>2 x MIPI DSI display FPC connectors (22-pin 0.5 mm pitch cable)</li>
  <li>2 x MIPI CSI-2 camera FPC connectors (22-pin 0.5 mm pitch cable)</li>
  <li>Standard Raspberry Pi HAT connectors</li>
  <li>Real-time clock with battery socket and ability to wake Compute Module 4</li>
  <li>Various jumpers to disable specific features, e.g. wireless connectivity, EEPROM writing</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/4782">Adafruit - CM4</a></li>
  <li><a href="https://www.adafruit.com/product/4787">Adafruit - IO Board</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/raspberry_pi_cm4.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 09 Dec 2020 19:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_cm4/</guid>
    </item>

    <item>
      <title>Raspberry Pi Zero</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_zero/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_zero.jpg 300w,
               /assets/images/boards/large/raspberry_pi_zero.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_zero.jpg" alt="Image of Board">

<p>By Raspberry Pi Foundation</p> <p>At first glance, the Pi Zero isn’t much.  It just looks like a slimmed down version of the Raspberry Pi we know and love.  But when we started to think of the possibilities - and what a well-chosen set of accessories could add - we realized the appeal.  And then we saw the price…could it be true? Yes!</p>

<p>This is the slimmest, most pared down Raspberry Pi to date.  It’s kind of like the little cousin to the Pi 2 - with just a micro SD card slot, a mini HDMI port, two micro USB ports (one for power, one for USB), and 512MB of RAM. It has a single-core 1 GHz processor chip, similar to the Pi A+ and B+.</p>

<ul>
  <li>1GHz single-core CPU</li>
  <li>512MB RAM</li>
  <li>Mini HDMI port</li>
  <li>Micro USB OTG port</li>
  <li>Micro USB power</li>
  <li>HAT-compatible 40-pin header</li>
  <li>Composite video and reset headers</li>
  <li>CSI camera connector (v1.3 only)</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/2885">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/raspberry_pi_zero.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_zero/</guid>
    </item>

    <item>
      <title>Raspberry Pi Zero W</title>
      <link>https://circuitpython.org/blinka/raspberry_pi_zerow/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/raspberry_pi_zerow.jpg 300w,
               /assets/images/boards/large/raspberry_pi_zerow.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/raspberry_pi_zerow.jpg" alt="Image of Board">

<p>By Raspberry Pi Foundation</p> <p>If you didn’t think that the Raspberry Pi Zero could possibly get any better, then boy do we have a pleasant surprise for you! The new Raspberry Pi Zero W offers all the benefits of the Pi Zero v1.3, but with one big difference – built-in WiFi!</p>

<p>More specifically, this giant upgrade is the addition of a BCM43143 WiFi chip BUILT-IN to your Raspberry Pi Zero – just like the Pi 3! No more pesky WiFi adapters - this Pi is WiFi ready. There’s also Bluetooth Low Energy (BLE) on board making the Pi an excellent IoT solution (BLE support is still in the works, software-wise).</p>

<ul>
  <li>1GHz, single-core CPU</li>
  <li>512MB RAM</li>
  <li>Mini HDMI and USB On-The-Go ports</li>
  <li>Micro USB power</li>
  <li>HAT-compatible 40-pin header</li>
  <li>Composite video and reset headers</li>
  <li>CSI camera connector</li>
  <li>802.11 b/g/n wireless LAN</li>
  <li>Bluetooth 4.1</li>
  <li>Bluetooth Low Energy (BLE)</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.adafruit.com/product/3400">Adafruit</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/raspberry_pi_zerow.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Jun 2019 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/raspberry_pi_zerow/</guid>
    </item>

    <item>
      <title>Rock Pi S</title>
      <link>https://circuitpython.org/blinka/rock_pi_s/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/rock_pi_s.jpg 300w,
               /assets/images/boards/large/rock_pi_s.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/rock_pi_s.jpg" alt="Image of Board">

<p>By Radxa Limited</p> <p>S is for Small Square.</p>

<p>ROCK Pi S is a Rockchip RK3308 based SBC(Single Board Computer) by Radxa. It equips a 64bits quad core processor, USB, ethernet, wireless connectivity and voice detection engine at the size of 1.7 inch, make it perfect for IoT and voice applications. ROCK Pi S comes in two ram sizes 256MB or 512MB DDR3, and uses uSD card for OS and storage. Optionally, ROCK Pi S can provide on board storage version with 1Gb/2Gb/4Gb/8Gb NAND flash.</p>

<p>The Rockchip RK3308 Soc used in ROCK Pi S RK3308 is a high-performance Quad-core application processor designed for intelligent voice interaction, audio input/output processing, and other digital multimedia applications. Embedded rich audio interfaces, such as I2S, PCM, TDM, PDM, SPDIF, HDMI ARC and so on, can meet different audio application development, reduce hardware development complexity and development cost.</p>

<ul>
  <li>Quad-core ARM Cortex-A35CPU</li>
  <li>Full implementation of the ARM architecture v8-A instruction set</li>
  <li>ARM Neon Advanced SIMD (single instruction, multiple data) support for accelerated media and signal processing computation</li>
  <li>ARMv8 Cryptography Extensions</li>
  <li>In-order pipeline with symmetric dual-issue of most instructions</li>
  <li>256KB unified system L2 cache</li>
  <li>Includes VFP v3 hardware to support single and double-precision operations</li>
  <li>Integrated 32KB L1 instruction cache, 32KB L1 data cache with 4-way set associative
TrustZone technology support</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://www.seeedstudio.com/ROCK-PI-S-Mini-Computer-with-Rockchip-RK3308-512MB-RAM-4Gb-NAND-Flash-p-4282.html">seeedstudio</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/rock_pi_s.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Wed, 29 Apr 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/rock_pi_s/</guid>
    </item>

    <item>
      <title>SOPINE A64</title>
      <link>https://circuitpython.org/blinka/sopine_a64/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/sopine_a64.jpg 300w,
               /assets/images/boards/large/sopine_a64.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/sopine_a64.jpg" alt="Image of Board">

<p>By Pine64</p> <p>SOPINE A64 is a compute module powered by the same Quad-Core ARM Cortex A53 64-Bit Processor used in the PINE A64 with 2G LPDDR3 RAM memory, Power Management Unit, SPI Flash and integrated MicroSD Slot (for bootable OS images microSD card). The SOPINE module has a 5 years LTS (Long Term Supply) status, which means that it will be supplied to 2022 at the very least. There is a one year warranty period for the SOPINE module.</p>

<p>This tiny compute module uses SODIMM-DDR3 form-factor and can be paired with either the Clusterboard, the Baseboard or a custom host PCB for industrial or other embedded applications. It is fully compatible with the PINE A64-LTS in terms of software support</p>

<ul>
  <li>Allwinner A64 Quad Core SOC with Mali 400 MP2 GPU</li>
  <li>LPDDR3 RAM (up to 2GB)</li>
  <li>Micro SD</li>
  <li>SPI Flash 128Mbit</li>
  <li>CMOS Sensor Interface Port</li>
  <li>SODIMM Form-Factor</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://pine64.com/product-category/sopine/">Pine64 Store</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/sopine_a64.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Tue, 17 Nov 2020 19:00:00 -0500</pubDate>
      <guid>https://circuitpython.org/blinka/sopine_a64/</guid>
    </item>

    <item>
      <title>STM32MP1 Discovery Kit 2</title>
      <link>https://circuitpython.org/blinka/stm32mp157c_dk2/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/stm32mp157c_dk2.jpg 300w,
               /assets/images/boards/large/stm32mp157c_dk2.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/stm32mp157c_dk2.jpg" alt="Image of Board">

<p>By STMicroelectronics</p> <p>The STM32MP157A-DK1 and STM32MP157C-DK2 Discovery kits leverage the capabilities of STM32MP1 Series microprocessors to allow users easily develop applications using STM32 MPU OpenSTLinux Distribution software for the main processor and STM32CubeMP1 software for the co-processor.</p>

<p>They include an ST-LINK embedded debug tool, LEDs, push-buttons, one Ethernet 1-Gbps connector, one USB Type-CTM OTG connector, four USB Type-A Host connectors, one HDMI® transceiver, one stereo headset jack with analog microphone, and one microSDTM connector.</p>

<p>To expand the functionality of the STM32MP157A-DK1 and STM32MP157C-DK2 Discovery kits, two GPIO expansion connectors are also available for ARDUINO® and Raspberry Pi® shields.</p>

<p>Additionally, the STM32MP157C-DK2 Discovery kit features an LCD display with a touch panel, and Wi-Fi® and Bluetooth® Low Energy capability.</p>

<ul>
  <li>STM32MP157 Arm®-based dual Cortex®-A7 32 bits + Cortex®-M4 32 bits MPU in TFBGA361 package</li>
  <li>ST PMIC STPMIC1</li>
  <li>4-Gbit DDR3L, 16 bits, 533 MHz</li>
  <li>1-Gbps Ethernet (RGMII) compliant with IEEE-802.3ab</li>
  <li>USB OTG HS</li>
  <li>Audio codec</li>
  <li>4 user LEDs</li>
  <li>2 user and reset push-buttons, 1 wake-up button</li>
  <li>5 V / 3 A USB Type-CTM power supply input (not provided)</li>
  <li>Board connectors:Ethernet RJ454 × USB Host Type-AUSB Type-CTM DRPMIPI DSISMHDMI®Stereo headset jack including analog microphone inputmicroSDTM cardGPIO expansion connector (Raspberry Pi® shields capability)ARDUINO® Uno V3 expansion connectors</li>
  <li>On-board ST-LINK/V2-1 debugger/programmer with USB re-enumeration capability: Virtual COM port and debug port</li>
  <li>STM32CubeMP1 and full mainline open-source Linux® STM32 MPU OpenSTLinux Distribution (such as STM32MP1Starter) software and examples</li>
  <li>Support of a wide choice of Integrated Development Environments (IDEs) including IARTM, Keil®, GCC-based IDEs</li>
  <li>4” TFT 480×800 pixels with LED backlight, MIPI DSISM interface, and capacitive touch panel</li>
  <li>Wi-Fi® 802.11b/g/n</li>
  <li>Bluetooth® Low Energy 4.1</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://estore.st.com/en/products/evaluation-tools/product-evaluation-tools/mcu-mpu-eval-tools/stm32-mcu-mpu-eval-tools/stm32-discovery-kits/stm32mp157c-dk2.html">STMicroelectronics</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/stm32mp157c_dk2.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Thu, 10 Sep 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/stm32mp157c_dk2/</guid>
    </item>

    <item>
      <title>X86 II ULTRA</title>
      <link>https://circuitpython.org/blinka/udoo_x86_ii_ultra/</link>
      <description><![CDATA[ 

  <img srcset="/assets/images/boards/small/udoo_x86_ii_ultra.jpg 300w,
               /assets/images/boards/large/udoo_x86_ii_ultra.jpg 700w"
       sizes="(max-width: 1024px) 700px,
              300px"
       src="/assets/images/boards/original/udoo_x86_ii_ultra.jpg" alt="Image of Board">

<p>By UDOO</p> <p>UDOO X86 II is the New PC: the most powerful x86 maker board ever and an Arduino™ Leonardo-compatible platform, all embedded on the same board.</p>

<p>On UDOO X86 II you can run all the software available for the PC world, from gaming to video streaming, from graphical editors to professional development platforms, plus all the software or the Arduino™ Leonardo world, including all the sketches, libraries and the official Arduino™ Leonardo IDE.</p>

<p>You won’t ever worry about lack of drivers or stuff like that. This is a true next-generation computer.</p>

<p>It is based on Quad Core 64-bit new-generation x86 processors made by Intel®, designed for the PC domain. Prodigious processors concentrated in 14 nm, with an amount of energy consumption of 5 or 6 Watt.</p>

<p>The board can be powered by a DC-jack with a standard 5.5mm/2.1mm barrel jack, internal positive, Voltage 12V ± 5%. This is not included. Alternatively, power can be provided though the VIN pin located on the header.</p>

<p>Screw/Spacers for M.2 SSD and Wifi/BT already included.</p>

<ul>
  <li>CPU Intel Pentium N3710 2.56 GHZ</li>
  <li>8 GB DDR3L Dual Channel</li>
  <li>Intel HD Graphics 405. Up to 700 MHz</li>
  <li>32GB eMMC storage</li>
  <li>Standard SATA connector</li>
  <li>M.2 Key B SSD slot</li>
  <li>Micro SD card slot</li>
  <li>Gigabit Ethernet connector</li>
  <li>M.2 Key E slot for optional Wireless modules</li>
  <li>3 x USB 3.0 type-A sockets</li>
</ul>

<h2 id="purchase">Purchase</h2>
<ul>
  <li><a href="https://shop.udoo.org/udoo-x86-ii-ultra.html">UDOO</a></li>
</ul>

<h2 id="contribute">Contribute</h2>

<p>Have some info to add for this board? Edit the source for this page <a href="https://github.com/adafruit/circuitpython-org/edit/master/_blinka/udoo_x86_ii_ultra.md">here</a>.</p>
 ]]></description>
      <category>Blinka</category>
      <pubDate>Mon, 17 Aug 2020 00:00:00 -0400</pubDate>
      <guid>https://circuitpython.org/blinka/udoo_x86_ii_ultra/</guid>
    </item>


  </channel>
</rss>
